// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: winch/winch.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_winch_2fwinch_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_winch_2fwinch_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_winch_2fwinch_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_winch_2fwinch_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_winch_2fwinch_2eproto;
namespace mavsdk {
namespace rpc {
namespace winch {
class AbandonLineRequest;
struct AbandonLineRequestDefaultTypeInternal;
extern AbandonLineRequestDefaultTypeInternal _AbandonLineRequest_default_instance_;
class AbandonLineResponse;
struct AbandonLineResponseDefaultTypeInternal;
extern AbandonLineResponseDefaultTypeInternal _AbandonLineResponse_default_instance_;
class DeliverRequest;
struct DeliverRequestDefaultTypeInternal;
extern DeliverRequestDefaultTypeInternal _DeliverRequest_default_instance_;
class DeliverResponse;
struct DeliverResponseDefaultTypeInternal;
extern DeliverResponseDefaultTypeInternal _DeliverResponse_default_instance_;
class HoldRequest;
struct HoldRequestDefaultTypeInternal;
extern HoldRequestDefaultTypeInternal _HoldRequest_default_instance_;
class HoldResponse;
struct HoldResponseDefaultTypeInternal;
extern HoldResponseDefaultTypeInternal _HoldResponse_default_instance_;
class LoadLineRequest;
struct LoadLineRequestDefaultTypeInternal;
extern LoadLineRequestDefaultTypeInternal _LoadLineRequest_default_instance_;
class LoadLineResponse;
struct LoadLineResponseDefaultTypeInternal;
extern LoadLineResponseDefaultTypeInternal _LoadLineResponse_default_instance_;
class LoadPayloadRequest;
struct LoadPayloadRequestDefaultTypeInternal;
extern LoadPayloadRequestDefaultTypeInternal _LoadPayloadRequest_default_instance_;
class LoadPayloadResponse;
struct LoadPayloadResponseDefaultTypeInternal;
extern LoadPayloadResponseDefaultTypeInternal _LoadPayloadResponse_default_instance_;
class LockRequest;
struct LockRequestDefaultTypeInternal;
extern LockRequestDefaultTypeInternal _LockRequest_default_instance_;
class LockResponse;
struct LockResponseDefaultTypeInternal;
extern LockResponseDefaultTypeInternal _LockResponse_default_instance_;
class RateControlRequest;
struct RateControlRequestDefaultTypeInternal;
extern RateControlRequestDefaultTypeInternal _RateControlRequest_default_instance_;
class RateControlResponse;
struct RateControlResponseDefaultTypeInternal;
extern RateControlResponseDefaultTypeInternal _RateControlResponse_default_instance_;
class RelativeLengthControlRequest;
struct RelativeLengthControlRequestDefaultTypeInternal;
extern RelativeLengthControlRequestDefaultTypeInternal _RelativeLengthControlRequest_default_instance_;
class RelativeLengthControlResponse;
struct RelativeLengthControlResponseDefaultTypeInternal;
extern RelativeLengthControlResponseDefaultTypeInternal _RelativeLengthControlResponse_default_instance_;
class RelaxRequest;
struct RelaxRequestDefaultTypeInternal;
extern RelaxRequestDefaultTypeInternal _RelaxRequest_default_instance_;
class RelaxResponse;
struct RelaxResponseDefaultTypeInternal;
extern RelaxResponseDefaultTypeInternal _RelaxResponse_default_instance_;
class RetractRequest;
struct RetractRequestDefaultTypeInternal;
extern RetractRequestDefaultTypeInternal _RetractRequest_default_instance_;
class RetractResponse;
struct RetractResponseDefaultTypeInternal;
extern RetractResponseDefaultTypeInternal _RetractResponse_default_instance_;
class Status;
struct StatusDefaultTypeInternal;
extern StatusDefaultTypeInternal _Status_default_instance_;
class StatusFlags;
struct StatusFlagsDefaultTypeInternal;
extern StatusFlagsDefaultTypeInternal _StatusFlags_default_instance_;
class StatusResponse;
struct StatusResponseDefaultTypeInternal;
extern StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
class SubscribeStatusRequest;
struct SubscribeStatusRequestDefaultTypeInternal;
extern SubscribeStatusRequestDefaultTypeInternal _SubscribeStatusRequest_default_instance_;
class WinchResult;
struct WinchResultDefaultTypeInternal;
extern WinchResultDefaultTypeInternal _WinchResult_default_instance_;
}  // namespace winch
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mavsdk {
namespace rpc {
namespace winch {
enum WinchResult_Result : int {
  WinchResult_Result_RESULT_UNKNOWN = 0,
  WinchResult_Result_RESULT_SUCCESS = 1,
  WinchResult_Result_RESULT_NO_SYSTEM = 2,
  WinchResult_Result_RESULT_BUSY = 3,
  WinchResult_Result_RESULT_TIMEOUT = 4,
  WinchResult_Result_RESULT_UNSUPPORTED = 5,
  WinchResult_Result_RESULT_FAILED = 6,
  WinchResult_Result_WinchResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WinchResult_Result_WinchResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WinchResult_Result_IsValid(int value);
constexpr WinchResult_Result WinchResult_Result_Result_MIN = static_cast<WinchResult_Result>(0);
constexpr WinchResult_Result WinchResult_Result_Result_MAX = static_cast<WinchResult_Result>(6);
constexpr int WinchResult_Result_Result_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
WinchResult_Result_descriptor();
template <typename T>
const std::string& WinchResult_Result_Name(T value) {
  static_assert(std::is_same<T, WinchResult_Result>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Result_Name().");
  return WinchResult_Result_Name(static_cast<WinchResult_Result>(value));
}
template <>
inline const std::string& WinchResult_Result_Name(WinchResult_Result value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WinchResult_Result_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool WinchResult_Result_Parse(absl::string_view name, WinchResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WinchResult_Result>(
      WinchResult_Result_descriptor(), name, value);
}
enum WinchAction : int {
  WINCH_ACTION_RELAXED = 0,
  WINCH_ACTION_RELATIVE_LENGTH_CONTROL = 1,
  WINCH_ACTION_RATE_CONTROL = 2,
  WINCH_ACTION_LOCK = 3,
  WINCH_ACTION_DELIVER = 4,
  WINCH_ACTION_HOLD = 5,
  WINCH_ACTION_RETRACT = 6,
  WINCH_ACTION_LOAD_LINE = 7,
  WINCH_ACTION_ABANDON_LINE = 8,
  WINCH_ACTION_LOAD_PAYLOAD = 9,
  WinchAction_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WinchAction_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WinchAction_IsValid(int value);
constexpr WinchAction WinchAction_MIN = static_cast<WinchAction>(0);
constexpr WinchAction WinchAction_MAX = static_cast<WinchAction>(9);
constexpr int WinchAction_ARRAYSIZE = 9 + 1;
const ::google::protobuf::EnumDescriptor*
WinchAction_descriptor();
template <typename T>
const std::string& WinchAction_Name(T value) {
  static_assert(std::is_same<T, WinchAction>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to WinchAction_Name().");
  return WinchAction_Name(static_cast<WinchAction>(value));
}
template <>
inline const std::string& WinchAction_Name(WinchAction value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WinchAction_descriptor,
                                                 0, 9>(
      static_cast<int>(value));
}
inline bool WinchAction_Parse(absl::string_view name, WinchAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WinchAction>(
      WinchAction_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SubscribeStatusRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.SubscribeStatusRequest) */ {
 public:
  inline SubscribeStatusRequest() : SubscribeStatusRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeStatusRequest(::google::protobuf::internal::ConstantInitialized);

  SubscribeStatusRequest(const SubscribeStatusRequest& from);
  SubscribeStatusRequest(SubscribeStatusRequest&& from) noexcept
    : SubscribeStatusRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeStatusRequest& operator=(const SubscribeStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeStatusRequest& operator=(SubscribeStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeStatusRequest*>(
               &_SubscribeStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SubscribeStatusRequest& a, SubscribeStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubscribeStatusRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.SubscribeStatusRequest";
  }
  protected:
  explicit SubscribeStatusRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.SubscribeStatusRequest)
 private:
  class _Internal;

  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class StatusResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.StatusResponse) */ {
 public:
  inline StatusResponse() : StatusResponse(nullptr) {}
  ~StatusResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StatusResponse(::google::protobuf::internal::ConstantInitialized);

  StatusResponse(const StatusResponse& from);
  StatusResponse(StatusResponse&& from) noexcept
    : StatusResponse() {
    *this = ::std::move(from);
  }

  inline StatusResponse& operator=(const StatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusResponse& operator=(StatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StatusResponse* internal_default_instance() {
    return reinterpret_cast<const StatusResponse*>(
               &_StatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(StatusResponse& a, StatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StatusResponse& from) {
    StatusResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.StatusResponse";
  }
  protected:
  explicit StatusResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
  };
  // .mavsdk.rpc.winch.Status status = 1;
  bool has_status() const;
  void clear_status() ;
  const ::mavsdk::rpc::winch::Status& status() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::winch::Status* release_status();
  ::mavsdk::rpc::winch::Status* mutable_status();
  void set_allocated_status(::mavsdk::rpc::winch::Status* value);
  void unsafe_arena_set_allocated_status(::mavsdk::rpc::winch::Status* value);
  ::mavsdk::rpc::winch::Status* unsafe_arena_release_status();

  private:
  const ::mavsdk::rpc::winch::Status& _internal_status() const;
  ::mavsdk::rpc::winch::Status* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.StatusResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::winch::Status* status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class StatusFlags final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.StatusFlags) */ {
 public:
  inline StatusFlags() : StatusFlags(nullptr) {}
  ~StatusFlags() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StatusFlags(::google::protobuf::internal::ConstantInitialized);

  StatusFlags(const StatusFlags& from);
  StatusFlags(StatusFlags&& from) noexcept
    : StatusFlags() {
    *this = ::std::move(from);
  }

  inline StatusFlags& operator=(const StatusFlags& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusFlags& operator=(StatusFlags&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StatusFlags& default_instance() {
    return *internal_default_instance();
  }
  static inline const StatusFlags* internal_default_instance() {
    return reinterpret_cast<const StatusFlags*>(
               &_StatusFlags_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(StatusFlags& a, StatusFlags& b) {
    a.Swap(&b);
  }
  inline void Swap(StatusFlags* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StatusFlags* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StatusFlags* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StatusFlags>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StatusFlags& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StatusFlags& from) {
    StatusFlags::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StatusFlags* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.StatusFlags";
  }
  protected:
  explicit StatusFlags(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHealthyFieldNumber = 1,
    kFullyRetractedFieldNumber = 2,
    kMovingFieldNumber = 3,
    kClutchEngagedFieldNumber = 4,
    kLockedFieldNumber = 5,
    kDroppingFieldNumber = 6,
    kArrestingFieldNumber = 7,
    kGroundSenseFieldNumber = 8,
    kRetractingFieldNumber = 9,
    kRedeliverFieldNumber = 10,
    kAbandonLineFieldNumber = 11,
    kLockingFieldNumber = 12,
    kLoadLineFieldNumber = 13,
    kLoadPayloadFieldNumber = 14,
  };
  // bool healthy = 1;
  void clear_healthy() ;
  bool healthy() const;
  void set_healthy(bool value);

  private:
  bool _internal_healthy() const;
  void _internal_set_healthy(bool value);

  public:
  // bool fully_retracted = 2;
  void clear_fully_retracted() ;
  bool fully_retracted() const;
  void set_fully_retracted(bool value);

  private:
  bool _internal_fully_retracted() const;
  void _internal_set_fully_retracted(bool value);

  public:
  // bool moving = 3;
  void clear_moving() ;
  bool moving() const;
  void set_moving(bool value);

  private:
  bool _internal_moving() const;
  void _internal_set_moving(bool value);

  public:
  // bool clutch_engaged = 4;
  void clear_clutch_engaged() ;
  bool clutch_engaged() const;
  void set_clutch_engaged(bool value);

  private:
  bool _internal_clutch_engaged() const;
  void _internal_set_clutch_engaged(bool value);

  public:
  // bool locked = 5;
  void clear_locked() ;
  bool locked() const;
  void set_locked(bool value);

  private:
  bool _internal_locked() const;
  void _internal_set_locked(bool value);

  public:
  // bool dropping = 6;
  void clear_dropping() ;
  bool dropping() const;
  void set_dropping(bool value);

  private:
  bool _internal_dropping() const;
  void _internal_set_dropping(bool value);

  public:
  // bool arresting = 7;
  void clear_arresting() ;
  bool arresting() const;
  void set_arresting(bool value);

  private:
  bool _internal_arresting() const;
  void _internal_set_arresting(bool value);

  public:
  // bool ground_sense = 8;
  void clear_ground_sense() ;
  bool ground_sense() const;
  void set_ground_sense(bool value);

  private:
  bool _internal_ground_sense() const;
  void _internal_set_ground_sense(bool value);

  public:
  // bool retracting = 9;
  void clear_retracting() ;
  bool retracting() const;
  void set_retracting(bool value);

  private:
  bool _internal_retracting() const;
  void _internal_set_retracting(bool value);

  public:
  // bool redeliver = 10;
  void clear_redeliver() ;
  bool redeliver() const;
  void set_redeliver(bool value);

  private:
  bool _internal_redeliver() const;
  void _internal_set_redeliver(bool value);

  public:
  // bool abandon_line = 11;
  void clear_abandon_line() ;
  bool abandon_line() const;
  void set_abandon_line(bool value);

  private:
  bool _internal_abandon_line() const;
  void _internal_set_abandon_line(bool value);

  public:
  // bool locking = 12;
  void clear_locking() ;
  bool locking() const;
  void set_locking(bool value);

  private:
  bool _internal_locking() const;
  void _internal_set_locking(bool value);

  public:
  // bool load_line = 13;
  void clear_load_line() ;
  bool load_line() const;
  void set_load_line(bool value);

  private:
  bool _internal_load_line() const;
  void _internal_set_load_line(bool value);

  public:
  // bool load_payload = 14;
  void clear_load_payload() ;
  bool load_payload() const;
  void set_load_payload(bool value);

  private:
  bool _internal_load_payload() const;
  void _internal_set_load_payload(bool value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.StatusFlags)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 14, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool healthy_;
    bool fully_retracted_;
    bool moving_;
    bool clutch_engaged_;
    bool locked_;
    bool dropping_;
    bool arresting_;
    bool ground_sense_;
    bool retracting_;
    bool redeliver_;
    bool abandon_line_;
    bool locking_;
    bool load_line_;
    bool load_payload_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class Status final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.Status) */ {
 public:
  inline Status() : Status(nullptr) {}
  ~Status() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Status(::google::protobuf::internal::ConstantInitialized);

  Status(const Status& from);
  Status(Status&& from) noexcept
    : Status() {
    *this = ::std::move(from);
  }

  inline Status& operator=(const Status& from) {
    CopyFrom(from);
    return *this;
  }
  inline Status& operator=(Status&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Status& default_instance() {
    return *internal_default_instance();
  }
  static inline const Status* internal_default_instance() {
    return reinterpret_cast<const Status*>(
               &_Status_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Status& a, Status& b) {
    a.Swap(&b);
  }
  inline void Swap(Status* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Status* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Status* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Status>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Status& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Status& from) {
    Status::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Status* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.Status";
  }
  protected:
  explicit Status(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFlagsFieldNumber = 8,
    kTimeUsecFieldNumber = 1,
    kLineLengthMFieldNumber = 2,
    kSpeedMSFieldNumber = 3,
    kTensionKgFieldNumber = 4,
    kVoltageVFieldNumber = 5,
    kCurrentAFieldNumber = 6,
    kTemperatureCFieldNumber = 7,
  };
  // .mavsdk.rpc.winch.StatusFlags status_flags = 8;
  bool has_status_flags() const;
  void clear_status_flags() ;
  const ::mavsdk::rpc::winch::StatusFlags& status_flags() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::winch::StatusFlags* release_status_flags();
  ::mavsdk::rpc::winch::StatusFlags* mutable_status_flags();
  void set_allocated_status_flags(::mavsdk::rpc::winch::StatusFlags* value);
  void unsafe_arena_set_allocated_status_flags(::mavsdk::rpc::winch::StatusFlags* value);
  ::mavsdk::rpc::winch::StatusFlags* unsafe_arena_release_status_flags();

  private:
  const ::mavsdk::rpc::winch::StatusFlags& _internal_status_flags() const;
  ::mavsdk::rpc::winch::StatusFlags* _internal_mutable_status_flags();

  public:
  // uint64 time_usec = 1;
  void clear_time_usec() ;
  ::uint64_t time_usec() const;
  void set_time_usec(::uint64_t value);

  private:
  ::uint64_t _internal_time_usec() const;
  void _internal_set_time_usec(::uint64_t value);

  public:
  // float line_length_m = 2;
  void clear_line_length_m() ;
  float line_length_m() const;
  void set_line_length_m(float value);

  private:
  float _internal_line_length_m() const;
  void _internal_set_line_length_m(float value);

  public:
  // float speed_m_s = 3;
  void clear_speed_m_s() ;
  float speed_m_s() const;
  void set_speed_m_s(float value);

  private:
  float _internal_speed_m_s() const;
  void _internal_set_speed_m_s(float value);

  public:
  // float tension_kg = 4;
  void clear_tension_kg() ;
  float tension_kg() const;
  void set_tension_kg(float value);

  private:
  float _internal_tension_kg() const;
  void _internal_set_tension_kg(float value);

  public:
  // float voltage_v = 5;
  void clear_voltage_v() ;
  float voltage_v() const;
  void set_voltage_v(float value);

  private:
  float _internal_voltage_v() const;
  void _internal_set_voltage_v(float value);

  public:
  // float current_a = 6;
  void clear_current_a() ;
  float current_a() const;
  void set_current_a(float value);

  private:
  float _internal_current_a() const;
  void _internal_set_current_a(float value);

  public:
  // int32 temperature_c = 7;
  void clear_temperature_c() ;
  ::int32_t temperature_c() const;
  void set_temperature_c(::int32_t value);

  private:
  ::int32_t _internal_temperature_c() const;
  void _internal_set_temperature_c(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.Status)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::winch::StatusFlags* status_flags_;
    ::uint64_t time_usec_;
    float line_length_m_;
    float speed_m_s_;
    float tension_kg_;
    float voltage_v_;
    float current_a_;
    ::int32_t temperature_c_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class RelaxRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.RelaxRequest) */ {
 public:
  inline RelaxRequest() : RelaxRequest(nullptr) {}
  ~RelaxRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RelaxRequest(::google::protobuf::internal::ConstantInitialized);

  RelaxRequest(const RelaxRequest& from);
  RelaxRequest(RelaxRequest&& from) noexcept
    : RelaxRequest() {
    *this = ::std::move(from);
  }

  inline RelaxRequest& operator=(const RelaxRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RelaxRequest& operator=(RelaxRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RelaxRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RelaxRequest* internal_default_instance() {
    return reinterpret_cast<const RelaxRequest*>(
               &_RelaxRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RelaxRequest& a, RelaxRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RelaxRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RelaxRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RelaxRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RelaxRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RelaxRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RelaxRequest& from) {
    RelaxRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RelaxRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.RelaxRequest";
  }
  protected:
  explicit RelaxRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceFieldNumber = 1,
  };
  // uint32 instance = 1;
  void clear_instance() ;
  ::uint32_t instance() const;
  void set_instance(::uint32_t value);

  private:
  ::uint32_t _internal_instance() const;
  void _internal_set_instance(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.RelaxRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t instance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class RelaxResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.RelaxResponse) */ {
 public:
  inline RelaxResponse() : RelaxResponse(nullptr) {}
  ~RelaxResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RelaxResponse(::google::protobuf::internal::ConstantInitialized);

  RelaxResponse(const RelaxResponse& from);
  RelaxResponse(RelaxResponse&& from) noexcept
    : RelaxResponse() {
    *this = ::std::move(from);
  }

  inline RelaxResponse& operator=(const RelaxResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RelaxResponse& operator=(RelaxResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RelaxResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RelaxResponse* internal_default_instance() {
    return reinterpret_cast<const RelaxResponse*>(
               &_RelaxResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(RelaxResponse& a, RelaxResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RelaxResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RelaxResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RelaxResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RelaxResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RelaxResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RelaxResponse& from) {
    RelaxResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RelaxResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.RelaxResponse";
  }
  protected:
  explicit RelaxResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinchResultFieldNumber = 1,
  };
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  bool has_winch_result() const;
  void clear_winch_result() ;
  const ::mavsdk::rpc::winch::WinchResult& winch_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::winch::WinchResult* release_winch_result();
  ::mavsdk::rpc::winch::WinchResult* mutable_winch_result();
  void set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  void unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  ::mavsdk::rpc::winch::WinchResult* unsafe_arena_release_winch_result();

  private:
  const ::mavsdk::rpc::winch::WinchResult& _internal_winch_result() const;
  ::mavsdk::rpc::winch::WinchResult* _internal_mutable_winch_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.RelaxResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::winch::WinchResult* winch_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class RelativeLengthControlRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.RelativeLengthControlRequest) */ {
 public:
  inline RelativeLengthControlRequest() : RelativeLengthControlRequest(nullptr) {}
  ~RelativeLengthControlRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RelativeLengthControlRequest(::google::protobuf::internal::ConstantInitialized);

  RelativeLengthControlRequest(const RelativeLengthControlRequest& from);
  RelativeLengthControlRequest(RelativeLengthControlRequest&& from) noexcept
    : RelativeLengthControlRequest() {
    *this = ::std::move(from);
  }

  inline RelativeLengthControlRequest& operator=(const RelativeLengthControlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RelativeLengthControlRequest& operator=(RelativeLengthControlRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RelativeLengthControlRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RelativeLengthControlRequest* internal_default_instance() {
    return reinterpret_cast<const RelativeLengthControlRequest*>(
               &_RelativeLengthControlRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(RelativeLengthControlRequest& a, RelativeLengthControlRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RelativeLengthControlRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RelativeLengthControlRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RelativeLengthControlRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RelativeLengthControlRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RelativeLengthControlRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RelativeLengthControlRequest& from) {
    RelativeLengthControlRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RelativeLengthControlRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.RelativeLengthControlRequest";
  }
  protected:
  explicit RelativeLengthControlRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceFieldNumber = 1,
    kLengthMFieldNumber = 2,
    kRateMSFieldNumber = 3,
  };
  // uint32 instance = 1;
  void clear_instance() ;
  ::uint32_t instance() const;
  void set_instance(::uint32_t value);

  private:
  ::uint32_t _internal_instance() const;
  void _internal_set_instance(::uint32_t value);

  public:
  // float length_m = 2;
  void clear_length_m() ;
  float length_m() const;
  void set_length_m(float value);

  private:
  float _internal_length_m() const;
  void _internal_set_length_m(float value);

  public:
  // float rate_m_s = 3 [(.mavsdk.options.default_value) = "NaN"];
  void clear_rate_m_s() ;
  float rate_m_s() const;
  void set_rate_m_s(float value);

  private:
  float _internal_rate_m_s() const;
  void _internal_set_rate_m_s(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.RelativeLengthControlRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t instance_;
    float length_m_;
    float rate_m_s_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class RelativeLengthControlResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.RelativeLengthControlResponse) */ {
 public:
  inline RelativeLengthControlResponse() : RelativeLengthControlResponse(nullptr) {}
  ~RelativeLengthControlResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RelativeLengthControlResponse(::google::protobuf::internal::ConstantInitialized);

  RelativeLengthControlResponse(const RelativeLengthControlResponse& from);
  RelativeLengthControlResponse(RelativeLengthControlResponse&& from) noexcept
    : RelativeLengthControlResponse() {
    *this = ::std::move(from);
  }

  inline RelativeLengthControlResponse& operator=(const RelativeLengthControlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RelativeLengthControlResponse& operator=(RelativeLengthControlResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RelativeLengthControlResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RelativeLengthControlResponse* internal_default_instance() {
    return reinterpret_cast<const RelativeLengthControlResponse*>(
               &_RelativeLengthControlResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(RelativeLengthControlResponse& a, RelativeLengthControlResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RelativeLengthControlResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RelativeLengthControlResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RelativeLengthControlResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RelativeLengthControlResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RelativeLengthControlResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RelativeLengthControlResponse& from) {
    RelativeLengthControlResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RelativeLengthControlResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.RelativeLengthControlResponse";
  }
  protected:
  explicit RelativeLengthControlResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinchResultFieldNumber = 1,
  };
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  bool has_winch_result() const;
  void clear_winch_result() ;
  const ::mavsdk::rpc::winch::WinchResult& winch_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::winch::WinchResult* release_winch_result();
  ::mavsdk::rpc::winch::WinchResult* mutable_winch_result();
  void set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  void unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  ::mavsdk::rpc::winch::WinchResult* unsafe_arena_release_winch_result();

  private:
  const ::mavsdk::rpc::winch::WinchResult& _internal_winch_result() const;
  ::mavsdk::rpc::winch::WinchResult* _internal_mutable_winch_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.RelativeLengthControlResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::winch::WinchResult* winch_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class RateControlRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.RateControlRequest) */ {
 public:
  inline RateControlRequest() : RateControlRequest(nullptr) {}
  ~RateControlRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RateControlRequest(::google::protobuf::internal::ConstantInitialized);

  RateControlRequest(const RateControlRequest& from);
  RateControlRequest(RateControlRequest&& from) noexcept
    : RateControlRequest() {
    *this = ::std::move(from);
  }

  inline RateControlRequest& operator=(const RateControlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RateControlRequest& operator=(RateControlRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RateControlRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RateControlRequest* internal_default_instance() {
    return reinterpret_cast<const RateControlRequest*>(
               &_RateControlRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(RateControlRequest& a, RateControlRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RateControlRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RateControlRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RateControlRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RateControlRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RateControlRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RateControlRequest& from) {
    RateControlRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RateControlRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.RateControlRequest";
  }
  protected:
  explicit RateControlRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceFieldNumber = 1,
    kRateMSFieldNumber = 2,
  };
  // uint32 instance = 1;
  void clear_instance() ;
  ::uint32_t instance() const;
  void set_instance(::uint32_t value);

  private:
  ::uint32_t _internal_instance() const;
  void _internal_set_instance(::uint32_t value);

  public:
  // float rate_m_s = 2;
  void clear_rate_m_s() ;
  float rate_m_s() const;
  void set_rate_m_s(float value);

  private:
  float _internal_rate_m_s() const;
  void _internal_set_rate_m_s(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.RateControlRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t instance_;
    float rate_m_s_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class RateControlResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.RateControlResponse) */ {
 public:
  inline RateControlResponse() : RateControlResponse(nullptr) {}
  ~RateControlResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RateControlResponse(::google::protobuf::internal::ConstantInitialized);

  RateControlResponse(const RateControlResponse& from);
  RateControlResponse(RateControlResponse&& from) noexcept
    : RateControlResponse() {
    *this = ::std::move(from);
  }

  inline RateControlResponse& operator=(const RateControlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RateControlResponse& operator=(RateControlResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RateControlResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RateControlResponse* internal_default_instance() {
    return reinterpret_cast<const RateControlResponse*>(
               &_RateControlResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(RateControlResponse& a, RateControlResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RateControlResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RateControlResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RateControlResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RateControlResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RateControlResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RateControlResponse& from) {
    RateControlResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RateControlResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.RateControlResponse";
  }
  protected:
  explicit RateControlResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinchResultFieldNumber = 1,
  };
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  bool has_winch_result() const;
  void clear_winch_result() ;
  const ::mavsdk::rpc::winch::WinchResult& winch_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::winch::WinchResult* release_winch_result();
  ::mavsdk::rpc::winch::WinchResult* mutable_winch_result();
  void set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  void unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  ::mavsdk::rpc::winch::WinchResult* unsafe_arena_release_winch_result();

  private:
  const ::mavsdk::rpc::winch::WinchResult& _internal_winch_result() const;
  ::mavsdk::rpc::winch::WinchResult* _internal_mutable_winch_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.RateControlResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::winch::WinchResult* winch_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class LockRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.LockRequest) */ {
 public:
  inline LockRequest() : LockRequest(nullptr) {}
  ~LockRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LockRequest(::google::protobuf::internal::ConstantInitialized);

  LockRequest(const LockRequest& from);
  LockRequest(LockRequest&& from) noexcept
    : LockRequest() {
    *this = ::std::move(from);
  }

  inline LockRequest& operator=(const LockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LockRequest& operator=(LockRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LockRequest* internal_default_instance() {
    return reinterpret_cast<const LockRequest*>(
               &_LockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(LockRequest& a, LockRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LockRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LockRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LockRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LockRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LockRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LockRequest& from) {
    LockRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LockRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.LockRequest";
  }
  protected:
  explicit LockRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceFieldNumber = 1,
  };
  // uint32 instance = 1;
  void clear_instance() ;
  ::uint32_t instance() const;
  void set_instance(::uint32_t value);

  private:
  ::uint32_t _internal_instance() const;
  void _internal_set_instance(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.LockRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t instance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class LockResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.LockResponse) */ {
 public:
  inline LockResponse() : LockResponse(nullptr) {}
  ~LockResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LockResponse(::google::protobuf::internal::ConstantInitialized);

  LockResponse(const LockResponse& from);
  LockResponse(LockResponse&& from) noexcept
    : LockResponse() {
    *this = ::std::move(from);
  }

  inline LockResponse& operator=(const LockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LockResponse& operator=(LockResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LockResponse* internal_default_instance() {
    return reinterpret_cast<const LockResponse*>(
               &_LockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(LockResponse& a, LockResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LockResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LockResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LockResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LockResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LockResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LockResponse& from) {
    LockResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LockResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.LockResponse";
  }
  protected:
  explicit LockResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinchResultFieldNumber = 1,
  };
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  bool has_winch_result() const;
  void clear_winch_result() ;
  const ::mavsdk::rpc::winch::WinchResult& winch_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::winch::WinchResult* release_winch_result();
  ::mavsdk::rpc::winch::WinchResult* mutable_winch_result();
  void set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  void unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  ::mavsdk::rpc::winch::WinchResult* unsafe_arena_release_winch_result();

  private:
  const ::mavsdk::rpc::winch::WinchResult& _internal_winch_result() const;
  ::mavsdk::rpc::winch::WinchResult* _internal_mutable_winch_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.LockResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::winch::WinchResult* winch_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class DeliverRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.DeliverRequest) */ {
 public:
  inline DeliverRequest() : DeliverRequest(nullptr) {}
  ~DeliverRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DeliverRequest(::google::protobuf::internal::ConstantInitialized);

  DeliverRequest(const DeliverRequest& from);
  DeliverRequest(DeliverRequest&& from) noexcept
    : DeliverRequest() {
    *this = ::std::move(from);
  }

  inline DeliverRequest& operator=(const DeliverRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeliverRequest& operator=(DeliverRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeliverRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeliverRequest* internal_default_instance() {
    return reinterpret_cast<const DeliverRequest*>(
               &_DeliverRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(DeliverRequest& a, DeliverRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeliverRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeliverRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeliverRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeliverRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeliverRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DeliverRequest& from) {
    DeliverRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeliverRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.DeliverRequest";
  }
  protected:
  explicit DeliverRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceFieldNumber = 1,
  };
  // uint32 instance = 1;
  void clear_instance() ;
  ::uint32_t instance() const;
  void set_instance(::uint32_t value);

  private:
  ::uint32_t _internal_instance() const;
  void _internal_set_instance(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.DeliverRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t instance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class DeliverResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.DeliverResponse) */ {
 public:
  inline DeliverResponse() : DeliverResponse(nullptr) {}
  ~DeliverResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DeliverResponse(::google::protobuf::internal::ConstantInitialized);

  DeliverResponse(const DeliverResponse& from);
  DeliverResponse(DeliverResponse&& from) noexcept
    : DeliverResponse() {
    *this = ::std::move(from);
  }

  inline DeliverResponse& operator=(const DeliverResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeliverResponse& operator=(DeliverResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeliverResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeliverResponse* internal_default_instance() {
    return reinterpret_cast<const DeliverResponse*>(
               &_DeliverResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(DeliverResponse& a, DeliverResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeliverResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeliverResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeliverResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeliverResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeliverResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DeliverResponse& from) {
    DeliverResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeliverResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.DeliverResponse";
  }
  protected:
  explicit DeliverResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinchResultFieldNumber = 1,
  };
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  bool has_winch_result() const;
  void clear_winch_result() ;
  const ::mavsdk::rpc::winch::WinchResult& winch_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::winch::WinchResult* release_winch_result();
  ::mavsdk::rpc::winch::WinchResult* mutable_winch_result();
  void set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  void unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  ::mavsdk::rpc::winch::WinchResult* unsafe_arena_release_winch_result();

  private:
  const ::mavsdk::rpc::winch::WinchResult& _internal_winch_result() const;
  ::mavsdk::rpc::winch::WinchResult* _internal_mutable_winch_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.DeliverResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::winch::WinchResult* winch_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class HoldRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.HoldRequest) */ {
 public:
  inline HoldRequest() : HoldRequest(nullptr) {}
  ~HoldRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HoldRequest(::google::protobuf::internal::ConstantInitialized);

  HoldRequest(const HoldRequest& from);
  HoldRequest(HoldRequest&& from) noexcept
    : HoldRequest() {
    *this = ::std::move(from);
  }

  inline HoldRequest& operator=(const HoldRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HoldRequest& operator=(HoldRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HoldRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const HoldRequest* internal_default_instance() {
    return reinterpret_cast<const HoldRequest*>(
               &_HoldRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(HoldRequest& a, HoldRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(HoldRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HoldRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HoldRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HoldRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HoldRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HoldRequest& from) {
    HoldRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HoldRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.HoldRequest";
  }
  protected:
  explicit HoldRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceFieldNumber = 1,
  };
  // uint32 instance = 1;
  void clear_instance() ;
  ::uint32_t instance() const;
  void set_instance(::uint32_t value);

  private:
  ::uint32_t _internal_instance() const;
  void _internal_set_instance(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.HoldRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t instance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class HoldResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.HoldResponse) */ {
 public:
  inline HoldResponse() : HoldResponse(nullptr) {}
  ~HoldResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HoldResponse(::google::protobuf::internal::ConstantInitialized);

  HoldResponse(const HoldResponse& from);
  HoldResponse(HoldResponse&& from) noexcept
    : HoldResponse() {
    *this = ::std::move(from);
  }

  inline HoldResponse& operator=(const HoldResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline HoldResponse& operator=(HoldResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HoldResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const HoldResponse* internal_default_instance() {
    return reinterpret_cast<const HoldResponse*>(
               &_HoldResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(HoldResponse& a, HoldResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(HoldResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HoldResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HoldResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HoldResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HoldResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HoldResponse& from) {
    HoldResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HoldResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.HoldResponse";
  }
  protected:
  explicit HoldResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinchResultFieldNumber = 1,
  };
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  bool has_winch_result() const;
  void clear_winch_result() ;
  const ::mavsdk::rpc::winch::WinchResult& winch_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::winch::WinchResult* release_winch_result();
  ::mavsdk::rpc::winch::WinchResult* mutable_winch_result();
  void set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  void unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  ::mavsdk::rpc::winch::WinchResult* unsafe_arena_release_winch_result();

  private:
  const ::mavsdk::rpc::winch::WinchResult& _internal_winch_result() const;
  ::mavsdk::rpc::winch::WinchResult* _internal_mutable_winch_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.HoldResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::winch::WinchResult* winch_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class RetractRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.RetractRequest) */ {
 public:
  inline RetractRequest() : RetractRequest(nullptr) {}
  ~RetractRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RetractRequest(::google::protobuf::internal::ConstantInitialized);

  RetractRequest(const RetractRequest& from);
  RetractRequest(RetractRequest&& from) noexcept
    : RetractRequest() {
    *this = ::std::move(from);
  }

  inline RetractRequest& operator=(const RetractRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RetractRequest& operator=(RetractRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RetractRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RetractRequest* internal_default_instance() {
    return reinterpret_cast<const RetractRequest*>(
               &_RetractRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(RetractRequest& a, RetractRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RetractRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RetractRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RetractRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RetractRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RetractRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RetractRequest& from) {
    RetractRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RetractRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.RetractRequest";
  }
  protected:
  explicit RetractRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceFieldNumber = 1,
  };
  // uint32 instance = 1;
  void clear_instance() ;
  ::uint32_t instance() const;
  void set_instance(::uint32_t value);

  private:
  ::uint32_t _internal_instance() const;
  void _internal_set_instance(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.RetractRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t instance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class RetractResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.RetractResponse) */ {
 public:
  inline RetractResponse() : RetractResponse(nullptr) {}
  ~RetractResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RetractResponse(::google::protobuf::internal::ConstantInitialized);

  RetractResponse(const RetractResponse& from);
  RetractResponse(RetractResponse&& from) noexcept
    : RetractResponse() {
    *this = ::std::move(from);
  }

  inline RetractResponse& operator=(const RetractResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RetractResponse& operator=(RetractResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RetractResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RetractResponse* internal_default_instance() {
    return reinterpret_cast<const RetractResponse*>(
               &_RetractResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(RetractResponse& a, RetractResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RetractResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RetractResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RetractResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RetractResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RetractResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RetractResponse& from) {
    RetractResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RetractResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.RetractResponse";
  }
  protected:
  explicit RetractResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinchResultFieldNumber = 1,
  };
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  bool has_winch_result() const;
  void clear_winch_result() ;
  const ::mavsdk::rpc::winch::WinchResult& winch_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::winch::WinchResult* release_winch_result();
  ::mavsdk::rpc::winch::WinchResult* mutable_winch_result();
  void set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  void unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  ::mavsdk::rpc::winch::WinchResult* unsafe_arena_release_winch_result();

  private:
  const ::mavsdk::rpc::winch::WinchResult& _internal_winch_result() const;
  ::mavsdk::rpc::winch::WinchResult* _internal_mutable_winch_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.RetractResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::winch::WinchResult* winch_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class LoadLineRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.LoadLineRequest) */ {
 public:
  inline LoadLineRequest() : LoadLineRequest(nullptr) {}
  ~LoadLineRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LoadLineRequest(::google::protobuf::internal::ConstantInitialized);

  LoadLineRequest(const LoadLineRequest& from);
  LoadLineRequest(LoadLineRequest&& from) noexcept
    : LoadLineRequest() {
    *this = ::std::move(from);
  }

  inline LoadLineRequest& operator=(const LoadLineRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadLineRequest& operator=(LoadLineRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoadLineRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadLineRequest* internal_default_instance() {
    return reinterpret_cast<const LoadLineRequest*>(
               &_LoadLineRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(LoadLineRequest& a, LoadLineRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LoadLineRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadLineRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoadLineRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LoadLineRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoadLineRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LoadLineRequest& from) {
    LoadLineRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadLineRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.LoadLineRequest";
  }
  protected:
  explicit LoadLineRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceFieldNumber = 1,
  };
  // uint32 instance = 1;
  void clear_instance() ;
  ::uint32_t instance() const;
  void set_instance(::uint32_t value);

  private:
  ::uint32_t _internal_instance() const;
  void _internal_set_instance(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.LoadLineRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t instance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class LoadLineResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.LoadLineResponse) */ {
 public:
  inline LoadLineResponse() : LoadLineResponse(nullptr) {}
  ~LoadLineResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LoadLineResponse(::google::protobuf::internal::ConstantInitialized);

  LoadLineResponse(const LoadLineResponse& from);
  LoadLineResponse(LoadLineResponse&& from) noexcept
    : LoadLineResponse() {
    *this = ::std::move(from);
  }

  inline LoadLineResponse& operator=(const LoadLineResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadLineResponse& operator=(LoadLineResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoadLineResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadLineResponse* internal_default_instance() {
    return reinterpret_cast<const LoadLineResponse*>(
               &_LoadLineResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(LoadLineResponse& a, LoadLineResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LoadLineResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadLineResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoadLineResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LoadLineResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoadLineResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LoadLineResponse& from) {
    LoadLineResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadLineResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.LoadLineResponse";
  }
  protected:
  explicit LoadLineResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinchResultFieldNumber = 1,
  };
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  bool has_winch_result() const;
  void clear_winch_result() ;
  const ::mavsdk::rpc::winch::WinchResult& winch_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::winch::WinchResult* release_winch_result();
  ::mavsdk::rpc::winch::WinchResult* mutable_winch_result();
  void set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  void unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  ::mavsdk::rpc::winch::WinchResult* unsafe_arena_release_winch_result();

  private:
  const ::mavsdk::rpc::winch::WinchResult& _internal_winch_result() const;
  ::mavsdk::rpc::winch::WinchResult* _internal_mutable_winch_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.LoadLineResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::winch::WinchResult* winch_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class AbandonLineRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.AbandonLineRequest) */ {
 public:
  inline AbandonLineRequest() : AbandonLineRequest(nullptr) {}
  ~AbandonLineRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AbandonLineRequest(::google::protobuf::internal::ConstantInitialized);

  AbandonLineRequest(const AbandonLineRequest& from);
  AbandonLineRequest(AbandonLineRequest&& from) noexcept
    : AbandonLineRequest() {
    *this = ::std::move(from);
  }

  inline AbandonLineRequest& operator=(const AbandonLineRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AbandonLineRequest& operator=(AbandonLineRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AbandonLineRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AbandonLineRequest* internal_default_instance() {
    return reinterpret_cast<const AbandonLineRequest*>(
               &_AbandonLineRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(AbandonLineRequest& a, AbandonLineRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AbandonLineRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AbandonLineRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AbandonLineRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AbandonLineRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AbandonLineRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AbandonLineRequest& from) {
    AbandonLineRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbandonLineRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.AbandonLineRequest";
  }
  protected:
  explicit AbandonLineRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceFieldNumber = 1,
  };
  // uint32 instance = 1;
  void clear_instance() ;
  ::uint32_t instance() const;
  void set_instance(::uint32_t value);

  private:
  ::uint32_t _internal_instance() const;
  void _internal_set_instance(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.AbandonLineRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t instance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class AbandonLineResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.AbandonLineResponse) */ {
 public:
  inline AbandonLineResponse() : AbandonLineResponse(nullptr) {}
  ~AbandonLineResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AbandonLineResponse(::google::protobuf::internal::ConstantInitialized);

  AbandonLineResponse(const AbandonLineResponse& from);
  AbandonLineResponse(AbandonLineResponse&& from) noexcept
    : AbandonLineResponse() {
    *this = ::std::move(from);
  }

  inline AbandonLineResponse& operator=(const AbandonLineResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AbandonLineResponse& operator=(AbandonLineResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AbandonLineResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AbandonLineResponse* internal_default_instance() {
    return reinterpret_cast<const AbandonLineResponse*>(
               &_AbandonLineResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(AbandonLineResponse& a, AbandonLineResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AbandonLineResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AbandonLineResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AbandonLineResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AbandonLineResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AbandonLineResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AbandonLineResponse& from) {
    AbandonLineResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbandonLineResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.AbandonLineResponse";
  }
  protected:
  explicit AbandonLineResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinchResultFieldNumber = 1,
  };
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  bool has_winch_result() const;
  void clear_winch_result() ;
  const ::mavsdk::rpc::winch::WinchResult& winch_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::winch::WinchResult* release_winch_result();
  ::mavsdk::rpc::winch::WinchResult* mutable_winch_result();
  void set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  void unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  ::mavsdk::rpc::winch::WinchResult* unsafe_arena_release_winch_result();

  private:
  const ::mavsdk::rpc::winch::WinchResult& _internal_winch_result() const;
  ::mavsdk::rpc::winch::WinchResult* _internal_mutable_winch_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.AbandonLineResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::winch::WinchResult* winch_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class LoadPayloadRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.LoadPayloadRequest) */ {
 public:
  inline LoadPayloadRequest() : LoadPayloadRequest(nullptr) {}
  ~LoadPayloadRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LoadPayloadRequest(::google::protobuf::internal::ConstantInitialized);

  LoadPayloadRequest(const LoadPayloadRequest& from);
  LoadPayloadRequest(LoadPayloadRequest&& from) noexcept
    : LoadPayloadRequest() {
    *this = ::std::move(from);
  }

  inline LoadPayloadRequest& operator=(const LoadPayloadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadPayloadRequest& operator=(LoadPayloadRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoadPayloadRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadPayloadRequest* internal_default_instance() {
    return reinterpret_cast<const LoadPayloadRequest*>(
               &_LoadPayloadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(LoadPayloadRequest& a, LoadPayloadRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LoadPayloadRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadPayloadRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoadPayloadRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LoadPayloadRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoadPayloadRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LoadPayloadRequest& from) {
    LoadPayloadRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadPayloadRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.LoadPayloadRequest";
  }
  protected:
  explicit LoadPayloadRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstanceFieldNumber = 1,
  };
  // uint32 instance = 1;
  void clear_instance() ;
  ::uint32_t instance() const;
  void set_instance(::uint32_t value);

  private:
  ::uint32_t _internal_instance() const;
  void _internal_set_instance(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.LoadPayloadRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t instance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class LoadPayloadResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.LoadPayloadResponse) */ {
 public:
  inline LoadPayloadResponse() : LoadPayloadResponse(nullptr) {}
  ~LoadPayloadResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LoadPayloadResponse(::google::protobuf::internal::ConstantInitialized);

  LoadPayloadResponse(const LoadPayloadResponse& from);
  LoadPayloadResponse(LoadPayloadResponse&& from) noexcept
    : LoadPayloadResponse() {
    *this = ::std::move(from);
  }

  inline LoadPayloadResponse& operator=(const LoadPayloadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadPayloadResponse& operator=(LoadPayloadResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoadPayloadResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadPayloadResponse* internal_default_instance() {
    return reinterpret_cast<const LoadPayloadResponse*>(
               &_LoadPayloadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(LoadPayloadResponse& a, LoadPayloadResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LoadPayloadResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadPayloadResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoadPayloadResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LoadPayloadResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoadPayloadResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LoadPayloadResponse& from) {
    LoadPayloadResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadPayloadResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.LoadPayloadResponse";
  }
  protected:
  explicit LoadPayloadResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinchResultFieldNumber = 1,
  };
  // .mavsdk.rpc.winch.WinchResult winch_result = 1;
  bool has_winch_result() const;
  void clear_winch_result() ;
  const ::mavsdk::rpc::winch::WinchResult& winch_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::winch::WinchResult* release_winch_result();
  ::mavsdk::rpc::winch::WinchResult* mutable_winch_result();
  void set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  void unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value);
  ::mavsdk::rpc::winch::WinchResult* unsafe_arena_release_winch_result();

  private:
  const ::mavsdk::rpc::winch::WinchResult& _internal_winch_result() const;
  ::mavsdk::rpc::winch::WinchResult* _internal_mutable_winch_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.LoadPayloadResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::winch::WinchResult* winch_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};// -------------------------------------------------------------------

class WinchResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.winch.WinchResult) */ {
 public:
  inline WinchResult() : WinchResult(nullptr) {}
  ~WinchResult() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WinchResult(::google::protobuf::internal::ConstantInitialized);

  WinchResult(const WinchResult& from);
  WinchResult(WinchResult&& from) noexcept
    : WinchResult() {
    *this = ::std::move(from);
  }

  inline WinchResult& operator=(const WinchResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline WinchResult& operator=(WinchResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WinchResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const WinchResult* internal_default_instance() {
    return reinterpret_cast<const WinchResult*>(
               &_WinchResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(WinchResult& a, WinchResult& b) {
    a.Swap(&b);
  }
  inline void Swap(WinchResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WinchResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WinchResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WinchResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WinchResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WinchResult& from) {
    WinchResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WinchResult* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.winch.WinchResult";
  }
  protected:
  explicit WinchResult(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Result = WinchResult_Result;
  static constexpr Result RESULT_UNKNOWN = WinchResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS = WinchResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_NO_SYSTEM = WinchResult_Result_RESULT_NO_SYSTEM;
  static constexpr Result RESULT_BUSY = WinchResult_Result_RESULT_BUSY;
  static constexpr Result RESULT_TIMEOUT = WinchResult_Result_RESULT_TIMEOUT;
  static constexpr Result RESULT_UNSUPPORTED = WinchResult_Result_RESULT_UNSUPPORTED;
  static constexpr Result RESULT_FAILED = WinchResult_Result_RESULT_FAILED;
  static inline bool Result_IsValid(int value) {
    return WinchResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN = WinchResult_Result_Result_MIN;
  static constexpr Result Result_MAX = WinchResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE = WinchResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Result_descriptor() {
    return WinchResult_Result_descriptor();
  }
  template <typename T>
  static inline const std::string& Result_Name(T value) {
    return WinchResult_Result_Name(value);
  }
  static inline bool Result_Parse(absl::string_view name, Result* value) {
    return WinchResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str() ;
  const std::string& result_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result_str(Arg_&& arg, Args_... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* ptr);

  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(
      const std::string& value);
  std::string* _internal_mutable_result_str();

  public:
  // .mavsdk.rpc.winch.WinchResult.Result result = 1;
  void clear_result() ;
  ::mavsdk::rpc::winch::WinchResult_Result result() const;
  void set_result(::mavsdk::rpc::winch::WinchResult_Result value);

  private:
  ::mavsdk::rpc::winch::WinchResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::winch::WinchResult_Result value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.winch.WinchResult)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 47, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr result_str_;
    int result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_winch_2fwinch_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SubscribeStatusRequest

// -------------------------------------------------------------------

// StatusResponse

// .mavsdk.rpc.winch.Status status = 1;
inline bool StatusResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline void StatusResponse::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::winch::Status& StatusResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::winch::Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::winch::Status&>(::mavsdk::rpc::winch::_Status_default_instance_);
}
inline const ::mavsdk::rpc::winch::Status& StatusResponse::status() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusResponse.status)
  return _internal_status();
}
inline void StatusResponse::unsafe_arena_set_allocated_status(::mavsdk::rpc::winch::Status* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::mavsdk::rpc::winch::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.winch.StatusResponse.status)
}
inline ::mavsdk::rpc::winch::Status* StatusResponse::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::winch::Status* StatusResponse::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.winch.StatusResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::winch::Status* StatusResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::winch::Status>(GetArenaForAllocation());
    _impl_.status_ = reinterpret_cast<::mavsdk::rpc::winch::Status*>(p);
  }
  return _impl_.status_;
}
inline ::mavsdk::rpc::winch::Status* StatusResponse::mutable_status() {
  ::mavsdk::rpc::winch::Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.winch.StatusResponse.status)
  return _msg;
}
inline void StatusResponse::set_allocated_status(::mavsdk::rpc::winch::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::winch::Status*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::mavsdk::rpc::winch::Status*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::mavsdk::rpc::winch::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.winch.StatusResponse.status)
}

// -------------------------------------------------------------------

// StatusFlags

// bool healthy = 1;
inline void StatusFlags::clear_healthy() {
  _impl_.healthy_ = false;
}
inline bool StatusFlags::healthy() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusFlags.healthy)
  return _internal_healthy();
}
inline void StatusFlags::set_healthy(bool value) {
  _internal_set_healthy(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.StatusFlags.healthy)
}
inline bool StatusFlags::_internal_healthy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.healthy_;
}
inline void StatusFlags::_internal_set_healthy(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.healthy_ = value;
}

// bool fully_retracted = 2;
inline void StatusFlags::clear_fully_retracted() {
  _impl_.fully_retracted_ = false;
}
inline bool StatusFlags::fully_retracted() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusFlags.fully_retracted)
  return _internal_fully_retracted();
}
inline void StatusFlags::set_fully_retracted(bool value) {
  _internal_set_fully_retracted(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.StatusFlags.fully_retracted)
}
inline bool StatusFlags::_internal_fully_retracted() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fully_retracted_;
}
inline void StatusFlags::_internal_set_fully_retracted(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fully_retracted_ = value;
}

// bool moving = 3;
inline void StatusFlags::clear_moving() {
  _impl_.moving_ = false;
}
inline bool StatusFlags::moving() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusFlags.moving)
  return _internal_moving();
}
inline void StatusFlags::set_moving(bool value) {
  _internal_set_moving(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.StatusFlags.moving)
}
inline bool StatusFlags::_internal_moving() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.moving_;
}
inline void StatusFlags::_internal_set_moving(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.moving_ = value;
}

// bool clutch_engaged = 4;
inline void StatusFlags::clear_clutch_engaged() {
  _impl_.clutch_engaged_ = false;
}
inline bool StatusFlags::clutch_engaged() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusFlags.clutch_engaged)
  return _internal_clutch_engaged();
}
inline void StatusFlags::set_clutch_engaged(bool value) {
  _internal_set_clutch_engaged(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.StatusFlags.clutch_engaged)
}
inline bool StatusFlags::_internal_clutch_engaged() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.clutch_engaged_;
}
inline void StatusFlags::_internal_set_clutch_engaged(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.clutch_engaged_ = value;
}

// bool locked = 5;
inline void StatusFlags::clear_locked() {
  _impl_.locked_ = false;
}
inline bool StatusFlags::locked() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusFlags.locked)
  return _internal_locked();
}
inline void StatusFlags::set_locked(bool value) {
  _internal_set_locked(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.StatusFlags.locked)
}
inline bool StatusFlags::_internal_locked() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.locked_;
}
inline void StatusFlags::_internal_set_locked(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.locked_ = value;
}

// bool dropping = 6;
inline void StatusFlags::clear_dropping() {
  _impl_.dropping_ = false;
}
inline bool StatusFlags::dropping() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusFlags.dropping)
  return _internal_dropping();
}
inline void StatusFlags::set_dropping(bool value) {
  _internal_set_dropping(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.StatusFlags.dropping)
}
inline bool StatusFlags::_internal_dropping() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dropping_;
}
inline void StatusFlags::_internal_set_dropping(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dropping_ = value;
}

// bool arresting = 7;
inline void StatusFlags::clear_arresting() {
  _impl_.arresting_ = false;
}
inline bool StatusFlags::arresting() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusFlags.arresting)
  return _internal_arresting();
}
inline void StatusFlags::set_arresting(bool value) {
  _internal_set_arresting(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.StatusFlags.arresting)
}
inline bool StatusFlags::_internal_arresting() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.arresting_;
}
inline void StatusFlags::_internal_set_arresting(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.arresting_ = value;
}

// bool ground_sense = 8;
inline void StatusFlags::clear_ground_sense() {
  _impl_.ground_sense_ = false;
}
inline bool StatusFlags::ground_sense() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusFlags.ground_sense)
  return _internal_ground_sense();
}
inline void StatusFlags::set_ground_sense(bool value) {
  _internal_set_ground_sense(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.StatusFlags.ground_sense)
}
inline bool StatusFlags::_internal_ground_sense() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ground_sense_;
}
inline void StatusFlags::_internal_set_ground_sense(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ground_sense_ = value;
}

// bool retracting = 9;
inline void StatusFlags::clear_retracting() {
  _impl_.retracting_ = false;
}
inline bool StatusFlags::retracting() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusFlags.retracting)
  return _internal_retracting();
}
inline void StatusFlags::set_retracting(bool value) {
  _internal_set_retracting(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.StatusFlags.retracting)
}
inline bool StatusFlags::_internal_retracting() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.retracting_;
}
inline void StatusFlags::_internal_set_retracting(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.retracting_ = value;
}

// bool redeliver = 10;
inline void StatusFlags::clear_redeliver() {
  _impl_.redeliver_ = false;
}
inline bool StatusFlags::redeliver() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusFlags.redeliver)
  return _internal_redeliver();
}
inline void StatusFlags::set_redeliver(bool value) {
  _internal_set_redeliver(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.StatusFlags.redeliver)
}
inline bool StatusFlags::_internal_redeliver() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.redeliver_;
}
inline void StatusFlags::_internal_set_redeliver(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.redeliver_ = value;
}

// bool abandon_line = 11;
inline void StatusFlags::clear_abandon_line() {
  _impl_.abandon_line_ = false;
}
inline bool StatusFlags::abandon_line() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusFlags.abandon_line)
  return _internal_abandon_line();
}
inline void StatusFlags::set_abandon_line(bool value) {
  _internal_set_abandon_line(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.StatusFlags.abandon_line)
}
inline bool StatusFlags::_internal_abandon_line() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.abandon_line_;
}
inline void StatusFlags::_internal_set_abandon_line(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.abandon_line_ = value;
}

// bool locking = 12;
inline void StatusFlags::clear_locking() {
  _impl_.locking_ = false;
}
inline bool StatusFlags::locking() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusFlags.locking)
  return _internal_locking();
}
inline void StatusFlags::set_locking(bool value) {
  _internal_set_locking(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.StatusFlags.locking)
}
inline bool StatusFlags::_internal_locking() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.locking_;
}
inline void StatusFlags::_internal_set_locking(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.locking_ = value;
}

// bool load_line = 13;
inline void StatusFlags::clear_load_line() {
  _impl_.load_line_ = false;
}
inline bool StatusFlags::load_line() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusFlags.load_line)
  return _internal_load_line();
}
inline void StatusFlags::set_load_line(bool value) {
  _internal_set_load_line(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.StatusFlags.load_line)
}
inline bool StatusFlags::_internal_load_line() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.load_line_;
}
inline void StatusFlags::_internal_set_load_line(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.load_line_ = value;
}

// bool load_payload = 14;
inline void StatusFlags::clear_load_payload() {
  _impl_.load_payload_ = false;
}
inline bool StatusFlags::load_payload() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.StatusFlags.load_payload)
  return _internal_load_payload();
}
inline void StatusFlags::set_load_payload(bool value) {
  _internal_set_load_payload(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.StatusFlags.load_payload)
}
inline bool StatusFlags::_internal_load_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.load_payload_;
}
inline void StatusFlags::_internal_set_load_payload(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.load_payload_ = value;
}

// -------------------------------------------------------------------

// Status

// uint64 time_usec = 1;
inline void Status::clear_time_usec() {
  _impl_.time_usec_ = ::uint64_t{0u};
}
inline ::uint64_t Status::time_usec() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.Status.time_usec)
  return _internal_time_usec();
}
inline void Status::set_time_usec(::uint64_t value) {
  _internal_set_time_usec(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.Status.time_usec)
}
inline ::uint64_t Status::_internal_time_usec() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_usec_;
}
inline void Status::_internal_set_time_usec(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_usec_ = value;
}

// float line_length_m = 2;
inline void Status::clear_line_length_m() {
  _impl_.line_length_m_ = 0;
}
inline float Status::line_length_m() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.Status.line_length_m)
  return _internal_line_length_m();
}
inline void Status::set_line_length_m(float value) {
  _internal_set_line_length_m(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.Status.line_length_m)
}
inline float Status::_internal_line_length_m() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.line_length_m_;
}
inline void Status::_internal_set_line_length_m(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.line_length_m_ = value;
}

// float speed_m_s = 3;
inline void Status::clear_speed_m_s() {
  _impl_.speed_m_s_ = 0;
}
inline float Status::speed_m_s() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.Status.speed_m_s)
  return _internal_speed_m_s();
}
inline void Status::set_speed_m_s(float value) {
  _internal_set_speed_m_s(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.Status.speed_m_s)
}
inline float Status::_internal_speed_m_s() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.speed_m_s_;
}
inline void Status::_internal_set_speed_m_s(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.speed_m_s_ = value;
}

// float tension_kg = 4;
inline void Status::clear_tension_kg() {
  _impl_.tension_kg_ = 0;
}
inline float Status::tension_kg() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.Status.tension_kg)
  return _internal_tension_kg();
}
inline void Status::set_tension_kg(float value) {
  _internal_set_tension_kg(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.Status.tension_kg)
}
inline float Status::_internal_tension_kg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tension_kg_;
}
inline void Status::_internal_set_tension_kg(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tension_kg_ = value;
}

// float voltage_v = 5;
inline void Status::clear_voltage_v() {
  _impl_.voltage_v_ = 0;
}
inline float Status::voltage_v() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.Status.voltage_v)
  return _internal_voltage_v();
}
inline void Status::set_voltage_v(float value) {
  _internal_set_voltage_v(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.Status.voltage_v)
}
inline float Status::_internal_voltage_v() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.voltage_v_;
}
inline void Status::_internal_set_voltage_v(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.voltage_v_ = value;
}

// float current_a = 6;
inline void Status::clear_current_a() {
  _impl_.current_a_ = 0;
}
inline float Status::current_a() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.Status.current_a)
  return _internal_current_a();
}
inline void Status::set_current_a(float value) {
  _internal_set_current_a(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.Status.current_a)
}
inline float Status::_internal_current_a() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.current_a_;
}
inline void Status::_internal_set_current_a(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.current_a_ = value;
}

// int32 temperature_c = 7;
inline void Status::clear_temperature_c() {
  _impl_.temperature_c_ = 0;
}
inline ::int32_t Status::temperature_c() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.Status.temperature_c)
  return _internal_temperature_c();
}
inline void Status::set_temperature_c(::int32_t value) {
  _internal_set_temperature_c(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.Status.temperature_c)
}
inline ::int32_t Status::_internal_temperature_c() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.temperature_c_;
}
inline void Status::_internal_set_temperature_c(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.temperature_c_ = value;
}

// .mavsdk.rpc.winch.StatusFlags status_flags = 8;
inline bool Status::has_status_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_flags_ != nullptr);
  return value;
}
inline void Status::clear_status_flags() {
  if (_impl_.status_flags_ != nullptr) _impl_.status_flags_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::winch::StatusFlags& Status::_internal_status_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::winch::StatusFlags* p = _impl_.status_flags_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::winch::StatusFlags&>(::mavsdk::rpc::winch::_StatusFlags_default_instance_);
}
inline const ::mavsdk::rpc::winch::StatusFlags& Status::status_flags() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.Status.status_flags)
  return _internal_status_flags();
}
inline void Status::unsafe_arena_set_allocated_status_flags(::mavsdk::rpc::winch::StatusFlags* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_flags_);
  }
  _impl_.status_flags_ = reinterpret_cast<::mavsdk::rpc::winch::StatusFlags*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.winch.Status.status_flags)
}
inline ::mavsdk::rpc::winch::StatusFlags* Status::release_status_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::StatusFlags* released = _impl_.status_flags_;
  _impl_.status_flags_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::winch::StatusFlags* Status::unsafe_arena_release_status_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.winch.Status.status_flags)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::StatusFlags* temp = _impl_.status_flags_;
  _impl_.status_flags_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::winch::StatusFlags* Status::_internal_mutable_status_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.status_flags_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::winch::StatusFlags>(GetArenaForAllocation());
    _impl_.status_flags_ = reinterpret_cast<::mavsdk::rpc::winch::StatusFlags*>(p);
  }
  return _impl_.status_flags_;
}
inline ::mavsdk::rpc::winch::StatusFlags* Status::mutable_status_flags() {
  ::mavsdk::rpc::winch::StatusFlags* _msg = _internal_mutable_status_flags();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.winch.Status.status_flags)
  return _msg;
}
inline void Status::set_allocated_status_flags(::mavsdk::rpc::winch::StatusFlags* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::winch::StatusFlags*>(_impl_.status_flags_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::mavsdk::rpc::winch::StatusFlags*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_flags_ = reinterpret_cast<::mavsdk::rpc::winch::StatusFlags*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.winch.Status.status_flags)
}

// -------------------------------------------------------------------

// RelaxRequest

// uint32 instance = 1;
inline void RelaxRequest::clear_instance() {
  _impl_.instance_ = 0u;
}
inline ::uint32_t RelaxRequest::instance() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.RelaxRequest.instance)
  return _internal_instance();
}
inline void RelaxRequest::set_instance(::uint32_t value) {
  _internal_set_instance(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.RelaxRequest.instance)
}
inline ::uint32_t RelaxRequest::_internal_instance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_;
}
inline void RelaxRequest::_internal_set_instance(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_ = value;
}

// -------------------------------------------------------------------

// RelaxResponse

// .mavsdk.rpc.winch.WinchResult winch_result = 1;
inline bool RelaxResponse::has_winch_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.winch_result_ != nullptr);
  return value;
}
inline void RelaxResponse::clear_winch_result() {
  if (_impl_.winch_result_ != nullptr) _impl_.winch_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::winch::WinchResult& RelaxResponse::_internal_winch_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::winch::WinchResult* p = _impl_.winch_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::winch::WinchResult&>(::mavsdk::rpc::winch::_WinchResult_default_instance_);
}
inline const ::mavsdk::rpc::winch::WinchResult& RelaxResponse::winch_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.RelaxResponse.winch_result)
  return _internal_winch_result();
}
inline void RelaxResponse::unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.winch_result_);
  }
  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.winch.RelaxResponse.winch_result)
}
inline ::mavsdk::rpc::winch::WinchResult* RelaxResponse::release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* released = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::winch::WinchResult* RelaxResponse::unsafe_arena_release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.winch.RelaxResponse.winch_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* temp = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::winch::WinchResult* RelaxResponse::_internal_mutable_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.winch_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(GetArenaForAllocation());
    _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(p);
  }
  return _impl_.winch_result_;
}
inline ::mavsdk::rpc::winch::WinchResult* RelaxResponse::mutable_winch_result() {
  ::mavsdk::rpc::winch::WinchResult* _msg = _internal_mutable_winch_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.winch.RelaxResponse.winch_result)
  return _msg;
}
inline void RelaxResponse::set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(_impl_.winch_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.winch.RelaxResponse.winch_result)
}

// -------------------------------------------------------------------

// RelativeLengthControlRequest

// uint32 instance = 1;
inline void RelativeLengthControlRequest::clear_instance() {
  _impl_.instance_ = 0u;
}
inline ::uint32_t RelativeLengthControlRequest::instance() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.RelativeLengthControlRequest.instance)
  return _internal_instance();
}
inline void RelativeLengthControlRequest::set_instance(::uint32_t value) {
  _internal_set_instance(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.RelativeLengthControlRequest.instance)
}
inline ::uint32_t RelativeLengthControlRequest::_internal_instance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_;
}
inline void RelativeLengthControlRequest::_internal_set_instance(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_ = value;
}

// float length_m = 2;
inline void RelativeLengthControlRequest::clear_length_m() {
  _impl_.length_m_ = 0;
}
inline float RelativeLengthControlRequest::length_m() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.RelativeLengthControlRequest.length_m)
  return _internal_length_m();
}
inline void RelativeLengthControlRequest::set_length_m(float value) {
  _internal_set_length_m(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.RelativeLengthControlRequest.length_m)
}
inline float RelativeLengthControlRequest::_internal_length_m() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.length_m_;
}
inline void RelativeLengthControlRequest::_internal_set_length_m(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.length_m_ = value;
}

// float rate_m_s = 3 [(.mavsdk.options.default_value) = "NaN"];
inline void RelativeLengthControlRequest::clear_rate_m_s() {
  _impl_.rate_m_s_ = 0;
}
inline float RelativeLengthControlRequest::rate_m_s() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.RelativeLengthControlRequest.rate_m_s)
  return _internal_rate_m_s();
}
inline void RelativeLengthControlRequest::set_rate_m_s(float value) {
  _internal_set_rate_m_s(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.RelativeLengthControlRequest.rate_m_s)
}
inline float RelativeLengthControlRequest::_internal_rate_m_s() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rate_m_s_;
}
inline void RelativeLengthControlRequest::_internal_set_rate_m_s(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rate_m_s_ = value;
}

// -------------------------------------------------------------------

// RelativeLengthControlResponse

// .mavsdk.rpc.winch.WinchResult winch_result = 1;
inline bool RelativeLengthControlResponse::has_winch_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.winch_result_ != nullptr);
  return value;
}
inline void RelativeLengthControlResponse::clear_winch_result() {
  if (_impl_.winch_result_ != nullptr) _impl_.winch_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::winch::WinchResult& RelativeLengthControlResponse::_internal_winch_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::winch::WinchResult* p = _impl_.winch_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::winch::WinchResult&>(::mavsdk::rpc::winch::_WinchResult_default_instance_);
}
inline const ::mavsdk::rpc::winch::WinchResult& RelativeLengthControlResponse::winch_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.RelativeLengthControlResponse.winch_result)
  return _internal_winch_result();
}
inline void RelativeLengthControlResponse::unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.winch_result_);
  }
  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.winch.RelativeLengthControlResponse.winch_result)
}
inline ::mavsdk::rpc::winch::WinchResult* RelativeLengthControlResponse::release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* released = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::winch::WinchResult* RelativeLengthControlResponse::unsafe_arena_release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.winch.RelativeLengthControlResponse.winch_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* temp = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::winch::WinchResult* RelativeLengthControlResponse::_internal_mutable_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.winch_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(GetArenaForAllocation());
    _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(p);
  }
  return _impl_.winch_result_;
}
inline ::mavsdk::rpc::winch::WinchResult* RelativeLengthControlResponse::mutable_winch_result() {
  ::mavsdk::rpc::winch::WinchResult* _msg = _internal_mutable_winch_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.winch.RelativeLengthControlResponse.winch_result)
  return _msg;
}
inline void RelativeLengthControlResponse::set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(_impl_.winch_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.winch.RelativeLengthControlResponse.winch_result)
}

// -------------------------------------------------------------------

// RateControlRequest

// uint32 instance = 1;
inline void RateControlRequest::clear_instance() {
  _impl_.instance_ = 0u;
}
inline ::uint32_t RateControlRequest::instance() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.RateControlRequest.instance)
  return _internal_instance();
}
inline void RateControlRequest::set_instance(::uint32_t value) {
  _internal_set_instance(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.RateControlRequest.instance)
}
inline ::uint32_t RateControlRequest::_internal_instance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_;
}
inline void RateControlRequest::_internal_set_instance(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_ = value;
}

// float rate_m_s = 2;
inline void RateControlRequest::clear_rate_m_s() {
  _impl_.rate_m_s_ = 0;
}
inline float RateControlRequest::rate_m_s() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.RateControlRequest.rate_m_s)
  return _internal_rate_m_s();
}
inline void RateControlRequest::set_rate_m_s(float value) {
  _internal_set_rate_m_s(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.RateControlRequest.rate_m_s)
}
inline float RateControlRequest::_internal_rate_m_s() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rate_m_s_;
}
inline void RateControlRequest::_internal_set_rate_m_s(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rate_m_s_ = value;
}

// -------------------------------------------------------------------

// RateControlResponse

// .mavsdk.rpc.winch.WinchResult winch_result = 1;
inline bool RateControlResponse::has_winch_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.winch_result_ != nullptr);
  return value;
}
inline void RateControlResponse::clear_winch_result() {
  if (_impl_.winch_result_ != nullptr) _impl_.winch_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::winch::WinchResult& RateControlResponse::_internal_winch_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::winch::WinchResult* p = _impl_.winch_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::winch::WinchResult&>(::mavsdk::rpc::winch::_WinchResult_default_instance_);
}
inline const ::mavsdk::rpc::winch::WinchResult& RateControlResponse::winch_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.RateControlResponse.winch_result)
  return _internal_winch_result();
}
inline void RateControlResponse::unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.winch_result_);
  }
  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.winch.RateControlResponse.winch_result)
}
inline ::mavsdk::rpc::winch::WinchResult* RateControlResponse::release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* released = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::winch::WinchResult* RateControlResponse::unsafe_arena_release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.winch.RateControlResponse.winch_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* temp = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::winch::WinchResult* RateControlResponse::_internal_mutable_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.winch_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(GetArenaForAllocation());
    _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(p);
  }
  return _impl_.winch_result_;
}
inline ::mavsdk::rpc::winch::WinchResult* RateControlResponse::mutable_winch_result() {
  ::mavsdk::rpc::winch::WinchResult* _msg = _internal_mutable_winch_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.winch.RateControlResponse.winch_result)
  return _msg;
}
inline void RateControlResponse::set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(_impl_.winch_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.winch.RateControlResponse.winch_result)
}

// -------------------------------------------------------------------

// LockRequest

// uint32 instance = 1;
inline void LockRequest::clear_instance() {
  _impl_.instance_ = 0u;
}
inline ::uint32_t LockRequest::instance() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.LockRequest.instance)
  return _internal_instance();
}
inline void LockRequest::set_instance(::uint32_t value) {
  _internal_set_instance(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.LockRequest.instance)
}
inline ::uint32_t LockRequest::_internal_instance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_;
}
inline void LockRequest::_internal_set_instance(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_ = value;
}

// -------------------------------------------------------------------

// LockResponse

// .mavsdk.rpc.winch.WinchResult winch_result = 1;
inline bool LockResponse::has_winch_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.winch_result_ != nullptr);
  return value;
}
inline void LockResponse::clear_winch_result() {
  if (_impl_.winch_result_ != nullptr) _impl_.winch_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::winch::WinchResult& LockResponse::_internal_winch_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::winch::WinchResult* p = _impl_.winch_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::winch::WinchResult&>(::mavsdk::rpc::winch::_WinchResult_default_instance_);
}
inline const ::mavsdk::rpc::winch::WinchResult& LockResponse::winch_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.LockResponse.winch_result)
  return _internal_winch_result();
}
inline void LockResponse::unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.winch_result_);
  }
  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.winch.LockResponse.winch_result)
}
inline ::mavsdk::rpc::winch::WinchResult* LockResponse::release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* released = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::winch::WinchResult* LockResponse::unsafe_arena_release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.winch.LockResponse.winch_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* temp = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::winch::WinchResult* LockResponse::_internal_mutable_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.winch_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(GetArenaForAllocation());
    _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(p);
  }
  return _impl_.winch_result_;
}
inline ::mavsdk::rpc::winch::WinchResult* LockResponse::mutable_winch_result() {
  ::mavsdk::rpc::winch::WinchResult* _msg = _internal_mutable_winch_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.winch.LockResponse.winch_result)
  return _msg;
}
inline void LockResponse::set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(_impl_.winch_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.winch.LockResponse.winch_result)
}

// -------------------------------------------------------------------

// DeliverRequest

// uint32 instance = 1;
inline void DeliverRequest::clear_instance() {
  _impl_.instance_ = 0u;
}
inline ::uint32_t DeliverRequest::instance() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.DeliverRequest.instance)
  return _internal_instance();
}
inline void DeliverRequest::set_instance(::uint32_t value) {
  _internal_set_instance(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.DeliverRequest.instance)
}
inline ::uint32_t DeliverRequest::_internal_instance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_;
}
inline void DeliverRequest::_internal_set_instance(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_ = value;
}

// -------------------------------------------------------------------

// DeliverResponse

// .mavsdk.rpc.winch.WinchResult winch_result = 1;
inline bool DeliverResponse::has_winch_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.winch_result_ != nullptr);
  return value;
}
inline void DeliverResponse::clear_winch_result() {
  if (_impl_.winch_result_ != nullptr) _impl_.winch_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::winch::WinchResult& DeliverResponse::_internal_winch_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::winch::WinchResult* p = _impl_.winch_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::winch::WinchResult&>(::mavsdk::rpc::winch::_WinchResult_default_instance_);
}
inline const ::mavsdk::rpc::winch::WinchResult& DeliverResponse::winch_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.DeliverResponse.winch_result)
  return _internal_winch_result();
}
inline void DeliverResponse::unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.winch_result_);
  }
  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.winch.DeliverResponse.winch_result)
}
inline ::mavsdk::rpc::winch::WinchResult* DeliverResponse::release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* released = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::winch::WinchResult* DeliverResponse::unsafe_arena_release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.winch.DeliverResponse.winch_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* temp = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::winch::WinchResult* DeliverResponse::_internal_mutable_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.winch_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(GetArenaForAllocation());
    _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(p);
  }
  return _impl_.winch_result_;
}
inline ::mavsdk::rpc::winch::WinchResult* DeliverResponse::mutable_winch_result() {
  ::mavsdk::rpc::winch::WinchResult* _msg = _internal_mutable_winch_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.winch.DeliverResponse.winch_result)
  return _msg;
}
inline void DeliverResponse::set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(_impl_.winch_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.winch.DeliverResponse.winch_result)
}

// -------------------------------------------------------------------

// HoldRequest

// uint32 instance = 1;
inline void HoldRequest::clear_instance() {
  _impl_.instance_ = 0u;
}
inline ::uint32_t HoldRequest::instance() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.HoldRequest.instance)
  return _internal_instance();
}
inline void HoldRequest::set_instance(::uint32_t value) {
  _internal_set_instance(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.HoldRequest.instance)
}
inline ::uint32_t HoldRequest::_internal_instance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_;
}
inline void HoldRequest::_internal_set_instance(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_ = value;
}

// -------------------------------------------------------------------

// HoldResponse

// .mavsdk.rpc.winch.WinchResult winch_result = 1;
inline bool HoldResponse::has_winch_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.winch_result_ != nullptr);
  return value;
}
inline void HoldResponse::clear_winch_result() {
  if (_impl_.winch_result_ != nullptr) _impl_.winch_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::winch::WinchResult& HoldResponse::_internal_winch_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::winch::WinchResult* p = _impl_.winch_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::winch::WinchResult&>(::mavsdk::rpc::winch::_WinchResult_default_instance_);
}
inline const ::mavsdk::rpc::winch::WinchResult& HoldResponse::winch_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.HoldResponse.winch_result)
  return _internal_winch_result();
}
inline void HoldResponse::unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.winch_result_);
  }
  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.winch.HoldResponse.winch_result)
}
inline ::mavsdk::rpc::winch::WinchResult* HoldResponse::release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* released = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::winch::WinchResult* HoldResponse::unsafe_arena_release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.winch.HoldResponse.winch_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* temp = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::winch::WinchResult* HoldResponse::_internal_mutable_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.winch_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(GetArenaForAllocation());
    _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(p);
  }
  return _impl_.winch_result_;
}
inline ::mavsdk::rpc::winch::WinchResult* HoldResponse::mutable_winch_result() {
  ::mavsdk::rpc::winch::WinchResult* _msg = _internal_mutable_winch_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.winch.HoldResponse.winch_result)
  return _msg;
}
inline void HoldResponse::set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(_impl_.winch_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.winch.HoldResponse.winch_result)
}

// -------------------------------------------------------------------

// RetractRequest

// uint32 instance = 1;
inline void RetractRequest::clear_instance() {
  _impl_.instance_ = 0u;
}
inline ::uint32_t RetractRequest::instance() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.RetractRequest.instance)
  return _internal_instance();
}
inline void RetractRequest::set_instance(::uint32_t value) {
  _internal_set_instance(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.RetractRequest.instance)
}
inline ::uint32_t RetractRequest::_internal_instance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_;
}
inline void RetractRequest::_internal_set_instance(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_ = value;
}

// -------------------------------------------------------------------

// RetractResponse

// .mavsdk.rpc.winch.WinchResult winch_result = 1;
inline bool RetractResponse::has_winch_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.winch_result_ != nullptr);
  return value;
}
inline void RetractResponse::clear_winch_result() {
  if (_impl_.winch_result_ != nullptr) _impl_.winch_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::winch::WinchResult& RetractResponse::_internal_winch_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::winch::WinchResult* p = _impl_.winch_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::winch::WinchResult&>(::mavsdk::rpc::winch::_WinchResult_default_instance_);
}
inline const ::mavsdk::rpc::winch::WinchResult& RetractResponse::winch_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.RetractResponse.winch_result)
  return _internal_winch_result();
}
inline void RetractResponse::unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.winch_result_);
  }
  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.winch.RetractResponse.winch_result)
}
inline ::mavsdk::rpc::winch::WinchResult* RetractResponse::release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* released = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::winch::WinchResult* RetractResponse::unsafe_arena_release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.winch.RetractResponse.winch_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* temp = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::winch::WinchResult* RetractResponse::_internal_mutable_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.winch_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(GetArenaForAllocation());
    _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(p);
  }
  return _impl_.winch_result_;
}
inline ::mavsdk::rpc::winch::WinchResult* RetractResponse::mutable_winch_result() {
  ::mavsdk::rpc::winch::WinchResult* _msg = _internal_mutable_winch_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.winch.RetractResponse.winch_result)
  return _msg;
}
inline void RetractResponse::set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(_impl_.winch_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.winch.RetractResponse.winch_result)
}

// -------------------------------------------------------------------

// LoadLineRequest

// uint32 instance = 1;
inline void LoadLineRequest::clear_instance() {
  _impl_.instance_ = 0u;
}
inline ::uint32_t LoadLineRequest::instance() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.LoadLineRequest.instance)
  return _internal_instance();
}
inline void LoadLineRequest::set_instance(::uint32_t value) {
  _internal_set_instance(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.LoadLineRequest.instance)
}
inline ::uint32_t LoadLineRequest::_internal_instance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_;
}
inline void LoadLineRequest::_internal_set_instance(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_ = value;
}

// -------------------------------------------------------------------

// LoadLineResponse

// .mavsdk.rpc.winch.WinchResult winch_result = 1;
inline bool LoadLineResponse::has_winch_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.winch_result_ != nullptr);
  return value;
}
inline void LoadLineResponse::clear_winch_result() {
  if (_impl_.winch_result_ != nullptr) _impl_.winch_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::winch::WinchResult& LoadLineResponse::_internal_winch_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::winch::WinchResult* p = _impl_.winch_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::winch::WinchResult&>(::mavsdk::rpc::winch::_WinchResult_default_instance_);
}
inline const ::mavsdk::rpc::winch::WinchResult& LoadLineResponse::winch_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.LoadLineResponse.winch_result)
  return _internal_winch_result();
}
inline void LoadLineResponse::unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.winch_result_);
  }
  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.winch.LoadLineResponse.winch_result)
}
inline ::mavsdk::rpc::winch::WinchResult* LoadLineResponse::release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* released = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::winch::WinchResult* LoadLineResponse::unsafe_arena_release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.winch.LoadLineResponse.winch_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* temp = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::winch::WinchResult* LoadLineResponse::_internal_mutable_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.winch_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(GetArenaForAllocation());
    _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(p);
  }
  return _impl_.winch_result_;
}
inline ::mavsdk::rpc::winch::WinchResult* LoadLineResponse::mutable_winch_result() {
  ::mavsdk::rpc::winch::WinchResult* _msg = _internal_mutable_winch_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.winch.LoadLineResponse.winch_result)
  return _msg;
}
inline void LoadLineResponse::set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(_impl_.winch_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.winch.LoadLineResponse.winch_result)
}

// -------------------------------------------------------------------

// AbandonLineRequest

// uint32 instance = 1;
inline void AbandonLineRequest::clear_instance() {
  _impl_.instance_ = 0u;
}
inline ::uint32_t AbandonLineRequest::instance() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.AbandonLineRequest.instance)
  return _internal_instance();
}
inline void AbandonLineRequest::set_instance(::uint32_t value) {
  _internal_set_instance(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.AbandonLineRequest.instance)
}
inline ::uint32_t AbandonLineRequest::_internal_instance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_;
}
inline void AbandonLineRequest::_internal_set_instance(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_ = value;
}

// -------------------------------------------------------------------

// AbandonLineResponse

// .mavsdk.rpc.winch.WinchResult winch_result = 1;
inline bool AbandonLineResponse::has_winch_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.winch_result_ != nullptr);
  return value;
}
inline void AbandonLineResponse::clear_winch_result() {
  if (_impl_.winch_result_ != nullptr) _impl_.winch_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::winch::WinchResult& AbandonLineResponse::_internal_winch_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::winch::WinchResult* p = _impl_.winch_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::winch::WinchResult&>(::mavsdk::rpc::winch::_WinchResult_default_instance_);
}
inline const ::mavsdk::rpc::winch::WinchResult& AbandonLineResponse::winch_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.AbandonLineResponse.winch_result)
  return _internal_winch_result();
}
inline void AbandonLineResponse::unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.winch_result_);
  }
  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.winch.AbandonLineResponse.winch_result)
}
inline ::mavsdk::rpc::winch::WinchResult* AbandonLineResponse::release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* released = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::winch::WinchResult* AbandonLineResponse::unsafe_arena_release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.winch.AbandonLineResponse.winch_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* temp = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::winch::WinchResult* AbandonLineResponse::_internal_mutable_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.winch_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(GetArenaForAllocation());
    _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(p);
  }
  return _impl_.winch_result_;
}
inline ::mavsdk::rpc::winch::WinchResult* AbandonLineResponse::mutable_winch_result() {
  ::mavsdk::rpc::winch::WinchResult* _msg = _internal_mutable_winch_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.winch.AbandonLineResponse.winch_result)
  return _msg;
}
inline void AbandonLineResponse::set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(_impl_.winch_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.winch.AbandonLineResponse.winch_result)
}

// -------------------------------------------------------------------

// LoadPayloadRequest

// uint32 instance = 1;
inline void LoadPayloadRequest::clear_instance() {
  _impl_.instance_ = 0u;
}
inline ::uint32_t LoadPayloadRequest::instance() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.LoadPayloadRequest.instance)
  return _internal_instance();
}
inline void LoadPayloadRequest::set_instance(::uint32_t value) {
  _internal_set_instance(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.LoadPayloadRequest.instance)
}
inline ::uint32_t LoadPayloadRequest::_internal_instance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instance_;
}
inline void LoadPayloadRequest::_internal_set_instance(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instance_ = value;
}

// -------------------------------------------------------------------

// LoadPayloadResponse

// .mavsdk.rpc.winch.WinchResult winch_result = 1;
inline bool LoadPayloadResponse::has_winch_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.winch_result_ != nullptr);
  return value;
}
inline void LoadPayloadResponse::clear_winch_result() {
  if (_impl_.winch_result_ != nullptr) _impl_.winch_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::winch::WinchResult& LoadPayloadResponse::_internal_winch_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::winch::WinchResult* p = _impl_.winch_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::winch::WinchResult&>(::mavsdk::rpc::winch::_WinchResult_default_instance_);
}
inline const ::mavsdk::rpc::winch::WinchResult& LoadPayloadResponse::winch_result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.LoadPayloadResponse.winch_result)
  return _internal_winch_result();
}
inline void LoadPayloadResponse::unsafe_arena_set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.winch_result_);
  }
  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.winch.LoadPayloadResponse.winch_result)
}
inline ::mavsdk::rpc::winch::WinchResult* LoadPayloadResponse::release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* released = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::winch::WinchResult* LoadPayloadResponse::unsafe_arena_release_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.winch.LoadPayloadResponse.winch_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::winch::WinchResult* temp = _impl_.winch_result_;
  _impl_.winch_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::winch::WinchResult* LoadPayloadResponse::_internal_mutable_winch_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.winch_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::winch::WinchResult>(GetArenaForAllocation());
    _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(p);
  }
  return _impl_.winch_result_;
}
inline ::mavsdk::rpc::winch::WinchResult* LoadPayloadResponse::mutable_winch_result() {
  ::mavsdk::rpc::winch::WinchResult* _msg = _internal_mutable_winch_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.winch.LoadPayloadResponse.winch_result)
  return _msg;
}
inline void LoadPayloadResponse::set_allocated_winch_result(::mavsdk::rpc::winch::WinchResult* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(_impl_.winch_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.winch_result_ = reinterpret_cast<::mavsdk::rpc::winch::WinchResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.winch.LoadPayloadResponse.winch_result)
}

// -------------------------------------------------------------------

// WinchResult

// .mavsdk.rpc.winch.WinchResult.Result result = 1;
inline void WinchResult::clear_result() {
  _impl_.result_ = 0;
}
inline ::mavsdk::rpc::winch::WinchResult_Result WinchResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.WinchResult.result)
  return _internal_result();
}
inline void WinchResult::set_result(::mavsdk::rpc::winch::WinchResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.WinchResult.result)
}
inline ::mavsdk::rpc::winch::WinchResult_Result WinchResult::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::winch::WinchResult_Result>(_impl_.result_);
}
inline void WinchResult::_internal_set_result(::mavsdk::rpc::winch::WinchResult_Result value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// string result_str = 2;
inline void WinchResult::clear_result_str() {
  _impl_.result_str_.ClearToEmpty();
}
inline const std::string& WinchResult::result_str() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.winch.WinchResult.result_str)
  return _internal_result_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WinchResult::set_result_str(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.winch.WinchResult.result_str)
}
inline std::string* WinchResult::mutable_result_str() {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.winch.WinchResult.result_str)
  return _s;
}
inline const std::string& WinchResult::_internal_result_str() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_str_.Get();
}
inline void WinchResult::_internal_set_result_str(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(value, GetArenaForAllocation());
}
inline std::string* WinchResult::_internal_mutable_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_str_.Mutable( GetArenaForAllocation());
}
inline std::string* WinchResult::release_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.winch.WinchResult.result_str)
  return _impl_.result_str_.Release();
}
inline void WinchResult::set_allocated_result_str(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_str_.IsDefault()) {
          _impl_.result_str_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.winch.WinchResult.result_str)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace winch
}  // namespace rpc
}  // namespace mavsdk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::mavsdk::rpc::winch::WinchResult_Result> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::winch::WinchResult_Result>() {
  return ::mavsdk::rpc::winch::WinchResult_Result_descriptor();
}
template <>
struct is_proto_enum<::mavsdk::rpc::winch::WinchAction> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::winch::WinchAction>() {
  return ::mavsdk::rpc::winch::WinchAction_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_winch_2fwinch_2eproto_2epb_2eh
