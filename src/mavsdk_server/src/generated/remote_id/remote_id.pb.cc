// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: remote_id/remote_id.proto

#include "remote_id/remote_id.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace remote_id {

inline constexpr SystemId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : operator_location_type_{static_cast< ::mavsdk::rpc::remote_id::SystemId_OperatorLocationType >(0)},
        classification_type_{static_cast< ::mavsdk::rpc::remote_id::SystemId_ClassificationType >(0)},
        operator_latitude_deg_{0},
        operator_longitude_deg_{0},
        area_count_{0u},
        area_radius_m_{0u},
        area_ceiling_m_{0},
        area_floor_m_{0},
        category_eu_{static_cast< ::mavsdk::rpc::remote_id::SystemId_CategoryEu >(0)},
        class_eu_{static_cast< ::mavsdk::rpc::remote_id::SystemId_ClassEu >(0)},
        time_utc_us_{::uint64_t{0u}},
        operator_altitude_geo_m_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SystemId::SystemId(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SystemIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemIdDefaultTypeInternal() {}
  union {
    SystemId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemIdDefaultTypeInternal _SystemId_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeArmStatusRequest::SubscribeArmStatusRequest(::_pbi::ConstantInitialized) {}
struct SubscribeArmStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeArmStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeArmStatusRequestDefaultTypeInternal() {}
  union {
    SubscribeArmStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeArmStatusRequestDefaultTypeInternal _SubscribeArmStatusRequest_default_instance_;

inline constexpr SelfId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_type_{static_cast< ::mavsdk::rpc::remote_id::SelfId_DescType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SelfId::SelfId(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SelfIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelfIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelfIdDefaultTypeInternal() {}
  union {
    SelfId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelfIdDefaultTypeInternal _SelfId_default_instance_;

inline constexpr RemoteIdResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::remote_id::RemoteIdResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RemoteIdResult::RemoteIdResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RemoteIdResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoteIdResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoteIdResultDefaultTypeInternal() {}
  union {
    RemoteIdResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoteIdResultDefaultTypeInternal _RemoteIdResult_default_instance_;

inline constexpr OperatorId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : operator_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        operator_id_type_{static_cast< ::mavsdk::rpc::remote_id::OperatorId_OperatorIdType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OperatorId::OperatorId(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OperatorIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperatorIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperatorIdDefaultTypeInternal() {}
  union {
    OperatorId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperatorIdDefaultTypeInternal _OperatorId_default_instance_;

inline constexpr LocationAccuracy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : horizontal_accuracy_{static_cast< ::mavsdk::rpc::remote_id::LocationAccuracy_HorAcc >(0)},
        vertical_accuracy_{static_cast< ::mavsdk::rpc::remote_id::LocationAccuracy_VerAcc >(0)},
        barometer_accuracy_{static_cast< ::mavsdk::rpc::remote_id::LocationAccuracy_VerAcc >(0)},
        speed_accuracy_{static_cast< ::mavsdk::rpc::remote_id::LocationAccuracy_SpeedAcc >(0)},
        timestamp_accuracy_{static_cast< ::mavsdk::rpc::remote_id::LocationAccuracy_TimeAcc >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LocationAccuracy::LocationAccuracy(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LocationAccuracyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationAccuracyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationAccuracyDefaultTypeInternal() {}
  union {
    LocationAccuracy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationAccuracyDefaultTypeInternal _LocationAccuracy_default_instance_;

inline constexpr Location::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_{static_cast< ::mavsdk::rpc::remote_id::Location_Status >(0)},
        direction_deg_{0u},
        speed_horizontal_m_s_{0},
        speed_vertical_m_s_{0},
        latitude_deg_{0},
        longitude_deg_{0},
        altitude_barometric_m_{0},
        altitude_geodetic_m_{0},
        height_reference_{static_cast< ::mavsdk::rpc::remote_id::Location_HeightRef >(0)},
        height_m_{0},
        time_utc_us_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Location::Location(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationDefaultTypeInternal() {}
  union {
    Location _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationDefaultTypeInternal _Location_default_instance_;

inline constexpr BasicId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uas_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_type_{static_cast< ::mavsdk::rpc::remote_id::BasicId_IdType >(0)},
        ua_type_{static_cast< ::mavsdk::rpc::remote_id::BasicId_UasType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BasicId::BasicId(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BasicIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BasicIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BasicIdDefaultTypeInternal() {}
  union {
    BasicId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BasicIdDefaultTypeInternal _BasicId_default_instance_;

inline constexpr ArmStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{static_cast< ::mavsdk::rpc::remote_id::ArmStatus_Status >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ArmStatus::ArmStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ArmStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArmStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArmStatusDefaultTypeInternal() {}
  union {
    ArmStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArmStatusDefaultTypeInternal _ArmStatus_default_instance_;

inline constexpr SetSystemResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        remote_id_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetSystemResponse::SetSystemResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetSystemResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetSystemResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetSystemResponseDefaultTypeInternal() {}
  union {
    SetSystemResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetSystemResponseDefaultTypeInternal _SetSystemResponse_default_instance_;

inline constexpr SetSystemRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        system_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetSystemRequest::SetSystemRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetSystemRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetSystemRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetSystemRequestDefaultTypeInternal() {}
  union {
    SetSystemRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetSystemRequestDefaultTypeInternal _SetSystemRequest_default_instance_;

inline constexpr SetSelfIdResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        remote_id_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetSelfIdResponse::SetSelfIdResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetSelfIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetSelfIdResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetSelfIdResponseDefaultTypeInternal() {}
  union {
    SetSelfIdResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetSelfIdResponseDefaultTypeInternal _SetSelfIdResponse_default_instance_;

inline constexpr SetSelfIdRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        self_id_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetSelfIdRequest::SetSelfIdRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetSelfIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetSelfIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetSelfIdRequestDefaultTypeInternal() {}
  union {
    SetSelfIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetSelfIdRequestDefaultTypeInternal _SetSelfIdRequest_default_instance_;

inline constexpr SetOperatorIdResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        remote_id_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetOperatorIdResponse::SetOperatorIdResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetOperatorIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetOperatorIdResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetOperatorIdResponseDefaultTypeInternal() {}
  union {
    SetOperatorIdResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetOperatorIdResponseDefaultTypeInternal _SetOperatorIdResponse_default_instance_;

inline constexpr SetOperatorIdRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        system_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetOperatorIdRequest::SetOperatorIdRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetOperatorIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetOperatorIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetOperatorIdRequestDefaultTypeInternal() {}
  union {
    SetOperatorIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetOperatorIdRequestDefaultTypeInternal _SetOperatorIdRequest_default_instance_;

inline constexpr SetLocationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        remote_id_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetLocationResponse::SetLocationResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetLocationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetLocationResponseDefaultTypeInternal() {}
  union {
    SetLocationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetLocationResponseDefaultTypeInternal _SetLocationResponse_default_instance_;

inline constexpr SetLocationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        location_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetLocationRequest::SetLocationRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetLocationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetLocationRequestDefaultTypeInternal() {}
  union {
    SetLocationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetLocationRequestDefaultTypeInternal _SetLocationRequest_default_instance_;

inline constexpr SetLocationAccuracyResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        remote_id_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetLocationAccuracyResponse::SetLocationAccuracyResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetLocationAccuracyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetLocationAccuracyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetLocationAccuracyResponseDefaultTypeInternal() {}
  union {
    SetLocationAccuracyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetLocationAccuracyResponseDefaultTypeInternal _SetLocationAccuracyResponse_default_instance_;

inline constexpr SetLocationAccuracyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        location_accuracy_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetLocationAccuracyRequest::SetLocationAccuracyRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetLocationAccuracyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetLocationAccuracyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetLocationAccuracyRequestDefaultTypeInternal() {}
  union {
    SetLocationAccuracyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetLocationAccuracyRequestDefaultTypeInternal _SetLocationAccuracyRequest_default_instance_;

inline constexpr SetBasicIdResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        remote_id_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetBasicIdResponse::SetBasicIdResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetBasicIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetBasicIdResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetBasicIdResponseDefaultTypeInternal() {}
  union {
    SetBasicIdResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetBasicIdResponseDefaultTypeInternal _SetBasicIdResponse_default_instance_;

inline constexpr SetBasicIdRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        basic_id_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetBasicIdRequest::SetBasicIdRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetBasicIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetBasicIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetBasicIdRequestDefaultTypeInternal() {}
  union {
    SetBasicIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetBasicIdRequestDefaultTypeInternal _SetBasicIdRequest_default_instance_;

inline constexpr ArmStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        arm_status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ArmStatusResponse::ArmStatusResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ArmStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArmStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArmStatusResponseDefaultTypeInternal() {}
  union {
    ArmStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArmStatusResponseDefaultTypeInternal _ArmStatusResponse_default_instance_;
}  // namespace remote_id
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_remote_5fid_2fremote_5fid_2eproto[22];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[16];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_remote_5fid_2fremote_5fid_2eproto = nullptr;
const ::uint32_t TableStruct_remote_5fid_2fremote_5fid_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetBasicIdRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetBasicIdRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetBasicIdRequest, _impl_.basic_id_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetBasicIdResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetBasicIdResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetBasicIdResponse, _impl_.remote_id_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationRequest, _impl_.location_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationResponse, _impl_.remote_id_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationAccuracyRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationAccuracyRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationAccuracyRequest, _impl_.location_accuracy_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationAccuracyResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationAccuracyResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationAccuracyResponse, _impl_.remote_id_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetSystemRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetSystemRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetSystemRequest, _impl_.system_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetSystemResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetSystemResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetSystemResponse, _impl_.remote_id_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetOperatorIdRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetOperatorIdRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetOperatorIdRequest, _impl_.system_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetOperatorIdResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetOperatorIdResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetOperatorIdResponse, _impl_.remote_id_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetSelfIdRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetSelfIdRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetSelfIdRequest, _impl_.self_id_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetSelfIdResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetSelfIdResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetSelfIdResponse, _impl_.remote_id_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SubscribeArmStatusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::ArmStatusResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::ArmStatusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::ArmStatusResponse, _impl_.arm_status_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::BasicId, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::BasicId, _impl_.id_type_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::BasicId, _impl_.ua_type_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::BasicId, _impl_.uas_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.direction_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.speed_horizontal_m_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.speed_vertical_m_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.latitude_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.longitude_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.altitude_barometric_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.altitude_geodetic_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.height_reference_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.height_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.time_utc_us_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::LocationAccuracy, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::LocationAccuracy, _impl_.horizontal_accuracy_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::LocationAccuracy, _impl_.vertical_accuracy_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::LocationAccuracy, _impl_.barometer_accuracy_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::LocationAccuracy, _impl_.speed_accuracy_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::LocationAccuracy, _impl_.timestamp_accuracy_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SystemId, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SystemId, _impl_.operator_location_type_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SystemId, _impl_.classification_type_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SystemId, _impl_.operator_latitude_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SystemId, _impl_.operator_longitude_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SystemId, _impl_.area_count_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SystemId, _impl_.area_radius_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SystemId, _impl_.area_ceiling_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SystemId, _impl_.area_floor_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SystemId, _impl_.category_eu_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SystemId, _impl_.class_eu_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SystemId, _impl_.operator_altitude_geo_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SystemId, _impl_.time_utc_us_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::OperatorId, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::OperatorId, _impl_.operator_id_type_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::OperatorId, _impl_.operator_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SelfId, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SelfId, _impl_.description_type_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SelfId, _impl_.description_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::ArmStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::ArmStatus, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::ArmStatus, _impl_.error_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::RemoteIdResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::RemoteIdResult, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::RemoteIdResult, _impl_.result_str_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::mavsdk::rpc::remote_id::SetBasicIdRequest)},
        {10, 19, -1, sizeof(::mavsdk::rpc::remote_id::SetBasicIdResponse)},
        {20, 29, -1, sizeof(::mavsdk::rpc::remote_id::SetLocationRequest)},
        {30, 39, -1, sizeof(::mavsdk::rpc::remote_id::SetLocationResponse)},
        {40, 49, -1, sizeof(::mavsdk::rpc::remote_id::SetLocationAccuracyRequest)},
        {50, 59, -1, sizeof(::mavsdk::rpc::remote_id::SetLocationAccuracyResponse)},
        {60, 69, -1, sizeof(::mavsdk::rpc::remote_id::SetSystemRequest)},
        {70, 79, -1, sizeof(::mavsdk::rpc::remote_id::SetSystemResponse)},
        {80, 89, -1, sizeof(::mavsdk::rpc::remote_id::SetOperatorIdRequest)},
        {90, 99, -1, sizeof(::mavsdk::rpc::remote_id::SetOperatorIdResponse)},
        {100, 109, -1, sizeof(::mavsdk::rpc::remote_id::SetSelfIdRequest)},
        {110, 119, -1, sizeof(::mavsdk::rpc::remote_id::SetSelfIdResponse)},
        {120, -1, -1, sizeof(::mavsdk::rpc::remote_id::SubscribeArmStatusRequest)},
        {128, 137, -1, sizeof(::mavsdk::rpc::remote_id::ArmStatusResponse)},
        {138, -1, -1, sizeof(::mavsdk::rpc::remote_id::BasicId)},
        {149, -1, -1, sizeof(::mavsdk::rpc::remote_id::Location)},
        {168, -1, -1, sizeof(::mavsdk::rpc::remote_id::LocationAccuracy)},
        {181, -1, -1, sizeof(::mavsdk::rpc::remote_id::SystemId)},
        {201, -1, -1, sizeof(::mavsdk::rpc::remote_id::OperatorId)},
        {211, -1, -1, sizeof(::mavsdk::rpc::remote_id::SelfId)},
        {221, -1, -1, sizeof(::mavsdk::rpc::remote_id::ArmStatus)},
        {231, -1, -1, sizeof(::mavsdk::rpc::remote_id::RemoteIdResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::remote_id::_SetBasicIdRequest_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SetBasicIdResponse_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SetLocationRequest_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SetLocationResponse_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SetLocationAccuracyRequest_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SetLocationAccuracyResponse_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SetSystemRequest_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SetSystemResponse_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SetOperatorIdRequest_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SetOperatorIdResponse_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SetSelfIdRequest_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SetSelfIdResponse_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SubscribeArmStatusRequest_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_ArmStatusResponse_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_BasicId_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_Location_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_LocationAccuracy_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SystemId_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_OperatorId_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SelfId_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_ArmStatus_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_RemoteIdResult_default_instance_._instance,
};
const char descriptor_table_protodef_remote_5fid_2fremote_5fid_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\031remote_id/remote_id.proto\022\024mavsdk.rpc."
    "remote_id\032\024mavsdk_options.proto\"D\n\021SetBa"
    "sicIdRequest\022/\n\010basic_id\030\001 \001(\0132\035.mavsdk."
    "rpc.remote_id.BasicId\"T\n\022SetBasicIdRespo"
    "nse\022>\n\020remote_id_result\030\001 \001(\0132$.mavsdk.r"
    "pc.remote_id.RemoteIdResult\"F\n\022SetLocati"
    "onRequest\0220\n\010location\030\001 \001(\0132\036.mavsdk.rpc"
    ".remote_id.Location\"U\n\023SetLocationRespon"
    "se\022>\n\020remote_id_result\030\001 \001(\0132$.mavsdk.rp"
    "c.remote_id.RemoteIdResult\"_\n\032SetLocatio"
    "nAccuracyRequest\022A\n\021location_accuracy\030\001 "
    "\001(\0132&.mavsdk.rpc.remote_id.LocationAccur"
    "acy\"]\n\033SetLocationAccuracyResponse\022>\n\020re"
    "mote_id_result\030\001 \001(\0132$.mavsdk.rpc.remote"
    "_id.RemoteIdResult\"B\n\020SetSystemRequest\022."
    "\n\006system\030\001 \001(\0132\036.mavsdk.rpc.remote_id.Sy"
    "stemId\"S\n\021SetSystemResponse\022>\n\020remote_id"
    "_result\030\001 \001(\0132$.mavsdk.rpc.remote_id.Rem"
    "oteIdResult\"H\n\024SetOperatorIdRequest\0220\n\006s"
    "ystem\030\001 \001(\0132 .mavsdk.rpc.remote_id.Opera"
    "torId\"W\n\025SetOperatorIdResponse\022>\n\020remote"
    "_id_result\030\001 \001(\0132$.mavsdk.rpc.remote_id."
    "RemoteIdResult\"A\n\020SetSelfIdRequest\022-\n\007se"
    "lf_id\030\001 \001(\0132\034.mavsdk.rpc.remote_id.SelfI"
    "d\"S\n\021SetSelfIdResponse\022>\n\020remote_id_resu"
    "lt\030\001 \001(\0132$.mavsdk.rpc.remote_id.RemoteId"
    "Result\"\033\n\031SubscribeArmStatusRequest\"H\n\021A"
    "rmStatusResponse\0223\n\narm_status\030\001 \001(\0132\037.m"
    "avsdk.rpc.remote_id.ArmStatus\"\323\005\n\007BasicI"
    "d\0225\n\007id_type\030\001 \001(\0162$.mavsdk.rpc.remote_i"
    "d.BasicId.IdType\0226\n\007ua_type\030\002 \001(\0162%.mavs"
    "dk.rpc.remote_id.BasicId.UasType\022\016\n\006uas_"
    "id\030\003 \001(\t\"\226\001\n\006IdType\022\020\n\014ID_TYPE_NONE\020\000\022\031\n"
    "\025ID_TYPE_SERIAL_NUMBER\020\001\022\037\n\033ID_TYPE_CAA_"
    "REGISTRATION_ID\020\002\022\035\n\031ID_TYPE_UTM_ASSIGNE"
    "D_UUID\020\003\022\037\n\033ID_TYPE_SPECIFIC_SESSION_ID\020"
    "\004\"\257\003\n\007UasType\022\021\n\rUAS_TYPE_NONE\020\000\022\026\n\022UAS_"
    "TYPE_AEROPLANE\020\001\022%\n!UAS_TYPE_HELICOPTER_"
    "OR_MULTIROTOR\020\002\022\026\n\022UAS_TYPE_GYROPLANE\020\003\022"
    "\030\n\024UAS_TYPE_HYBRID_LIFT\020\004\022\030\n\024UAS_TYPE_OR"
    "NITHOPTER\020\005\022\023\n\017UAS_TYPE_GLIDER\020\006\022\021\n\rUAS_"
    "TYPE_KITE\020\007\022\031\n\025UAS_TYPE_FREE_BALLOON\020\010\022\034"
    "\n\030UAS_TYPE_CAPTIVE_BALLOON\020\t\022\024\n\020UAS_TYPE"
    "_AIRSHIP\020\n\022 \n\034UAS_TYPE_FREE_FALL_PARACHU"
    "TE\020\013\022\023\n\017UAS_TYPE_ROCKET\020\014\022&\n\"UAS_TYPE_TE"
    "THERED_POWERED_AIRCRAFT\020\r\022\034\n\030UAS_TYPE_GR"
    "OUND_OBSTACLE\020\016\022\022\n\016UAS_TYPE_OTHER\020\017\"\261\004\n\010"
    "Location\0225\n\006status\030\001 \001(\0162%.mavsdk.rpc.re"
    "mote_id.Location.Status\022\025\n\rdirection_deg"
    "\030\002 \001(\r\022\034\n\024speed_horizontal_m_s\030\003 \001(\002\022\032\n\022"
    "speed_vertical_m_s\030\004 \001(\002\022\024\n\014latitude_deg"
    "\030\005 \001(\001\022\025\n\rlongitude_deg\030\006 \001(\001\022\035\n\025altitud"
    "e_barometric_m\030\007 \001(\002\022\033\n\023altitude_geodeti"
    "c_m\030\010 \001(\002\022B\n\020height_reference\030\t \001(\0162(.ma"
    "vsdk.rpc.remote_id.Location.HeightRef\022\020\n"
    "\010height_m\030\n \001(\002\022\023\n\013time_utc_us\030\013 \001(\004\"\202\001\n"
    "\006Status\022\025\n\021STATUS_UNDECLARED\020\000\022\021\n\rSTATUS"
    "_GROUND\020\001\022\023\n\017STATUS_AIRBORNE\020\002\022\024\n\020STATUS"
    "_EMERGENCY\020\003\022#\n\037STATUS_REMOTE_ID_SYSTEM_"
    "FAILURE\020\004\"D\n\tHeightRef\022\033\n\027HEIGHT_REF_OVE"
    "R_TAKEOFF\020\000\022\032\n\026HEIGHT_REF_OVER_GROUND\020\001\""
    "\206\013\n\020LocationAccuracy\022J\n\023horizontal_accur"
    "acy\030\001 \001(\0162-.mavsdk.rpc.remote_id.Locatio"
    "nAccuracy.HorAcc\022H\n\021vertical_accuracy\030\002 "
    "\001(\0162-.mavsdk.rpc.remote_id.LocationAccur"
    "acy.VerAcc\022I\n\022barometer_accuracy\030\003 \001(\0162-"
    ".mavsdk.rpc.remote_id.LocationAccuracy.V"
    "erAcc\022G\n\016speed_accuracy\030\004 \001(\0162/.mavsdk.r"
    "pc.remote_id.LocationAccuracy.SpeedAcc\022J"
    "\n\022timestamp_accuracy\030\005 \001(\0162..mavsdk.rpc."
    "remote_id.LocationAccuracy.TimeAcc\"\215\002\n\006H"
    "orAcc\022\023\n\017HOR_ACC_UNKNOWN\020\000\022\021\n\rHOR_ACC_NM"
    "_10\020\001\022\020\n\014HOR_ACC_NM_4\020\002\022\020\n\014HOR_ACC_NM_2\020"
    "\003\022\020\n\014HOR_ACC_NM_1\020\004\022\022\n\016HOR_ACC_NM_0_5\020\005\022"
    "\022\n\016HOR_ACC_NM_0_3\020\006\022\022\n\016HOR_ACC_NM_0_1\020\007\022"
    "\023\n\017HOR_ACC_NM_0_05\020\010\022\024\n\020HOR_ACC_METER_30"
    "\020\t\022\024\n\020HOR_ACC_METER_10\020\n\022\023\n\017HOR_ACC_METE"
    "R_3\020\013\022\023\n\017HOR_ACC_METER_1\020\014\"\240\001\n\006VerAcc\022\023\n"
    "\017VER_ACC_UNKNOWN\020\000\022\025\n\021VER_ACC_METER_150\020"
    "\001\022\024\n\020VER_ACC_METER_45\020\002\022\024\n\020VER_ACC_METER"
    "_25\020\003\022\024\n\020VER_ACC_METER_10\020\004\022\023\n\017VER_ACC_M"
    "ETER_3\020\005\022\023\n\017VER_ACC_METER_1\020\006\"\257\001\n\010SpeedA"
    "cc\022\025\n\021SPEED_ACC_UNKNOWN\020\000\022\"\n\036SPEED_ACC_M"
    "ETERS_PER_SECOND_10\020\001\022 \n\034SPEED_ACC_METER"
    "S_PER_SECON_3\020\002\022!\n\035SPEED_ACC_METERS_PER_"
    "SECOND_1\020\003\022#\n\037SPEED_ACC_METERS_PER_SECON"
    "D_0_3\020\004\"\226\003\n\007TimeAcc\022\024\n\020TIME_ACC_UNKNOWN\020"
    "\000\022\027\n\023TIME_ACC_SECOND_0_1\020\001\022\027\n\023TIME_ACC_S"
    "ECOND_0_2\020\002\022\027\n\023TIME_ACC_SECOND_0_3\020\003\022\027\n\023"
    "TIME_ACC_SECOND_0_4\020\004\022\027\n\023TIME_ACC_SECOND"
    "_0_5\020\005\022\027\n\023TIME_ACC_SECOND_0_6\020\006\022\027\n\023TIME_"
    "ACC_SECOND_0_7\020\007\022\027\n\023TIME_ACC_SECOND_0_8\020"
    "\010\022\027\n\023TIME_ACC_SECOND_0_9\020\t\022\027\n\023TIME_ACC_S"
    "ECOND_1_0\020\n\022\027\n\023TIME_ACC_SECOND_1_1\020\013\022\027\n\023"
    "TIME_ACC_SECOND_1_2\020\014\022\027\n\023TIME_ACC_SECOND"
    "_1_3\020\r\022\027\n\023TIME_ACC_SECOND_1_4\020\016\022\027\n\023TIME_"
    "ACC_SECOND_1_5\020\017\"\206\010\n\010SystemId\022S\n\026operato"
    "r_location_type\030\001 \001(\01623.mavsdk.rpc.remot"
    "e_id.SystemId.OperatorLocationType\022N\n\023cl"
    "assification_type\030\002 \001(\01621.mavsdk.rpc.rem"
    "ote_id.SystemId.ClassificationType\022\035\n\025op"
    "erator_latitude_deg\030\003 \001(\001\022\036\n\026operator_lo"
    "ngitude_deg\030\004 \001(\001\022\022\n\narea_count\030\005 \001(\r\022\025\n"
    "\rarea_radius_m\030\006 \001(\r\022\026\n\016area_ceiling_m\030\007"
    " \001(\002\022\024\n\014area_floor_m\030\010 \001(\002\022>\n\013category_e"
    "u\030\t \001(\0162).mavsdk.rpc.remote_id.SystemId."
    "CategoryEu\0228\n\010class_eu\030\n \001(\0162&.mavsdk.rp"
    "c.remote_id.SystemId.ClassEu\022\037\n\027operator"
    "_altitude_geo_m\030\013 \001(\002\022\023\n\013time_utc_us\030\014 \001"
    "(\004\"\202\001\n\024OperatorLocationType\022\"\n\036OPERATOR_"
    "LOCATION_TYPE_TAKEOFF\020\000\022$\n OPERATOR_LOCA"
    "TION_TYPE_LIVE_GNSS\020\001\022 \n\034OPERATOR_LOCATI"
    "ON_TYPE_FIXED\020\002\"T\n\022ClassificationType\022\"\n"
    "\036CLASSIFICATION_TYPE_UNDECLARED\020\000\022\032\n\026CLA"
    "SSIFICATION_TYPE_EU\020\001\"s\n\nCategoryEu\022\032\n\026C"
    "ATEGORY_EU_UNDECLARED\020\000\022\024\n\020CATEGORY_EU_O"
    "PEN\020\001\022\030\n\024CATEGORY_EU_SPECIFIC\020\002\022\031\n\025CATEG"
    "ORY_EU_CERTIFIED\020\003\"\274\001\n\007ClassEu\022\027\n\023CLASS_"
    "EU_UNDECLARED\020\000\022\024\n\020CLASS_EU_CLASS_0\020\001\022\024\n"
    "\020CLASS_EU_CLASS_1\020\002\022\024\n\020CLASS_EU_CLASS_2\020"
    "\003\022\024\n\020CLASS_EU_CLASS_3\020\004\022\024\n\020CLASS_EU_CLAS"
    "S_4\020\005\022\024\n\020CLASS_EU_CLASS_5\020\006\022\024\n\020CLASS_EU_"
    "CLASS_6\020\007\"\230\001\n\nOperatorId\022I\n\020operator_id_"
    "type\030\001 \001(\0162/.mavsdk.rpc.remote_id.Operat"
    "orId.OperatorIdType\022\023\n\013operator_id\030\002 \001(\t"
    "\"*\n\016OperatorIdType\022\030\n\024OPERATOR_ID_TYPE_C"
    "AA\020\000\"\266\001\n\006SelfId\022\?\n\020description_type\030\001 \001("
    "\0162%.mavsdk.rpc.remote_id.SelfId.DescType"
    "\022\023\n\013description\030\002 \001(\t\"V\n\010DescType\022\022\n\016DES"
    "C_TYPE_TEXT\020\000\022\027\n\023DESC_TYPE_EMERGENCY\020\001\022\035"
    "\n\031DESC_TYPE_EXTENDED_STATUS\020\002\"\225\001\n\tArmSta"
    "tus\0226\n\006status\030\001 \001(\0162&.mavsdk.rpc.remote_"
    "id.ArmStatus.Status\022\r\n\005error\030\002 \001(\t\"A\n\006St"
    "atus\022\026\n\022STATUS_GOOD_TO_ARM\020\000\022\037\n\033STATUS_P"
    "RE_ARM_FAIL_GENERIC\020\001\"\245\001\n\016RemoteIdResult"
    "\022;\n\006result\030\001 \001(\0162+.mavsdk.rpc.remote_id."
    "RemoteIdResult.Result\022\022\n\nresult_str\030\002 \001("
    "\t\"B\n\006Result\022\022\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESUL"
    "T_SUCCESS\020\001\022\020\n\014RESULT_ERROR\020\0022\221\006\n\017Remote"
    "IdService\022e\n\nSetBasicId\022\'.mavsdk.rpc.rem"
    "ote_id.SetBasicIdRequest\032(.mavsdk.rpc.re"
    "mote_id.SetBasicIdResponse\"\004\200\265\030\001\022h\n\013SetL"
    "ocation\022(.mavsdk.rpc.remote_id.SetLocati"
    "onRequest\032).mavsdk.rpc.remote_id.SetLoca"
    "tionResponse\"\004\200\265\030\001\022\200\001\n\023SetLocationAccura"
    "cy\0220.mavsdk.rpc.remote_id.SetLocationAcc"
    "uracyRequest\0321.mavsdk.rpc.remote_id.SetL"
    "ocationAccuracyResponse\"\004\200\265\030\001\022b\n\tSetSyst"
    "em\022&.mavsdk.rpc.remote_id.SetSystemReque"
    "st\032\'.mavsdk.rpc.remote_id.SetSystemRespo"
    "nse\"\004\200\265\030\001\022n\n\rSetOperatorId\022*.mavsdk.rpc."
    "remote_id.SetOperatorIdRequest\032+.mavsdk."
    "rpc.remote_id.SetOperatorIdResponse\"\004\200\265\030"
    "\001\022b\n\tSetSelfId\022&.mavsdk.rpc.remote_id.Se"
    "tSelfIdRequest\032\'.mavsdk.rpc.remote_id.Se"
    "tSelfIdResponse\"\004\200\265\030\001\022r\n\022SubscribeArmSta"
    "tus\022/.mavsdk.rpc.remote_id.SubscribeArmS"
    "tatusRequest\032\'.mavsdk.rpc.remote_id.ArmS"
    "tatusResponse\"\0000\001B$\n\023io.mavsdk.remote_id"
    "B\rRemoteIdProtob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_remote_5fid_2fremote_5fid_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_remote_5fid_2fremote_5fid_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_remote_5fid_2fremote_5fid_2eproto = {
    false,
    false,
    6383,
    descriptor_table_protodef_remote_5fid_2fremote_5fid_2eproto,
    "remote_id/remote_id.proto",
    &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
    descriptor_table_remote_5fid_2fremote_5fid_2eproto_deps,
    1,
    22,
    schemas,
    file_default_instances,
    TableStruct_remote_5fid_2fremote_5fid_2eproto::offsets,
    file_level_metadata_remote_5fid_2fremote_5fid_2eproto,
    file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto,
    file_level_service_descriptors_remote_5fid_2fremote_5fid_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter() {
  return &descriptor_table_remote_5fid_2fremote_5fid_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_remote_5fid_2fremote_5fid_2eproto(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
namespace mavsdk {
namespace rpc {
namespace remote_id {
const ::google::protobuf::EnumDescriptor* BasicId_IdType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t BasicId_IdType_internal_data_[] = {
    327680u, 0u, };
bool BasicId_IdType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr BasicId_IdType BasicId::ID_TYPE_NONE;
constexpr BasicId_IdType BasicId::ID_TYPE_SERIAL_NUMBER;
constexpr BasicId_IdType BasicId::ID_TYPE_CAA_REGISTRATION_ID;
constexpr BasicId_IdType BasicId::ID_TYPE_UTM_ASSIGNED_UUID;
constexpr BasicId_IdType BasicId::ID_TYPE_SPECIFIC_SESSION_ID;
constexpr BasicId_IdType BasicId::IdType_MIN;
constexpr BasicId_IdType BasicId::IdType_MAX;
constexpr int BasicId::IdType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* BasicId_UasType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t BasicId_UasType_internal_data_[] = {
    1048576u, 0u, };
bool BasicId_UasType_IsValid(int value) {
  return 0 <= value && value <= 15;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr BasicId_UasType BasicId::UAS_TYPE_NONE;
constexpr BasicId_UasType BasicId::UAS_TYPE_AEROPLANE;
constexpr BasicId_UasType BasicId::UAS_TYPE_HELICOPTER_OR_MULTIROTOR;
constexpr BasicId_UasType BasicId::UAS_TYPE_GYROPLANE;
constexpr BasicId_UasType BasicId::UAS_TYPE_HYBRID_LIFT;
constexpr BasicId_UasType BasicId::UAS_TYPE_ORNITHOPTER;
constexpr BasicId_UasType BasicId::UAS_TYPE_GLIDER;
constexpr BasicId_UasType BasicId::UAS_TYPE_KITE;
constexpr BasicId_UasType BasicId::UAS_TYPE_FREE_BALLOON;
constexpr BasicId_UasType BasicId::UAS_TYPE_CAPTIVE_BALLOON;
constexpr BasicId_UasType BasicId::UAS_TYPE_AIRSHIP;
constexpr BasicId_UasType BasicId::UAS_TYPE_FREE_FALL_PARACHUTE;
constexpr BasicId_UasType BasicId::UAS_TYPE_ROCKET;
constexpr BasicId_UasType BasicId::UAS_TYPE_TETHERED_POWERED_AIRCRAFT;
constexpr BasicId_UasType BasicId::UAS_TYPE_GROUND_OBSTACLE;
constexpr BasicId_UasType BasicId::UAS_TYPE_OTHER;
constexpr BasicId_UasType BasicId::UasType_MIN;
constexpr BasicId_UasType BasicId::UasType_MAX;
constexpr int BasicId::UasType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Location_Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t Location_Status_internal_data_[] = {
    327680u, 0u, };
bool Location_Status_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Location_Status Location::STATUS_UNDECLARED;
constexpr Location_Status Location::STATUS_GROUND;
constexpr Location_Status Location::STATUS_AIRBORNE;
constexpr Location_Status Location::STATUS_EMERGENCY;
constexpr Location_Status Location::STATUS_REMOTE_ID_SYSTEM_FAILURE;
constexpr Location_Status Location::Status_MIN;
constexpr Location_Status Location::Status_MAX;
constexpr int Location::Status_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Location_HeightRef_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t Location_HeightRef_internal_data_[] = {
    131072u, 0u, };
bool Location_HeightRef_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Location_HeightRef Location::HEIGHT_REF_OVER_TAKEOFF;
constexpr Location_HeightRef Location::HEIGHT_REF_OVER_GROUND;
constexpr Location_HeightRef Location::HeightRef_MIN;
constexpr Location_HeightRef Location::HeightRef_MAX;
constexpr int Location::HeightRef_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* LocationAccuracy_HorAcc_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t LocationAccuracy_HorAcc_internal_data_[] = {
    851968u, 0u, };
bool LocationAccuracy_HorAcc_IsValid(int value) {
  return 0 <= value && value <= 12;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr LocationAccuracy_HorAcc LocationAccuracy::HOR_ACC_UNKNOWN;
constexpr LocationAccuracy_HorAcc LocationAccuracy::HOR_ACC_NM_10;
constexpr LocationAccuracy_HorAcc LocationAccuracy::HOR_ACC_NM_4;
constexpr LocationAccuracy_HorAcc LocationAccuracy::HOR_ACC_NM_2;
constexpr LocationAccuracy_HorAcc LocationAccuracy::HOR_ACC_NM_1;
constexpr LocationAccuracy_HorAcc LocationAccuracy::HOR_ACC_NM_0_5;
constexpr LocationAccuracy_HorAcc LocationAccuracy::HOR_ACC_NM_0_3;
constexpr LocationAccuracy_HorAcc LocationAccuracy::HOR_ACC_NM_0_1;
constexpr LocationAccuracy_HorAcc LocationAccuracy::HOR_ACC_NM_0_05;
constexpr LocationAccuracy_HorAcc LocationAccuracy::HOR_ACC_METER_30;
constexpr LocationAccuracy_HorAcc LocationAccuracy::HOR_ACC_METER_10;
constexpr LocationAccuracy_HorAcc LocationAccuracy::HOR_ACC_METER_3;
constexpr LocationAccuracy_HorAcc LocationAccuracy::HOR_ACC_METER_1;
constexpr LocationAccuracy_HorAcc LocationAccuracy::HorAcc_MIN;
constexpr LocationAccuracy_HorAcc LocationAccuracy::HorAcc_MAX;
constexpr int LocationAccuracy::HorAcc_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* LocationAccuracy_VerAcc_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t LocationAccuracy_VerAcc_internal_data_[] = {
    458752u, 0u, };
bool LocationAccuracy_VerAcc_IsValid(int value) {
  return 0 <= value && value <= 6;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr LocationAccuracy_VerAcc LocationAccuracy::VER_ACC_UNKNOWN;
constexpr LocationAccuracy_VerAcc LocationAccuracy::VER_ACC_METER_150;
constexpr LocationAccuracy_VerAcc LocationAccuracy::VER_ACC_METER_45;
constexpr LocationAccuracy_VerAcc LocationAccuracy::VER_ACC_METER_25;
constexpr LocationAccuracy_VerAcc LocationAccuracy::VER_ACC_METER_10;
constexpr LocationAccuracy_VerAcc LocationAccuracy::VER_ACC_METER_3;
constexpr LocationAccuracy_VerAcc LocationAccuracy::VER_ACC_METER_1;
constexpr LocationAccuracy_VerAcc LocationAccuracy::VerAcc_MIN;
constexpr LocationAccuracy_VerAcc LocationAccuracy::VerAcc_MAX;
constexpr int LocationAccuracy::VerAcc_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* LocationAccuracy_SpeedAcc_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t LocationAccuracy_SpeedAcc_internal_data_[] = {
    327680u, 0u, };
bool LocationAccuracy_SpeedAcc_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr LocationAccuracy_SpeedAcc LocationAccuracy::SPEED_ACC_UNKNOWN;
constexpr LocationAccuracy_SpeedAcc LocationAccuracy::SPEED_ACC_METERS_PER_SECOND_10;
constexpr LocationAccuracy_SpeedAcc LocationAccuracy::SPEED_ACC_METERS_PER_SECON_3;
constexpr LocationAccuracy_SpeedAcc LocationAccuracy::SPEED_ACC_METERS_PER_SECOND_1;
constexpr LocationAccuracy_SpeedAcc LocationAccuracy::SPEED_ACC_METERS_PER_SECOND_0_3;
constexpr LocationAccuracy_SpeedAcc LocationAccuracy::SpeedAcc_MIN;
constexpr LocationAccuracy_SpeedAcc LocationAccuracy::SpeedAcc_MAX;
constexpr int LocationAccuracy::SpeedAcc_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* LocationAccuracy_TimeAcc_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t LocationAccuracy_TimeAcc_internal_data_[] = {
    1048576u, 0u, };
bool LocationAccuracy_TimeAcc_IsValid(int value) {
  return 0 <= value && value <= 15;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_UNKNOWN;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_0_1;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_0_2;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_0_3;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_0_4;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_0_5;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_0_6;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_0_7;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_0_8;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_0_9;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_1_0;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_1_1;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_1_2;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_1_3;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_1_4;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TIME_ACC_SECOND_1_5;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TimeAcc_MIN;
constexpr LocationAccuracy_TimeAcc LocationAccuracy::TimeAcc_MAX;
constexpr int LocationAccuracy::TimeAcc_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SystemId_OperatorLocationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t SystemId_OperatorLocationType_internal_data_[] = {
    196608u, 0u, };
bool SystemId_OperatorLocationType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SystemId_OperatorLocationType SystemId::OPERATOR_LOCATION_TYPE_TAKEOFF;
constexpr SystemId_OperatorLocationType SystemId::OPERATOR_LOCATION_TYPE_LIVE_GNSS;
constexpr SystemId_OperatorLocationType SystemId::OPERATOR_LOCATION_TYPE_FIXED;
constexpr SystemId_OperatorLocationType SystemId::OperatorLocationType_MIN;
constexpr SystemId_OperatorLocationType SystemId::OperatorLocationType_MAX;
constexpr int SystemId::OperatorLocationType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SystemId_ClassificationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[9];
}
PROTOBUF_CONSTINIT const uint32_t SystemId_ClassificationType_internal_data_[] = {
    131072u, 0u, };
bool SystemId_ClassificationType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SystemId_ClassificationType SystemId::CLASSIFICATION_TYPE_UNDECLARED;
constexpr SystemId_ClassificationType SystemId::CLASSIFICATION_TYPE_EU;
constexpr SystemId_ClassificationType SystemId::ClassificationType_MIN;
constexpr SystemId_ClassificationType SystemId::ClassificationType_MAX;
constexpr int SystemId::ClassificationType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SystemId_CategoryEu_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[10];
}
PROTOBUF_CONSTINIT const uint32_t SystemId_CategoryEu_internal_data_[] = {
    262144u, 0u, };
bool SystemId_CategoryEu_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SystemId_CategoryEu SystemId::CATEGORY_EU_UNDECLARED;
constexpr SystemId_CategoryEu SystemId::CATEGORY_EU_OPEN;
constexpr SystemId_CategoryEu SystemId::CATEGORY_EU_SPECIFIC;
constexpr SystemId_CategoryEu SystemId::CATEGORY_EU_CERTIFIED;
constexpr SystemId_CategoryEu SystemId::CategoryEu_MIN;
constexpr SystemId_CategoryEu SystemId::CategoryEu_MAX;
constexpr int SystemId::CategoryEu_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SystemId_ClassEu_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[11];
}
PROTOBUF_CONSTINIT const uint32_t SystemId_ClassEu_internal_data_[] = {
    524288u, 0u, };
bool SystemId_ClassEu_IsValid(int value) {
  return 0 <= value && value <= 7;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SystemId_ClassEu SystemId::CLASS_EU_UNDECLARED;
constexpr SystemId_ClassEu SystemId::CLASS_EU_CLASS_0;
constexpr SystemId_ClassEu SystemId::CLASS_EU_CLASS_1;
constexpr SystemId_ClassEu SystemId::CLASS_EU_CLASS_2;
constexpr SystemId_ClassEu SystemId::CLASS_EU_CLASS_3;
constexpr SystemId_ClassEu SystemId::CLASS_EU_CLASS_4;
constexpr SystemId_ClassEu SystemId::CLASS_EU_CLASS_5;
constexpr SystemId_ClassEu SystemId::CLASS_EU_CLASS_6;
constexpr SystemId_ClassEu SystemId::ClassEu_MIN;
constexpr SystemId_ClassEu SystemId::ClassEu_MAX;
constexpr int SystemId::ClassEu_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* OperatorId_OperatorIdType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[12];
}
PROTOBUF_CONSTINIT const uint32_t OperatorId_OperatorIdType_internal_data_[] = {
    65536u, 0u, };
bool OperatorId_OperatorIdType_IsValid(int value) {
  return 0 <= value && value <= 0;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr OperatorId_OperatorIdType OperatorId::OPERATOR_ID_TYPE_CAA;
constexpr OperatorId_OperatorIdType OperatorId::OperatorIdType_MIN;
constexpr OperatorId_OperatorIdType OperatorId::OperatorIdType_MAX;
constexpr int OperatorId::OperatorIdType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SelfId_DescType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[13];
}
PROTOBUF_CONSTINIT const uint32_t SelfId_DescType_internal_data_[] = {
    196608u, 0u, };
bool SelfId_DescType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SelfId_DescType SelfId::DESC_TYPE_TEXT;
constexpr SelfId_DescType SelfId::DESC_TYPE_EMERGENCY;
constexpr SelfId_DescType SelfId::DESC_TYPE_EXTENDED_STATUS;
constexpr SelfId_DescType SelfId::DescType_MIN;
constexpr SelfId_DescType SelfId::DescType_MAX;
constexpr int SelfId::DescType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ArmStatus_Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[14];
}
PROTOBUF_CONSTINIT const uint32_t ArmStatus_Status_internal_data_[] = {
    131072u, 0u, };
bool ArmStatus_Status_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ArmStatus_Status ArmStatus::STATUS_GOOD_TO_ARM;
constexpr ArmStatus_Status ArmStatus::STATUS_PRE_ARM_FAIL_GENERIC;
constexpr ArmStatus_Status ArmStatus::Status_MIN;
constexpr ArmStatus_Status ArmStatus::Status_MAX;
constexpr int ArmStatus::Status_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* RemoteIdResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[15];
}
PROTOBUF_CONSTINIT const uint32_t RemoteIdResult_Result_internal_data_[] = {
    196608u, 0u, };
bool RemoteIdResult_Result_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr RemoteIdResult_Result RemoteIdResult::RESULT_UNKNOWN;
constexpr RemoteIdResult_Result RemoteIdResult::RESULT_SUCCESS;
constexpr RemoteIdResult_Result RemoteIdResult::RESULT_ERROR;
constexpr RemoteIdResult_Result RemoteIdResult::Result_MIN;
constexpr RemoteIdResult_Result RemoteIdResult::Result_MAX;
constexpr int RemoteIdResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class SetBasicIdRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetBasicIdRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetBasicIdRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::BasicId& basic_id(const SetBasicIdRequest* msg);
  static void set_has_basic_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::BasicId& SetBasicIdRequest::_Internal::basic_id(const SetBasicIdRequest* msg) {
  return *msg->_impl_.basic_id_;
}
SetBasicIdRequest::SetBasicIdRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetBasicIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetBasicIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetBasicIdRequest::SetBasicIdRequest(
    ::google::protobuf::Arena* arena,
    const SetBasicIdRequest& from)
    : ::google::protobuf::Message(arena) {
  SetBasicIdRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.basic_id_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::BasicId>(arena, *from._impl_.basic_id_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetBasicIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetBasicIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetBasicIdRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.basic_id_ = {};
}
SetBasicIdRequest::~SetBasicIdRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetBasicIdRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetBasicIdRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.basic_id_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetBasicIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetBasicIdRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.basic_id_ != nullptr);
    _impl_.basic_id_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetBasicIdRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetBasicIdRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetBasicIdRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetBasicIdRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.BasicId basic_id = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetBasicIdRequest, _impl_.basic_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.BasicId basic_id = 1;
    {PROTOBUF_FIELD_OFFSET(SetBasicIdRequest, _impl_.basic_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::BasicId>()},
  }}, {{
  }},
};

::uint8_t* SetBasicIdRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetBasicIdRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.BasicId basic_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::basic_id(this),
        _Internal::basic_id(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetBasicIdRequest)
  return target;
}

::size_t SetBasicIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetBasicIdRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.BasicId basic_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.basic_id_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetBasicIdRequest::_class_data_ = {
    SetBasicIdRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetBasicIdRequest::GetClassData() const {
  return &_class_data_;
}

void SetBasicIdRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetBasicIdRequest*>(&to_msg);
  auto& from = static_cast<const SetBasicIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetBasicIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_basic_id()->::mavsdk::rpc::remote_id::BasicId::MergeFrom(
        from._internal_basic_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetBasicIdRequest::CopyFrom(const SetBasicIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetBasicIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetBasicIdRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetBasicIdRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetBasicIdRequest::InternalSwap(SetBasicIdRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.basic_id_, other->_impl_.basic_id_);
}

::google::protobuf::Metadata SetBasicIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[0]);
}
// ===================================================================

class SetBasicIdResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetBasicIdResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetBasicIdResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::RemoteIdResult& remote_id_result(const SetBasicIdResponse* msg);
  static void set_has_remote_id_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::RemoteIdResult& SetBasicIdResponse::_Internal::remote_id_result(const SetBasicIdResponse* msg) {
  return *msg->_impl_.remote_id_result_;
}
SetBasicIdResponse::SetBasicIdResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetBasicIdResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetBasicIdResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetBasicIdResponse::SetBasicIdResponse(
    ::google::protobuf::Arena* arena,
    const SetBasicIdResponse& from)
    : ::google::protobuf::Message(arena) {
  SetBasicIdResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.remote_id_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::RemoteIdResult>(arena, *from._impl_.remote_id_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetBasicIdResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetBasicIdResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetBasicIdResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.remote_id_result_ = {};
}
SetBasicIdResponse::~SetBasicIdResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetBasicIdResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetBasicIdResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.remote_id_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetBasicIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetBasicIdResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.remote_id_result_ != nullptr);
    _impl_.remote_id_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetBasicIdResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetBasicIdResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetBasicIdResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetBasicIdResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetBasicIdResponse, _impl_.remote_id_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetBasicIdResponse, _impl_.remote_id_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::RemoteIdResult>()},
  }}, {{
  }},
};

::uint8_t* SetBasicIdResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetBasicIdResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::remote_id_result(this),
        _Internal::remote_id_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetBasicIdResponse)
  return target;
}

::size_t SetBasicIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetBasicIdResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.remote_id_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetBasicIdResponse::_class_data_ = {
    SetBasicIdResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetBasicIdResponse::GetClassData() const {
  return &_class_data_;
}

void SetBasicIdResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetBasicIdResponse*>(&to_msg);
  auto& from = static_cast<const SetBasicIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetBasicIdResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_remote_id_result()->::mavsdk::rpc::remote_id::RemoteIdResult::MergeFrom(
        from._internal_remote_id_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetBasicIdResponse::CopyFrom(const SetBasicIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetBasicIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetBasicIdResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetBasicIdResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetBasicIdResponse::InternalSwap(SetBasicIdResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.remote_id_result_, other->_impl_.remote_id_result_);
}

::google::protobuf::Metadata SetBasicIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[1]);
}
// ===================================================================

class SetLocationRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetLocationRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetLocationRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::Location& location(const SetLocationRequest* msg);
  static void set_has_location(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::Location& SetLocationRequest::_Internal::location(const SetLocationRequest* msg) {
  return *msg->_impl_.location_;
}
SetLocationRequest::SetLocationRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetLocationRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetLocationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetLocationRequest::SetLocationRequest(
    ::google::protobuf::Arena* arena,
    const SetLocationRequest& from)
    : ::google::protobuf::Message(arena) {
  SetLocationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.location_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::Location>(arena, *from._impl_.location_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetLocationRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetLocationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetLocationRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.location_ = {};
}
SetLocationRequest::~SetLocationRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetLocationRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetLocationRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.location_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetLocationRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.location_ != nullptr);
    _impl_.location_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetLocationRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetLocationRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetLocationRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetLocationRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.Location location = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetLocationRequest, _impl_.location_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.Location location = 1;
    {PROTOBUF_FIELD_OFFSET(SetLocationRequest, _impl_.location_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::Location>()},
  }}, {{
  }},
};

::uint8_t* SetLocationRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetLocationRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.Location location = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetLocationRequest)
  return target;
}

::size_t SetLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetLocationRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.Location location = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.location_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetLocationRequest::_class_data_ = {
    SetLocationRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetLocationRequest::GetClassData() const {
  return &_class_data_;
}

void SetLocationRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetLocationRequest*>(&to_msg);
  auto& from = static_cast<const SetLocationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetLocationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_location()->::mavsdk::rpc::remote_id::Location::MergeFrom(
        from._internal_location());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetLocationRequest::CopyFrom(const SetLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetLocationRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetLocationRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetLocationRequest::InternalSwap(SetLocationRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.location_, other->_impl_.location_);
}

::google::protobuf::Metadata SetLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[2]);
}
// ===================================================================

class SetLocationResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetLocationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetLocationResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::RemoteIdResult& remote_id_result(const SetLocationResponse* msg);
  static void set_has_remote_id_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::RemoteIdResult& SetLocationResponse::_Internal::remote_id_result(const SetLocationResponse* msg) {
  return *msg->_impl_.remote_id_result_;
}
SetLocationResponse::SetLocationResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetLocationResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetLocationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetLocationResponse::SetLocationResponse(
    ::google::protobuf::Arena* arena,
    const SetLocationResponse& from)
    : ::google::protobuf::Message(arena) {
  SetLocationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.remote_id_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::RemoteIdResult>(arena, *from._impl_.remote_id_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetLocationResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetLocationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetLocationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.remote_id_result_ = {};
}
SetLocationResponse::~SetLocationResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetLocationResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetLocationResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.remote_id_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetLocationResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.remote_id_result_ != nullptr);
    _impl_.remote_id_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetLocationResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetLocationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetLocationResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetLocationResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetLocationResponse, _impl_.remote_id_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetLocationResponse, _impl_.remote_id_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::RemoteIdResult>()},
  }}, {{
  }},
};

::uint8_t* SetLocationResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetLocationResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::remote_id_result(this),
        _Internal::remote_id_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetLocationResponse)
  return target;
}

::size_t SetLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetLocationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.remote_id_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetLocationResponse::_class_data_ = {
    SetLocationResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetLocationResponse::GetClassData() const {
  return &_class_data_;
}

void SetLocationResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetLocationResponse*>(&to_msg);
  auto& from = static_cast<const SetLocationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetLocationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_remote_id_result()->::mavsdk::rpc::remote_id::RemoteIdResult::MergeFrom(
        from._internal_remote_id_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetLocationResponse::CopyFrom(const SetLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetLocationResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetLocationResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetLocationResponse::InternalSwap(SetLocationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.remote_id_result_, other->_impl_.remote_id_result_);
}

::google::protobuf::Metadata SetLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[3]);
}
// ===================================================================

class SetLocationAccuracyRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetLocationAccuracyRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetLocationAccuracyRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::LocationAccuracy& location_accuracy(const SetLocationAccuracyRequest* msg);
  static void set_has_location_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::LocationAccuracy& SetLocationAccuracyRequest::_Internal::location_accuracy(const SetLocationAccuracyRequest* msg) {
  return *msg->_impl_.location_accuracy_;
}
SetLocationAccuracyRequest::SetLocationAccuracyRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetLocationAccuracyRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetLocationAccuracyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetLocationAccuracyRequest::SetLocationAccuracyRequest(
    ::google::protobuf::Arena* arena,
    const SetLocationAccuracyRequest& from)
    : ::google::protobuf::Message(arena) {
  SetLocationAccuracyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.location_accuracy_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::LocationAccuracy>(arena, *from._impl_.location_accuracy_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetLocationAccuracyRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetLocationAccuracyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetLocationAccuracyRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.location_accuracy_ = {};
}
SetLocationAccuracyRequest::~SetLocationAccuracyRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetLocationAccuracyRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetLocationAccuracyRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.location_accuracy_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetLocationAccuracyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetLocationAccuracyRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.location_accuracy_ != nullptr);
    _impl_.location_accuracy_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetLocationAccuracyRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetLocationAccuracyRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetLocationAccuracyRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetLocationAccuracyRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.LocationAccuracy location_accuracy = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetLocationAccuracyRequest, _impl_.location_accuracy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.LocationAccuracy location_accuracy = 1;
    {PROTOBUF_FIELD_OFFSET(SetLocationAccuracyRequest, _impl_.location_accuracy_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::LocationAccuracy>()},
  }}, {{
  }},
};

::uint8_t* SetLocationAccuracyRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetLocationAccuracyRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.LocationAccuracy location_accuracy = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::location_accuracy(this),
        _Internal::location_accuracy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetLocationAccuracyRequest)
  return target;
}

::size_t SetLocationAccuracyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetLocationAccuracyRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.LocationAccuracy location_accuracy = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.location_accuracy_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetLocationAccuracyRequest::_class_data_ = {
    SetLocationAccuracyRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetLocationAccuracyRequest::GetClassData() const {
  return &_class_data_;
}

void SetLocationAccuracyRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetLocationAccuracyRequest*>(&to_msg);
  auto& from = static_cast<const SetLocationAccuracyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetLocationAccuracyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_location_accuracy()->::mavsdk::rpc::remote_id::LocationAccuracy::MergeFrom(
        from._internal_location_accuracy());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetLocationAccuracyRequest::CopyFrom(const SetLocationAccuracyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetLocationAccuracyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetLocationAccuracyRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetLocationAccuracyRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetLocationAccuracyRequest::InternalSwap(SetLocationAccuracyRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.location_accuracy_, other->_impl_.location_accuracy_);
}

::google::protobuf::Metadata SetLocationAccuracyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[4]);
}
// ===================================================================

class SetLocationAccuracyResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetLocationAccuracyResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetLocationAccuracyResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::RemoteIdResult& remote_id_result(const SetLocationAccuracyResponse* msg);
  static void set_has_remote_id_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::RemoteIdResult& SetLocationAccuracyResponse::_Internal::remote_id_result(const SetLocationAccuracyResponse* msg) {
  return *msg->_impl_.remote_id_result_;
}
SetLocationAccuracyResponse::SetLocationAccuracyResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetLocationAccuracyResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetLocationAccuracyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetLocationAccuracyResponse::SetLocationAccuracyResponse(
    ::google::protobuf::Arena* arena,
    const SetLocationAccuracyResponse& from)
    : ::google::protobuf::Message(arena) {
  SetLocationAccuracyResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.remote_id_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::RemoteIdResult>(arena, *from._impl_.remote_id_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetLocationAccuracyResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetLocationAccuracyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetLocationAccuracyResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.remote_id_result_ = {};
}
SetLocationAccuracyResponse::~SetLocationAccuracyResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetLocationAccuracyResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetLocationAccuracyResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.remote_id_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetLocationAccuracyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetLocationAccuracyResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.remote_id_result_ != nullptr);
    _impl_.remote_id_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetLocationAccuracyResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetLocationAccuracyResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetLocationAccuracyResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetLocationAccuracyResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetLocationAccuracyResponse, _impl_.remote_id_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetLocationAccuracyResponse, _impl_.remote_id_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::RemoteIdResult>()},
  }}, {{
  }},
};

::uint8_t* SetLocationAccuracyResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetLocationAccuracyResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::remote_id_result(this),
        _Internal::remote_id_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetLocationAccuracyResponse)
  return target;
}

::size_t SetLocationAccuracyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetLocationAccuracyResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.remote_id_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetLocationAccuracyResponse::_class_data_ = {
    SetLocationAccuracyResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetLocationAccuracyResponse::GetClassData() const {
  return &_class_data_;
}

void SetLocationAccuracyResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetLocationAccuracyResponse*>(&to_msg);
  auto& from = static_cast<const SetLocationAccuracyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetLocationAccuracyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_remote_id_result()->::mavsdk::rpc::remote_id::RemoteIdResult::MergeFrom(
        from._internal_remote_id_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetLocationAccuracyResponse::CopyFrom(const SetLocationAccuracyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetLocationAccuracyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetLocationAccuracyResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetLocationAccuracyResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetLocationAccuracyResponse::InternalSwap(SetLocationAccuracyResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.remote_id_result_, other->_impl_.remote_id_result_);
}

::google::protobuf::Metadata SetLocationAccuracyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[5]);
}
// ===================================================================

class SetSystemRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetSystemRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetSystemRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::SystemId& system(const SetSystemRequest* msg);
  static void set_has_system(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::SystemId& SetSystemRequest::_Internal::system(const SetSystemRequest* msg) {
  return *msg->_impl_.system_;
}
SetSystemRequest::SetSystemRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetSystemRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetSystemRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetSystemRequest::SetSystemRequest(
    ::google::protobuf::Arena* arena,
    const SetSystemRequest& from)
    : ::google::protobuf::Message(arena) {
  SetSystemRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.system_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::SystemId>(arena, *from._impl_.system_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetSystemRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetSystemRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetSystemRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.system_ = {};
}
SetSystemRequest::~SetSystemRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetSystemRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetSystemRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.system_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetSystemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetSystemRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.system_ != nullptr);
    _impl_.system_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetSystemRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetSystemRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetSystemRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetSystemRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.SystemId system = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetSystemRequest, _impl_.system_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.SystemId system = 1;
    {PROTOBUF_FIELD_OFFSET(SetSystemRequest, _impl_.system_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::SystemId>()},
  }}, {{
  }},
};

::uint8_t* SetSystemRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetSystemRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.SystemId system = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::system(this),
        _Internal::system(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetSystemRequest)
  return target;
}

::size_t SetSystemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetSystemRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.SystemId system = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.system_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetSystemRequest::_class_data_ = {
    SetSystemRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetSystemRequest::GetClassData() const {
  return &_class_data_;
}

void SetSystemRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetSystemRequest*>(&to_msg);
  auto& from = static_cast<const SetSystemRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetSystemRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_system()->::mavsdk::rpc::remote_id::SystemId::MergeFrom(
        from._internal_system());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetSystemRequest::CopyFrom(const SetSystemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetSystemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetSystemRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetSystemRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetSystemRequest::InternalSwap(SetSystemRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.system_, other->_impl_.system_);
}

::google::protobuf::Metadata SetSystemRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[6]);
}
// ===================================================================

class SetSystemResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetSystemResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetSystemResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::RemoteIdResult& remote_id_result(const SetSystemResponse* msg);
  static void set_has_remote_id_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::RemoteIdResult& SetSystemResponse::_Internal::remote_id_result(const SetSystemResponse* msg) {
  return *msg->_impl_.remote_id_result_;
}
SetSystemResponse::SetSystemResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetSystemResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetSystemResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetSystemResponse::SetSystemResponse(
    ::google::protobuf::Arena* arena,
    const SetSystemResponse& from)
    : ::google::protobuf::Message(arena) {
  SetSystemResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.remote_id_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::RemoteIdResult>(arena, *from._impl_.remote_id_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetSystemResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetSystemResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetSystemResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.remote_id_result_ = {};
}
SetSystemResponse::~SetSystemResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetSystemResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetSystemResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.remote_id_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetSystemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetSystemResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.remote_id_result_ != nullptr);
    _impl_.remote_id_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetSystemResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetSystemResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetSystemResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetSystemResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetSystemResponse, _impl_.remote_id_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetSystemResponse, _impl_.remote_id_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::RemoteIdResult>()},
  }}, {{
  }},
};

::uint8_t* SetSystemResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetSystemResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::remote_id_result(this),
        _Internal::remote_id_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetSystemResponse)
  return target;
}

::size_t SetSystemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetSystemResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.remote_id_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetSystemResponse::_class_data_ = {
    SetSystemResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetSystemResponse::GetClassData() const {
  return &_class_data_;
}

void SetSystemResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetSystemResponse*>(&to_msg);
  auto& from = static_cast<const SetSystemResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetSystemResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_remote_id_result()->::mavsdk::rpc::remote_id::RemoteIdResult::MergeFrom(
        from._internal_remote_id_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetSystemResponse::CopyFrom(const SetSystemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetSystemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetSystemResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetSystemResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetSystemResponse::InternalSwap(SetSystemResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.remote_id_result_, other->_impl_.remote_id_result_);
}

::google::protobuf::Metadata SetSystemResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[7]);
}
// ===================================================================

class SetOperatorIdRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetOperatorIdRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetOperatorIdRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::OperatorId& system(const SetOperatorIdRequest* msg);
  static void set_has_system(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::OperatorId& SetOperatorIdRequest::_Internal::system(const SetOperatorIdRequest* msg) {
  return *msg->_impl_.system_;
}
SetOperatorIdRequest::SetOperatorIdRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetOperatorIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetOperatorIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetOperatorIdRequest::SetOperatorIdRequest(
    ::google::protobuf::Arena* arena,
    const SetOperatorIdRequest& from)
    : ::google::protobuf::Message(arena) {
  SetOperatorIdRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.system_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::OperatorId>(arena, *from._impl_.system_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetOperatorIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetOperatorIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetOperatorIdRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.system_ = {};
}
SetOperatorIdRequest::~SetOperatorIdRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetOperatorIdRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetOperatorIdRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.system_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetOperatorIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetOperatorIdRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.system_ != nullptr);
    _impl_.system_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetOperatorIdRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetOperatorIdRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetOperatorIdRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetOperatorIdRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.OperatorId system = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetOperatorIdRequest, _impl_.system_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.OperatorId system = 1;
    {PROTOBUF_FIELD_OFFSET(SetOperatorIdRequest, _impl_.system_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::OperatorId>()},
  }}, {{
  }},
};

::uint8_t* SetOperatorIdRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetOperatorIdRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.OperatorId system = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::system(this),
        _Internal::system(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetOperatorIdRequest)
  return target;
}

::size_t SetOperatorIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetOperatorIdRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.OperatorId system = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.system_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetOperatorIdRequest::_class_data_ = {
    SetOperatorIdRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetOperatorIdRequest::GetClassData() const {
  return &_class_data_;
}

void SetOperatorIdRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetOperatorIdRequest*>(&to_msg);
  auto& from = static_cast<const SetOperatorIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetOperatorIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_system()->::mavsdk::rpc::remote_id::OperatorId::MergeFrom(
        from._internal_system());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetOperatorIdRequest::CopyFrom(const SetOperatorIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetOperatorIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetOperatorIdRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetOperatorIdRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetOperatorIdRequest::InternalSwap(SetOperatorIdRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.system_, other->_impl_.system_);
}

::google::protobuf::Metadata SetOperatorIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[8]);
}
// ===================================================================

class SetOperatorIdResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetOperatorIdResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetOperatorIdResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::RemoteIdResult& remote_id_result(const SetOperatorIdResponse* msg);
  static void set_has_remote_id_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::RemoteIdResult& SetOperatorIdResponse::_Internal::remote_id_result(const SetOperatorIdResponse* msg) {
  return *msg->_impl_.remote_id_result_;
}
SetOperatorIdResponse::SetOperatorIdResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetOperatorIdResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetOperatorIdResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetOperatorIdResponse::SetOperatorIdResponse(
    ::google::protobuf::Arena* arena,
    const SetOperatorIdResponse& from)
    : ::google::protobuf::Message(arena) {
  SetOperatorIdResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.remote_id_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::RemoteIdResult>(arena, *from._impl_.remote_id_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetOperatorIdResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetOperatorIdResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetOperatorIdResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.remote_id_result_ = {};
}
SetOperatorIdResponse::~SetOperatorIdResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetOperatorIdResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetOperatorIdResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.remote_id_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetOperatorIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetOperatorIdResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.remote_id_result_ != nullptr);
    _impl_.remote_id_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetOperatorIdResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetOperatorIdResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetOperatorIdResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetOperatorIdResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetOperatorIdResponse, _impl_.remote_id_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetOperatorIdResponse, _impl_.remote_id_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::RemoteIdResult>()},
  }}, {{
  }},
};

::uint8_t* SetOperatorIdResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetOperatorIdResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::remote_id_result(this),
        _Internal::remote_id_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetOperatorIdResponse)
  return target;
}

::size_t SetOperatorIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetOperatorIdResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.remote_id_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetOperatorIdResponse::_class_data_ = {
    SetOperatorIdResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetOperatorIdResponse::GetClassData() const {
  return &_class_data_;
}

void SetOperatorIdResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetOperatorIdResponse*>(&to_msg);
  auto& from = static_cast<const SetOperatorIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetOperatorIdResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_remote_id_result()->::mavsdk::rpc::remote_id::RemoteIdResult::MergeFrom(
        from._internal_remote_id_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetOperatorIdResponse::CopyFrom(const SetOperatorIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetOperatorIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetOperatorIdResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetOperatorIdResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetOperatorIdResponse::InternalSwap(SetOperatorIdResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.remote_id_result_, other->_impl_.remote_id_result_);
}

::google::protobuf::Metadata SetOperatorIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[9]);
}
// ===================================================================

class SetSelfIdRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetSelfIdRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetSelfIdRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::SelfId& self_id(const SetSelfIdRequest* msg);
  static void set_has_self_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::SelfId& SetSelfIdRequest::_Internal::self_id(const SetSelfIdRequest* msg) {
  return *msg->_impl_.self_id_;
}
SetSelfIdRequest::SetSelfIdRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetSelfIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetSelfIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetSelfIdRequest::SetSelfIdRequest(
    ::google::protobuf::Arena* arena,
    const SetSelfIdRequest& from)
    : ::google::protobuf::Message(arena) {
  SetSelfIdRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.self_id_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::SelfId>(arena, *from._impl_.self_id_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetSelfIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetSelfIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetSelfIdRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.self_id_ = {};
}
SetSelfIdRequest::~SetSelfIdRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetSelfIdRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetSelfIdRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.self_id_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetSelfIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetSelfIdRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.self_id_ != nullptr);
    _impl_.self_id_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetSelfIdRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetSelfIdRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetSelfIdRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetSelfIdRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.SelfId self_id = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetSelfIdRequest, _impl_.self_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.SelfId self_id = 1;
    {PROTOBUF_FIELD_OFFSET(SetSelfIdRequest, _impl_.self_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::SelfId>()},
  }}, {{
  }},
};

::uint8_t* SetSelfIdRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetSelfIdRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.SelfId self_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::self_id(this),
        _Internal::self_id(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetSelfIdRequest)
  return target;
}

::size_t SetSelfIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetSelfIdRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.SelfId self_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.self_id_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetSelfIdRequest::_class_data_ = {
    SetSelfIdRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetSelfIdRequest::GetClassData() const {
  return &_class_data_;
}

void SetSelfIdRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetSelfIdRequest*>(&to_msg);
  auto& from = static_cast<const SetSelfIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetSelfIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_self_id()->::mavsdk::rpc::remote_id::SelfId::MergeFrom(
        from._internal_self_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetSelfIdRequest::CopyFrom(const SetSelfIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetSelfIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetSelfIdRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetSelfIdRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetSelfIdRequest::InternalSwap(SetSelfIdRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.self_id_, other->_impl_.self_id_);
}

::google::protobuf::Metadata SetSelfIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[10]);
}
// ===================================================================

class SetSelfIdResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetSelfIdResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetSelfIdResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::RemoteIdResult& remote_id_result(const SetSelfIdResponse* msg);
  static void set_has_remote_id_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::RemoteIdResult& SetSelfIdResponse::_Internal::remote_id_result(const SetSelfIdResponse* msg) {
  return *msg->_impl_.remote_id_result_;
}
SetSelfIdResponse::SetSelfIdResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetSelfIdResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetSelfIdResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetSelfIdResponse::SetSelfIdResponse(
    ::google::protobuf::Arena* arena,
    const SetSelfIdResponse& from)
    : ::google::protobuf::Message(arena) {
  SetSelfIdResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.remote_id_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::RemoteIdResult>(arena, *from._impl_.remote_id_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetSelfIdResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetSelfIdResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetSelfIdResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.remote_id_result_ = {};
}
SetSelfIdResponse::~SetSelfIdResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetSelfIdResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetSelfIdResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.remote_id_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetSelfIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetSelfIdResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.remote_id_result_ != nullptr);
    _impl_.remote_id_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetSelfIdResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetSelfIdResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetSelfIdResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetSelfIdResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetSelfIdResponse, _impl_.remote_id_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetSelfIdResponse, _impl_.remote_id_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::RemoteIdResult>()},
  }}, {{
  }},
};

::uint8_t* SetSelfIdResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetSelfIdResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::remote_id_result(this),
        _Internal::remote_id_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetSelfIdResponse)
  return target;
}

::size_t SetSelfIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetSelfIdResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.remote_id_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetSelfIdResponse::_class_data_ = {
    SetSelfIdResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetSelfIdResponse::GetClassData() const {
  return &_class_data_;
}

void SetSelfIdResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetSelfIdResponse*>(&to_msg);
  auto& from = static_cast<const SetSelfIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetSelfIdResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_remote_id_result()->::mavsdk::rpc::remote_id::RemoteIdResult::MergeFrom(
        from._internal_remote_id_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetSelfIdResponse::CopyFrom(const SetSelfIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetSelfIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetSelfIdResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetSelfIdResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetSelfIdResponse::InternalSwap(SetSelfIdResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.remote_id_result_, other->_impl_.remote_id_result_);
}

::google::protobuf::Metadata SetSelfIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[11]);
}
// ===================================================================

class SubscribeArmStatusRequest::_Internal {
 public:
};

SubscribeArmStatusRequest::SubscribeArmStatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SubscribeArmStatusRequest)
}
SubscribeArmStatusRequest::SubscribeArmStatusRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeArmStatusRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeArmStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SubscribeArmStatusRequest)
}









::google::protobuf::Metadata SubscribeArmStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[12]);
}
// ===================================================================

class ArmStatusResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ArmStatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ArmStatusResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::ArmStatus& arm_status(const ArmStatusResponse* msg);
  static void set_has_arm_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::ArmStatus& ArmStatusResponse::_Internal::arm_status(const ArmStatusResponse* msg) {
  return *msg->_impl_.arm_status_;
}
ArmStatusResponse::ArmStatusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.ArmStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE ArmStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ArmStatusResponse::ArmStatusResponse(
    ::google::protobuf::Arena* arena,
    const ArmStatusResponse& from)
    : ::google::protobuf::Message(arena) {
  ArmStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.arm_status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::ArmStatus>(arena, *from._impl_.arm_status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.ArmStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE ArmStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ArmStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.arm_status_ = {};
}
ArmStatusResponse::~ArmStatusResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.ArmStatusResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ArmStatusResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.arm_status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ArmStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.ArmStatusResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.arm_status_ != nullptr);
    _impl_.arm_status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ArmStatusResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ArmStatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ArmStatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ArmStatusResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.ArmStatus arm_status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ArmStatusResponse, _impl_.arm_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.ArmStatus arm_status = 1;
    {PROTOBUF_FIELD_OFFSET(ArmStatusResponse, _impl_.arm_status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::ArmStatus>()},
  }}, {{
  }},
};

::uint8_t* ArmStatusResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.ArmStatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.ArmStatus arm_status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::arm_status(this),
        _Internal::arm_status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.ArmStatusResponse)
  return target;
}

::size_t ArmStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.ArmStatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.ArmStatus arm_status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.arm_status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ArmStatusResponse::_class_data_ = {
    ArmStatusResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ArmStatusResponse::GetClassData() const {
  return &_class_data_;
}

void ArmStatusResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ArmStatusResponse*>(&to_msg);
  auto& from = static_cast<const ArmStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.ArmStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_arm_status()->::mavsdk::rpc::remote_id::ArmStatus::MergeFrom(
        from._internal_arm_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArmStatusResponse::CopyFrom(const ArmStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.ArmStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ArmStatusResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ArmStatusResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ArmStatusResponse::InternalSwap(ArmStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.arm_status_, other->_impl_.arm_status_);
}

::google::protobuf::Metadata ArmStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[13]);
}
// ===================================================================

class BasicId::_Internal {
 public:
};

BasicId::BasicId(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.BasicId)
}
inline PROTOBUF_NDEBUG_INLINE BasicId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : uas_id_(arena, from.uas_id_),
        _cached_size_{0} {}

BasicId::BasicId(
    ::google::protobuf::Arena* arena,
    const BasicId& from)
    : ::google::protobuf::Message(arena) {
  BasicId* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_type_),
           offsetof(Impl_, ua_type_) -
               offsetof(Impl_, id_type_) +
               sizeof(Impl_::ua_type_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.BasicId)
}
inline PROTOBUF_NDEBUG_INLINE BasicId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : uas_id_(arena),
        _cached_size_{0} {}

inline void BasicId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_type_),
           0,
           offsetof(Impl_, ua_type_) -
               offsetof(Impl_, id_type_) +
               sizeof(Impl_::ua_type_));
}
BasicId::~BasicId() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.BasicId)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BasicId::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uas_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BasicId::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.BasicId)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uas_id_.ClearToEmpty();
  ::memset(&_impl_.id_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ua_type_) -
      reinterpret_cast<char*>(&_impl_.id_type_)) + sizeof(_impl_.ua_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BasicId::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 43, 2> BasicId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BasicId_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .mavsdk.rpc.remote_id.BasicId.IdType id_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BasicId, _impl_.id_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BasicId, _impl_.id_type_)}},
    // .mavsdk.rpc.remote_id.BasicId.UasType ua_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BasicId, _impl_.ua_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BasicId, _impl_.ua_type_)}},
    // string uas_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BasicId, _impl_.uas_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.BasicId.IdType id_type = 1;
    {PROTOBUF_FIELD_OFFSET(BasicId, _impl_.id_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.remote_id.BasicId.UasType ua_type = 2;
    {PROTOBUF_FIELD_OFFSET(BasicId, _impl_.ua_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string uas_id = 3;
    {PROTOBUF_FIELD_OFFSET(BasicId, _impl_.uas_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\0\0\6\0\0\0\0"
    "mavsdk.rpc.remote_id.BasicId"
    "uas_id"
  }},
};

::uint8_t* BasicId::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.BasicId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.remote_id.BasicId.IdType id_type = 1;
  if (this->_internal_id_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_id_type(), target);
  }

  // .mavsdk.rpc.remote_id.BasicId.UasType ua_type = 2;
  if (this->_internal_ua_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_ua_type(), target);
  }

  // string uas_id = 3;
  if (!this->_internal_uas_id().empty()) {
    const std::string& _s = this->_internal_uas_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.remote_id.BasicId.uas_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.BasicId)
  return target;
}

::size_t BasicId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.BasicId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uas_id = 3;
  if (!this->_internal_uas_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uas_id());
  }

  // .mavsdk.rpc.remote_id.BasicId.IdType id_type = 1;
  if (this->_internal_id_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_id_type());
  }

  // .mavsdk.rpc.remote_id.BasicId.UasType ua_type = 2;
  if (this->_internal_ua_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_ua_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BasicId::_class_data_ = {
    BasicId::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BasicId::GetClassData() const {
  return &_class_data_;
}

void BasicId::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BasicId*>(&to_msg);
  auto& from = static_cast<const BasicId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.BasicId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uas_id().empty()) {
    _this->_internal_set_uas_id(from._internal_uas_id());
  }
  if (from._internal_id_type() != 0) {
    _this->_internal_set_id_type(from._internal_id_type());
  }
  if (from._internal_ua_type() != 0) {
    _this->_internal_set_ua_type(from._internal_ua_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BasicId::CopyFrom(const BasicId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.BasicId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BasicId::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BasicId::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BasicId::InternalSwap(BasicId* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uas_id_, &other->_impl_.uas_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BasicId, _impl_.ua_type_)
      + sizeof(BasicId::_impl_.ua_type_)
      - PROTOBUF_FIELD_OFFSET(BasicId, _impl_.id_type_)>(
          reinterpret_cast<char*>(&_impl_.id_type_),
          reinterpret_cast<char*>(&other->_impl_.id_type_));
}

::google::protobuf::Metadata BasicId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[14]);
}
// ===================================================================

class Location::_Internal {
 public:
};

Location::Location(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.Location)
}
Location::Location(
    ::google::protobuf::Arena* arena, const Location& from)
    : Location(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Location::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Location::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, time_utc_us_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::time_utc_us_));
}
Location::~Location() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.Location)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Location::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.Location)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.time_utc_us_) -
      reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.time_utc_us_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Location::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 0, 2> Location::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Location_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .mavsdk.rpc.remote_id.Location.Status status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Location, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.status_)}},
    // uint32 direction_deg = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Location, _impl_.direction_deg_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.direction_deg_)}},
    // float speed_horizontal_m_s = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.speed_horizontal_m_s_)}},
    // float speed_vertical_m_s = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.speed_vertical_m_s_)}},
    // double latitude_deg = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.latitude_deg_)}},
    // double longitude_deg = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.longitude_deg_)}},
    // float altitude_barometric_m = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.altitude_barometric_m_)}},
    // float altitude_geodetic_m = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.altitude_geodetic_m_)}},
    // .mavsdk.rpc.remote_id.Location.HeightRef height_reference = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Location, _impl_.height_reference_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.height_reference_)}},
    // float height_m = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.height_m_)}},
    // uint64 time_utc_us = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Location, _impl_.time_utc_us_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.time_utc_us_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.Location.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 direction_deg = 2;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.direction_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float speed_horizontal_m_s = 3;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.speed_horizontal_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float speed_vertical_m_s = 4;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.speed_vertical_m_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // double latitude_deg = 5;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.latitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double longitude_deg = 6;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.longitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // float altitude_barometric_m = 7;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.altitude_barometric_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float altitude_geodetic_m = 8;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.altitude_geodetic_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .mavsdk.rpc.remote_id.Location.HeightRef height_reference = 9;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.height_reference_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // float height_m = 10;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.height_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint64 time_utc_us = 11;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.time_utc_us_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Location::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.Location)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.remote_id.Location.Status status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_status(), target);
  }

  // uint32 direction_deg = 2;
  if (this->_internal_direction_deg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_direction_deg(), target);
  }

  // float speed_horizontal_m_s = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed_horizontal_m_s = this->_internal_speed_horizontal_m_s();
  ::uint32_t raw_speed_horizontal_m_s;
  memcpy(&raw_speed_horizontal_m_s, &tmp_speed_horizontal_m_s, sizeof(tmp_speed_horizontal_m_s));
  if (raw_speed_horizontal_m_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_speed_horizontal_m_s(), target);
  }

  // float speed_vertical_m_s = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed_vertical_m_s = this->_internal_speed_vertical_m_s();
  ::uint32_t raw_speed_vertical_m_s;
  memcpy(&raw_speed_vertical_m_s, &tmp_speed_vertical_m_s, sizeof(tmp_speed_vertical_m_s));
  if (raw_speed_vertical_m_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_speed_vertical_m_s(), target);
  }

  // double latitude_deg = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_deg = this->_internal_latitude_deg();
  ::uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_latitude_deg(), target);
  }

  // double longitude_deg = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_deg = this->_internal_longitude_deg();
  ::uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_longitude_deg(), target);
  }

  // float altitude_barometric_m = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude_barometric_m = this->_internal_altitude_barometric_m();
  ::uint32_t raw_altitude_barometric_m;
  memcpy(&raw_altitude_barometric_m, &tmp_altitude_barometric_m, sizeof(tmp_altitude_barometric_m));
  if (raw_altitude_barometric_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_altitude_barometric_m(), target);
  }

  // float altitude_geodetic_m = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude_geodetic_m = this->_internal_altitude_geodetic_m();
  ::uint32_t raw_altitude_geodetic_m;
  memcpy(&raw_altitude_geodetic_m, &tmp_altitude_geodetic_m, sizeof(tmp_altitude_geodetic_m));
  if (raw_altitude_geodetic_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_altitude_geodetic_m(), target);
  }

  // .mavsdk.rpc.remote_id.Location.HeightRef height_reference = 9;
  if (this->_internal_height_reference() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_height_reference(), target);
  }

  // float height_m = 10;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_height_m = this->_internal_height_m();
  ::uint32_t raw_height_m;
  memcpy(&raw_height_m, &tmp_height_m, sizeof(tmp_height_m));
  if (raw_height_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        10, this->_internal_height_m(), target);
  }

  // uint64 time_utc_us = 11;
  if (this->_internal_time_utc_us() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        11, this->_internal_time_utc_us(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.Location)
  return target;
}

::size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.Location)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.Location.Status status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  // uint32 direction_deg = 2;
  if (this->_internal_direction_deg() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_direction_deg());
  }

  // float speed_horizontal_m_s = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed_horizontal_m_s = this->_internal_speed_horizontal_m_s();
  ::uint32_t raw_speed_horizontal_m_s;
  memcpy(&raw_speed_horizontal_m_s, &tmp_speed_horizontal_m_s, sizeof(tmp_speed_horizontal_m_s));
  if (raw_speed_horizontal_m_s != 0) {
    total_size += 5;
  }

  // float speed_vertical_m_s = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed_vertical_m_s = this->_internal_speed_vertical_m_s();
  ::uint32_t raw_speed_vertical_m_s;
  memcpy(&raw_speed_vertical_m_s, &tmp_speed_vertical_m_s, sizeof(tmp_speed_vertical_m_s));
  if (raw_speed_vertical_m_s != 0) {
    total_size += 5;
  }

  // double latitude_deg = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_deg = this->_internal_latitude_deg();
  ::uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    total_size += 9;
  }

  // double longitude_deg = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_deg = this->_internal_longitude_deg();
  ::uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    total_size += 9;
  }

  // float altitude_barometric_m = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude_barometric_m = this->_internal_altitude_barometric_m();
  ::uint32_t raw_altitude_barometric_m;
  memcpy(&raw_altitude_barometric_m, &tmp_altitude_barometric_m, sizeof(tmp_altitude_barometric_m));
  if (raw_altitude_barometric_m != 0) {
    total_size += 5;
  }

  // float altitude_geodetic_m = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude_geodetic_m = this->_internal_altitude_geodetic_m();
  ::uint32_t raw_altitude_geodetic_m;
  memcpy(&raw_altitude_geodetic_m, &tmp_altitude_geodetic_m, sizeof(tmp_altitude_geodetic_m));
  if (raw_altitude_geodetic_m != 0) {
    total_size += 5;
  }

  // .mavsdk.rpc.remote_id.Location.HeightRef height_reference = 9;
  if (this->_internal_height_reference() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_height_reference());
  }

  // float height_m = 10;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_height_m = this->_internal_height_m();
  ::uint32_t raw_height_m;
  memcpy(&raw_height_m, &tmp_height_m, sizeof(tmp_height_m));
  if (raw_height_m != 0) {
    total_size += 5;
  }

  // uint64 time_utc_us = 11;
  if (this->_internal_time_utc_us() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_time_utc_us());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Location::_class_data_ = {
    Location::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Location::GetClassData() const {
  return &_class_data_;
}

void Location::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Location*>(&to_msg);
  auto& from = static_cast<const Location&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.Location)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_direction_deg() != 0) {
    _this->_internal_set_direction_deg(from._internal_direction_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed_horizontal_m_s = from._internal_speed_horizontal_m_s();
  ::uint32_t raw_speed_horizontal_m_s;
  memcpy(&raw_speed_horizontal_m_s, &tmp_speed_horizontal_m_s, sizeof(tmp_speed_horizontal_m_s));
  if (raw_speed_horizontal_m_s != 0) {
    _this->_internal_set_speed_horizontal_m_s(from._internal_speed_horizontal_m_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed_vertical_m_s = from._internal_speed_vertical_m_s();
  ::uint32_t raw_speed_vertical_m_s;
  memcpy(&raw_speed_vertical_m_s, &tmp_speed_vertical_m_s, sizeof(tmp_speed_vertical_m_s));
  if (raw_speed_vertical_m_s != 0) {
    _this->_internal_set_speed_vertical_m_s(from._internal_speed_vertical_m_s());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_deg = from._internal_latitude_deg();
  ::uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    _this->_internal_set_latitude_deg(from._internal_latitude_deg());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_deg = from._internal_longitude_deg();
  ::uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    _this->_internal_set_longitude_deg(from._internal_longitude_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude_barometric_m = from._internal_altitude_barometric_m();
  ::uint32_t raw_altitude_barometric_m;
  memcpy(&raw_altitude_barometric_m, &tmp_altitude_barometric_m, sizeof(tmp_altitude_barometric_m));
  if (raw_altitude_barometric_m != 0) {
    _this->_internal_set_altitude_barometric_m(from._internal_altitude_barometric_m());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude_geodetic_m = from._internal_altitude_geodetic_m();
  ::uint32_t raw_altitude_geodetic_m;
  memcpy(&raw_altitude_geodetic_m, &tmp_altitude_geodetic_m, sizeof(tmp_altitude_geodetic_m));
  if (raw_altitude_geodetic_m != 0) {
    _this->_internal_set_altitude_geodetic_m(from._internal_altitude_geodetic_m());
  }
  if (from._internal_height_reference() != 0) {
    _this->_internal_set_height_reference(from._internal_height_reference());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_height_m = from._internal_height_m();
  ::uint32_t raw_height_m;
  memcpy(&raw_height_m, &tmp_height_m, sizeof(tmp_height_m));
  if (raw_height_m != 0) {
    _this->_internal_set_height_m(from._internal_height_m());
  }
  if (from._internal_time_utc_us() != 0) {
    _this->_internal_set_time_utc_us(from._internal_time_utc_us());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Location::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Location::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Location::InternalSwap(Location* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Location, _impl_.time_utc_us_)
      + sizeof(Location::_impl_.time_utc_us_)
      - PROTOBUF_FIELD_OFFSET(Location, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata Location::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[15]);
}
// ===================================================================

class LocationAccuracy::_Internal {
 public:
};

LocationAccuracy::LocationAccuracy(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.LocationAccuracy)
}
LocationAccuracy::LocationAccuracy(
    ::google::protobuf::Arena* arena, const LocationAccuracy& from)
    : LocationAccuracy(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LocationAccuracy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LocationAccuracy::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, horizontal_accuracy_),
           0,
           offsetof(Impl_, timestamp_accuracy_) -
               offsetof(Impl_, horizontal_accuracy_) +
               sizeof(Impl_::timestamp_accuracy_));
}
LocationAccuracy::~LocationAccuracy() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.LocationAccuracy)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocationAccuracy::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LocationAccuracy::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.LocationAccuracy)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.horizontal_accuracy_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_accuracy_) -
      reinterpret_cast<char*>(&_impl_.horizontal_accuracy_)) + sizeof(_impl_.timestamp_accuracy_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LocationAccuracy::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> LocationAccuracy::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LocationAccuracy_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .mavsdk.rpc.remote_id.LocationAccuracy.HorAcc horizontal_accuracy = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocationAccuracy, _impl_.horizontal_accuracy_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LocationAccuracy, _impl_.horizontal_accuracy_)}},
    // .mavsdk.rpc.remote_id.LocationAccuracy.VerAcc vertical_accuracy = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocationAccuracy, _impl_.vertical_accuracy_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LocationAccuracy, _impl_.vertical_accuracy_)}},
    // .mavsdk.rpc.remote_id.LocationAccuracy.VerAcc barometer_accuracy = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocationAccuracy, _impl_.barometer_accuracy_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(LocationAccuracy, _impl_.barometer_accuracy_)}},
    // .mavsdk.rpc.remote_id.LocationAccuracy.SpeedAcc speed_accuracy = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocationAccuracy, _impl_.speed_accuracy_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(LocationAccuracy, _impl_.speed_accuracy_)}},
    // .mavsdk.rpc.remote_id.LocationAccuracy.TimeAcc timestamp_accuracy = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LocationAccuracy, _impl_.timestamp_accuracy_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(LocationAccuracy, _impl_.timestamp_accuracy_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.LocationAccuracy.HorAcc horizontal_accuracy = 1;
    {PROTOBUF_FIELD_OFFSET(LocationAccuracy, _impl_.horizontal_accuracy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.remote_id.LocationAccuracy.VerAcc vertical_accuracy = 2;
    {PROTOBUF_FIELD_OFFSET(LocationAccuracy, _impl_.vertical_accuracy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.remote_id.LocationAccuracy.VerAcc barometer_accuracy = 3;
    {PROTOBUF_FIELD_OFFSET(LocationAccuracy, _impl_.barometer_accuracy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.remote_id.LocationAccuracy.SpeedAcc speed_accuracy = 4;
    {PROTOBUF_FIELD_OFFSET(LocationAccuracy, _impl_.speed_accuracy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.remote_id.LocationAccuracy.TimeAcc timestamp_accuracy = 5;
    {PROTOBUF_FIELD_OFFSET(LocationAccuracy, _impl_.timestamp_accuracy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* LocationAccuracy::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.LocationAccuracy)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.remote_id.LocationAccuracy.HorAcc horizontal_accuracy = 1;
  if (this->_internal_horizontal_accuracy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_horizontal_accuracy(), target);
  }

  // .mavsdk.rpc.remote_id.LocationAccuracy.VerAcc vertical_accuracy = 2;
  if (this->_internal_vertical_accuracy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_vertical_accuracy(), target);
  }

  // .mavsdk.rpc.remote_id.LocationAccuracy.VerAcc barometer_accuracy = 3;
  if (this->_internal_barometer_accuracy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_barometer_accuracy(), target);
  }

  // .mavsdk.rpc.remote_id.LocationAccuracy.SpeedAcc speed_accuracy = 4;
  if (this->_internal_speed_accuracy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_speed_accuracy(), target);
  }

  // .mavsdk.rpc.remote_id.LocationAccuracy.TimeAcc timestamp_accuracy = 5;
  if (this->_internal_timestamp_accuracy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_timestamp_accuracy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.LocationAccuracy)
  return target;
}

::size_t LocationAccuracy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.LocationAccuracy)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.LocationAccuracy.HorAcc horizontal_accuracy = 1;
  if (this->_internal_horizontal_accuracy() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_horizontal_accuracy());
  }

  // .mavsdk.rpc.remote_id.LocationAccuracy.VerAcc vertical_accuracy = 2;
  if (this->_internal_vertical_accuracy() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_vertical_accuracy());
  }

  // .mavsdk.rpc.remote_id.LocationAccuracy.VerAcc barometer_accuracy = 3;
  if (this->_internal_barometer_accuracy() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_barometer_accuracy());
  }

  // .mavsdk.rpc.remote_id.LocationAccuracy.SpeedAcc speed_accuracy = 4;
  if (this->_internal_speed_accuracy() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_speed_accuracy());
  }

  // .mavsdk.rpc.remote_id.LocationAccuracy.TimeAcc timestamp_accuracy = 5;
  if (this->_internal_timestamp_accuracy() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_timestamp_accuracy());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LocationAccuracy::_class_data_ = {
    LocationAccuracy::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LocationAccuracy::GetClassData() const {
  return &_class_data_;
}

void LocationAccuracy::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LocationAccuracy*>(&to_msg);
  auto& from = static_cast<const LocationAccuracy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.LocationAccuracy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_horizontal_accuracy() != 0) {
    _this->_internal_set_horizontal_accuracy(from._internal_horizontal_accuracy());
  }
  if (from._internal_vertical_accuracy() != 0) {
    _this->_internal_set_vertical_accuracy(from._internal_vertical_accuracy());
  }
  if (from._internal_barometer_accuracy() != 0) {
    _this->_internal_set_barometer_accuracy(from._internal_barometer_accuracy());
  }
  if (from._internal_speed_accuracy() != 0) {
    _this->_internal_set_speed_accuracy(from._internal_speed_accuracy());
  }
  if (from._internal_timestamp_accuracy() != 0) {
    _this->_internal_set_timestamp_accuracy(from._internal_timestamp_accuracy());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocationAccuracy::CopyFrom(const LocationAccuracy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.LocationAccuracy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LocationAccuracy::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LocationAccuracy::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LocationAccuracy::InternalSwap(LocationAccuracy* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocationAccuracy, _impl_.timestamp_accuracy_)
      + sizeof(LocationAccuracy::_impl_.timestamp_accuracy_)
      - PROTOBUF_FIELD_OFFSET(LocationAccuracy, _impl_.horizontal_accuracy_)>(
          reinterpret_cast<char*>(&_impl_.horizontal_accuracy_),
          reinterpret_cast<char*>(&other->_impl_.horizontal_accuracy_));
}

::google::protobuf::Metadata LocationAccuracy::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[16]);
}
// ===================================================================

class SystemId::_Internal {
 public:
};

SystemId::SystemId(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SystemId)
}
SystemId::SystemId(
    ::google::protobuf::Arena* arena, const SystemId& from)
    : SystemId(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SystemId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SystemId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, operator_location_type_),
           0,
           offsetof(Impl_, operator_altitude_geo_m_) -
               offsetof(Impl_, operator_location_type_) +
               sizeof(Impl_::operator_altitude_geo_m_));
}
SystemId::~SystemId() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SystemId)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SystemId::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SystemId::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SystemId)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.operator_location_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.operator_altitude_geo_m_) -
      reinterpret_cast<char*>(&_impl_.operator_location_type_)) + sizeof(_impl_.operator_altitude_geo_m_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SystemId::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 0, 2> SystemId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SystemId_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .mavsdk.rpc.remote_id.SystemId.OperatorLocationType operator_location_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SystemId, _impl_.operator_location_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SystemId, _impl_.operator_location_type_)}},
    // .mavsdk.rpc.remote_id.SystemId.ClassificationType classification_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SystemId, _impl_.classification_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SystemId, _impl_.classification_type_)}},
    // double operator_latitude_deg = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(SystemId, _impl_.operator_latitude_deg_)}},
    // double operator_longitude_deg = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(SystemId, _impl_.operator_longitude_deg_)}},
    // uint32 area_count = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SystemId, _impl_.area_count_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SystemId, _impl_.area_count_)}},
    // uint32 area_radius_m = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SystemId, _impl_.area_radius_m_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SystemId, _impl_.area_radius_m_)}},
    // float area_ceiling_m = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(SystemId, _impl_.area_ceiling_m_)}},
    // float area_floor_m = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(SystemId, _impl_.area_floor_m_)}},
    // .mavsdk.rpc.remote_id.SystemId.CategoryEu category_eu = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SystemId, _impl_.category_eu_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(SystemId, _impl_.category_eu_)}},
    // .mavsdk.rpc.remote_id.SystemId.ClassEu class_eu = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SystemId, _impl_.class_eu_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(SystemId, _impl_.class_eu_)}},
    // float operator_altitude_geo_m = 11;
    {::_pbi::TcParser::FastF32S1,
     {93, 63, 0, PROTOBUF_FIELD_OFFSET(SystemId, _impl_.operator_altitude_geo_m_)}},
    // uint64 time_utc_us = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SystemId, _impl_.time_utc_us_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(SystemId, _impl_.time_utc_us_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.SystemId.OperatorLocationType operator_location_type = 1;
    {PROTOBUF_FIELD_OFFSET(SystemId, _impl_.operator_location_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.remote_id.SystemId.ClassificationType classification_type = 2;
    {PROTOBUF_FIELD_OFFSET(SystemId, _impl_.classification_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // double operator_latitude_deg = 3;
    {PROTOBUF_FIELD_OFFSET(SystemId, _impl_.operator_latitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double operator_longitude_deg = 4;
    {PROTOBUF_FIELD_OFFSET(SystemId, _impl_.operator_longitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // uint32 area_count = 5;
    {PROTOBUF_FIELD_OFFSET(SystemId, _impl_.area_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 area_radius_m = 6;
    {PROTOBUF_FIELD_OFFSET(SystemId, _impl_.area_radius_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float area_ceiling_m = 7;
    {PROTOBUF_FIELD_OFFSET(SystemId, _impl_.area_ceiling_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float area_floor_m = 8;
    {PROTOBUF_FIELD_OFFSET(SystemId, _impl_.area_floor_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .mavsdk.rpc.remote_id.SystemId.CategoryEu category_eu = 9;
    {PROTOBUF_FIELD_OFFSET(SystemId, _impl_.category_eu_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.remote_id.SystemId.ClassEu class_eu = 10;
    {PROTOBUF_FIELD_OFFSET(SystemId, _impl_.class_eu_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // float operator_altitude_geo_m = 11;
    {PROTOBUF_FIELD_OFFSET(SystemId, _impl_.operator_altitude_geo_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint64 time_utc_us = 12;
    {PROTOBUF_FIELD_OFFSET(SystemId, _impl_.time_utc_us_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SystemId::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SystemId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.remote_id.SystemId.OperatorLocationType operator_location_type = 1;
  if (this->_internal_operator_location_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_operator_location_type(), target);
  }

  // .mavsdk.rpc.remote_id.SystemId.ClassificationType classification_type = 2;
  if (this->_internal_classification_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_classification_type(), target);
  }

  // double operator_latitude_deg = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_operator_latitude_deg = this->_internal_operator_latitude_deg();
  ::uint64_t raw_operator_latitude_deg;
  memcpy(&raw_operator_latitude_deg, &tmp_operator_latitude_deg, sizeof(tmp_operator_latitude_deg));
  if (raw_operator_latitude_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_operator_latitude_deg(), target);
  }

  // double operator_longitude_deg = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_operator_longitude_deg = this->_internal_operator_longitude_deg();
  ::uint64_t raw_operator_longitude_deg;
  memcpy(&raw_operator_longitude_deg, &tmp_operator_longitude_deg, sizeof(tmp_operator_longitude_deg));
  if (raw_operator_longitude_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_operator_longitude_deg(), target);
  }

  // uint32 area_count = 5;
  if (this->_internal_area_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_area_count(), target);
  }

  // uint32 area_radius_m = 6;
  if (this->_internal_area_radius_m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_area_radius_m(), target);
  }

  // float area_ceiling_m = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_area_ceiling_m = this->_internal_area_ceiling_m();
  ::uint32_t raw_area_ceiling_m;
  memcpy(&raw_area_ceiling_m, &tmp_area_ceiling_m, sizeof(tmp_area_ceiling_m));
  if (raw_area_ceiling_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_area_ceiling_m(), target);
  }

  // float area_floor_m = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_area_floor_m = this->_internal_area_floor_m();
  ::uint32_t raw_area_floor_m;
  memcpy(&raw_area_floor_m, &tmp_area_floor_m, sizeof(tmp_area_floor_m));
  if (raw_area_floor_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_area_floor_m(), target);
  }

  // .mavsdk.rpc.remote_id.SystemId.CategoryEu category_eu = 9;
  if (this->_internal_category_eu() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_category_eu(), target);
  }

  // .mavsdk.rpc.remote_id.SystemId.ClassEu class_eu = 10;
  if (this->_internal_class_eu() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        10, this->_internal_class_eu(), target);
  }

  // float operator_altitude_geo_m = 11;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_operator_altitude_geo_m = this->_internal_operator_altitude_geo_m();
  ::uint32_t raw_operator_altitude_geo_m;
  memcpy(&raw_operator_altitude_geo_m, &tmp_operator_altitude_geo_m, sizeof(tmp_operator_altitude_geo_m));
  if (raw_operator_altitude_geo_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        11, this->_internal_operator_altitude_geo_m(), target);
  }

  // uint64 time_utc_us = 12;
  if (this->_internal_time_utc_us() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        12, this->_internal_time_utc_us(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SystemId)
  return target;
}

::size_t SystemId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SystemId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.SystemId.OperatorLocationType operator_location_type = 1;
  if (this->_internal_operator_location_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_operator_location_type());
  }

  // .mavsdk.rpc.remote_id.SystemId.ClassificationType classification_type = 2;
  if (this->_internal_classification_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_classification_type());
  }

  // double operator_latitude_deg = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_operator_latitude_deg = this->_internal_operator_latitude_deg();
  ::uint64_t raw_operator_latitude_deg;
  memcpy(&raw_operator_latitude_deg, &tmp_operator_latitude_deg, sizeof(tmp_operator_latitude_deg));
  if (raw_operator_latitude_deg != 0) {
    total_size += 9;
  }

  // double operator_longitude_deg = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_operator_longitude_deg = this->_internal_operator_longitude_deg();
  ::uint64_t raw_operator_longitude_deg;
  memcpy(&raw_operator_longitude_deg, &tmp_operator_longitude_deg, sizeof(tmp_operator_longitude_deg));
  if (raw_operator_longitude_deg != 0) {
    total_size += 9;
  }

  // uint32 area_count = 5;
  if (this->_internal_area_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_area_count());
  }

  // uint32 area_radius_m = 6;
  if (this->_internal_area_radius_m() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_area_radius_m());
  }

  // float area_ceiling_m = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_area_ceiling_m = this->_internal_area_ceiling_m();
  ::uint32_t raw_area_ceiling_m;
  memcpy(&raw_area_ceiling_m, &tmp_area_ceiling_m, sizeof(tmp_area_ceiling_m));
  if (raw_area_ceiling_m != 0) {
    total_size += 5;
  }

  // float area_floor_m = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_area_floor_m = this->_internal_area_floor_m();
  ::uint32_t raw_area_floor_m;
  memcpy(&raw_area_floor_m, &tmp_area_floor_m, sizeof(tmp_area_floor_m));
  if (raw_area_floor_m != 0) {
    total_size += 5;
  }

  // .mavsdk.rpc.remote_id.SystemId.CategoryEu category_eu = 9;
  if (this->_internal_category_eu() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_category_eu());
  }

  // .mavsdk.rpc.remote_id.SystemId.ClassEu class_eu = 10;
  if (this->_internal_class_eu() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_class_eu());
  }

  // uint64 time_utc_us = 12;
  if (this->_internal_time_utc_us() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_time_utc_us());
  }

  // float operator_altitude_geo_m = 11;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_operator_altitude_geo_m = this->_internal_operator_altitude_geo_m();
  ::uint32_t raw_operator_altitude_geo_m;
  memcpy(&raw_operator_altitude_geo_m, &tmp_operator_altitude_geo_m, sizeof(tmp_operator_altitude_geo_m));
  if (raw_operator_altitude_geo_m != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SystemId::_class_data_ = {
    SystemId::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SystemId::GetClassData() const {
  return &_class_data_;
}

void SystemId::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SystemId*>(&to_msg);
  auto& from = static_cast<const SystemId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SystemId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_operator_location_type() != 0) {
    _this->_internal_set_operator_location_type(from._internal_operator_location_type());
  }
  if (from._internal_classification_type() != 0) {
    _this->_internal_set_classification_type(from._internal_classification_type());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_operator_latitude_deg = from._internal_operator_latitude_deg();
  ::uint64_t raw_operator_latitude_deg;
  memcpy(&raw_operator_latitude_deg, &tmp_operator_latitude_deg, sizeof(tmp_operator_latitude_deg));
  if (raw_operator_latitude_deg != 0) {
    _this->_internal_set_operator_latitude_deg(from._internal_operator_latitude_deg());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_operator_longitude_deg = from._internal_operator_longitude_deg();
  ::uint64_t raw_operator_longitude_deg;
  memcpy(&raw_operator_longitude_deg, &tmp_operator_longitude_deg, sizeof(tmp_operator_longitude_deg));
  if (raw_operator_longitude_deg != 0) {
    _this->_internal_set_operator_longitude_deg(from._internal_operator_longitude_deg());
  }
  if (from._internal_area_count() != 0) {
    _this->_internal_set_area_count(from._internal_area_count());
  }
  if (from._internal_area_radius_m() != 0) {
    _this->_internal_set_area_radius_m(from._internal_area_radius_m());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_area_ceiling_m = from._internal_area_ceiling_m();
  ::uint32_t raw_area_ceiling_m;
  memcpy(&raw_area_ceiling_m, &tmp_area_ceiling_m, sizeof(tmp_area_ceiling_m));
  if (raw_area_ceiling_m != 0) {
    _this->_internal_set_area_ceiling_m(from._internal_area_ceiling_m());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_area_floor_m = from._internal_area_floor_m();
  ::uint32_t raw_area_floor_m;
  memcpy(&raw_area_floor_m, &tmp_area_floor_m, sizeof(tmp_area_floor_m));
  if (raw_area_floor_m != 0) {
    _this->_internal_set_area_floor_m(from._internal_area_floor_m());
  }
  if (from._internal_category_eu() != 0) {
    _this->_internal_set_category_eu(from._internal_category_eu());
  }
  if (from._internal_class_eu() != 0) {
    _this->_internal_set_class_eu(from._internal_class_eu());
  }
  if (from._internal_time_utc_us() != 0) {
    _this->_internal_set_time_utc_us(from._internal_time_utc_us());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_operator_altitude_geo_m = from._internal_operator_altitude_geo_m();
  ::uint32_t raw_operator_altitude_geo_m;
  memcpy(&raw_operator_altitude_geo_m, &tmp_operator_altitude_geo_m, sizeof(tmp_operator_altitude_geo_m));
  if (raw_operator_altitude_geo_m != 0) {
    _this->_internal_set_operator_altitude_geo_m(from._internal_operator_altitude_geo_m());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SystemId::CopyFrom(const SystemId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SystemId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SystemId::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SystemId::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SystemId::InternalSwap(SystemId* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemId, _impl_.operator_altitude_geo_m_)
      + sizeof(SystemId::_impl_.operator_altitude_geo_m_)
      - PROTOBUF_FIELD_OFFSET(SystemId, _impl_.operator_location_type_)>(
          reinterpret_cast<char*>(&_impl_.operator_location_type_),
          reinterpret_cast<char*>(&other->_impl_.operator_location_type_));
}

::google::protobuf::Metadata SystemId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[17]);
}
// ===================================================================

class OperatorId::_Internal {
 public:
};

OperatorId::OperatorId(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.OperatorId)
}
inline PROTOBUF_NDEBUG_INLINE OperatorId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : operator_id_(arena, from.operator_id_),
        _cached_size_{0} {}

OperatorId::OperatorId(
    ::google::protobuf::Arena* arena,
    const OperatorId& from)
    : ::google::protobuf::Message(arena) {
  OperatorId* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.operator_id_type_ = from._impl_.operator_id_type_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.OperatorId)
}
inline PROTOBUF_NDEBUG_INLINE OperatorId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : operator_id_(arena),
        _cached_size_{0} {}

inline void OperatorId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.operator_id_type_ = {};
}
OperatorId::~OperatorId() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.OperatorId)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OperatorId::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.operator_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OperatorId::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.OperatorId)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.operator_id_.ClearToEmpty();
  _impl_.operator_id_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OperatorId::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2> OperatorId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OperatorId_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string operator_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OperatorId, _impl_.operator_id_)}},
    // .mavsdk.rpc.remote_id.OperatorId.OperatorIdType operator_id_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OperatorId, _impl_.operator_id_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(OperatorId, _impl_.operator_id_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.OperatorId.OperatorIdType operator_id_type = 1;
    {PROTOBUF_FIELD_OFFSET(OperatorId, _impl_.operator_id_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string operator_id = 2;
    {PROTOBUF_FIELD_OFFSET(OperatorId, _impl_.operator_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\0\13\0\0\0\0\0"
    "mavsdk.rpc.remote_id.OperatorId"
    "operator_id"
  }},
};

::uint8_t* OperatorId::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.OperatorId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.remote_id.OperatorId.OperatorIdType operator_id_type = 1;
  if (this->_internal_operator_id_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_operator_id_type(), target);
  }

  // string operator_id = 2;
  if (!this->_internal_operator_id().empty()) {
    const std::string& _s = this->_internal_operator_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.remote_id.OperatorId.operator_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.OperatorId)
  return target;
}

::size_t OperatorId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.OperatorId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string operator_id = 2;
  if (!this->_internal_operator_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_operator_id());
  }

  // .mavsdk.rpc.remote_id.OperatorId.OperatorIdType operator_id_type = 1;
  if (this->_internal_operator_id_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_operator_id_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OperatorId::_class_data_ = {
    OperatorId::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OperatorId::GetClassData() const {
  return &_class_data_;
}

void OperatorId::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OperatorId*>(&to_msg);
  auto& from = static_cast<const OperatorId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.OperatorId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_operator_id().empty()) {
    _this->_internal_set_operator_id(from._internal_operator_id());
  }
  if (from._internal_operator_id_type() != 0) {
    _this->_internal_set_operator_id_type(from._internal_operator_id_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperatorId::CopyFrom(const OperatorId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.OperatorId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OperatorId::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OperatorId::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OperatorId::InternalSwap(OperatorId* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operator_id_, &other->_impl_.operator_id_, arena);
  swap(_impl_.operator_id_type_, other->_impl_.operator_id_type_);
}

::google::protobuf::Metadata OperatorId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[18]);
}
// ===================================================================

class SelfId::_Internal {
 public:
};

SelfId::SelfId(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SelfId)
}
inline PROTOBUF_NDEBUG_INLINE SelfId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : description_(arena, from.description_),
        _cached_size_{0} {}

SelfId::SelfId(
    ::google::protobuf::Arena* arena,
    const SelfId& from)
    : ::google::protobuf::Message(arena) {
  SelfId* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.description_type_ = from._impl_.description_type_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SelfId)
}
inline PROTOBUF_NDEBUG_INLINE SelfId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : description_(arena),
        _cached_size_{0} {}

inline void SelfId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.description_type_ = {};
}
SelfId::~SelfId() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SelfId)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SelfId::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.description_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SelfId::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SelfId)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.description_.ClearToEmpty();
  _impl_.description_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SelfId::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> SelfId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SelfId_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SelfId, _impl_.description_)}},
    // .mavsdk.rpc.remote_id.SelfId.DescType description_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SelfId, _impl_.description_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SelfId, _impl_.description_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.SelfId.DescType description_type = 1;
    {PROTOBUF_FIELD_OFFSET(SelfId, _impl_.description_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(SelfId, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\13\0\0\0\0\0"
    "mavsdk.rpc.remote_id.SelfId"
    "description"
  }},
};

::uint8_t* SelfId::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SelfId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.remote_id.SelfId.DescType description_type = 1;
  if (this->_internal_description_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_description_type(), target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.remote_id.SelfId.description");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SelfId)
  return target;
}

::size_t SelfId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SelfId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // .mavsdk.rpc.remote_id.SelfId.DescType description_type = 1;
  if (this->_internal_description_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_description_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SelfId::_class_data_ = {
    SelfId::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SelfId::GetClassData() const {
  return &_class_data_;
}

void SelfId::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SelfId*>(&to_msg);
  auto& from = static_cast<const SelfId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SelfId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_description_type() != 0) {
    _this->_internal_set_description_type(from._internal_description_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelfId::CopyFrom(const SelfId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SelfId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SelfId::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SelfId::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SelfId::InternalSwap(SelfId* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  swap(_impl_.description_type_, other->_impl_.description_type_);
}

::google::protobuf::Metadata SelfId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[19]);
}
// ===================================================================

class ArmStatus::_Internal {
 public:
};

ArmStatus::ArmStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.ArmStatus)
}
inline PROTOBUF_NDEBUG_INLINE ArmStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : error_(arena, from.error_),
        _cached_size_{0} {}

ArmStatus::ArmStatus(
    ::google::protobuf::Arena* arena,
    const ArmStatus& from)
    : ::google::protobuf::Message(arena) {
  ArmStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.ArmStatus)
}
inline PROTOBUF_NDEBUG_INLINE ArmStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_(arena),
        _cached_size_{0} {}

inline void ArmStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ArmStatus::~ArmStatus() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.ArmStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ArmStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.error_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ArmStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.ArmStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_.ClearToEmpty();
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ArmStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 44, 2> ArmStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ArmStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string error = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ArmStatus, _impl_.error_)}},
    // .mavsdk.rpc.remote_id.ArmStatus.Status status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ArmStatus, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ArmStatus, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.ArmStatus.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ArmStatus, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string error = 2;
    {PROTOBUF_FIELD_OFFSET(ArmStatus, _impl_.error_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\0\5\0\0\0\0\0"
    "mavsdk.rpc.remote_id.ArmStatus"
    "error"
  }},
};

::uint8_t* ArmStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.ArmStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.remote_id.ArmStatus.Status status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_status(), target);
  }

  // string error = 2;
  if (!this->_internal_error().empty()) {
    const std::string& _s = this->_internal_error();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.remote_id.ArmStatus.error");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.ArmStatus)
  return target;
}

::size_t ArmStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.ArmStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error = 2;
  if (!this->_internal_error().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_error());
  }

  // .mavsdk.rpc.remote_id.ArmStatus.Status status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ArmStatus::_class_data_ = {
    ArmStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ArmStatus::GetClassData() const {
  return &_class_data_;
}

void ArmStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ArmStatus*>(&to_msg);
  auto& from = static_cast<const ArmStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.ArmStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error().empty()) {
    _this->_internal_set_error(from._internal_error());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArmStatus::CopyFrom(const ArmStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.ArmStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ArmStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ArmStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ArmStatus::InternalSwap(ArmStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ArmStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[20]);
}
// ===================================================================

class RemoteIdResult::_Internal {
 public:
};

RemoteIdResult::RemoteIdResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.RemoteIdResult)
}
inline PROTOBUF_NDEBUG_INLINE RemoteIdResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

RemoteIdResult::RemoteIdResult(
    ::google::protobuf::Arena* arena,
    const RemoteIdResult& from)
    : ::google::protobuf::Message(arena) {
  RemoteIdResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.RemoteIdResult)
}
inline PROTOBUF_NDEBUG_INLINE RemoteIdResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void RemoteIdResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
RemoteIdResult::~RemoteIdResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.RemoteIdResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RemoteIdResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.result_str_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RemoteIdResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.RemoteIdResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RemoteIdResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2> RemoteIdResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RemoteIdResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteIdResult, _impl_.result_str_)}},
    // .mavsdk.rpc.remote_id.RemoteIdResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RemoteIdResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteIdResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(RemoteIdResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(RemoteIdResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\12\0\0\0\0\0"
    "mavsdk.rpc.remote_id.RemoteIdResult"
    "result_str"
  }},
};

::uint8_t* RemoteIdResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.RemoteIdResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.remote_id.RemoteIdResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    const std::string& _s = this->_internal_result_str();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.remote_id.RemoteIdResult.result_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.RemoteIdResult)
  return target;
}

::size_t RemoteIdResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.RemoteIdResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_result_str());
  }

  // .mavsdk.rpc.remote_id.RemoteIdResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RemoteIdResult::_class_data_ = {
    RemoteIdResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RemoteIdResult::GetClassData() const {
  return &_class_data_;
}

void RemoteIdResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RemoteIdResult*>(&to_msg);
  auto& from = static_cast<const RemoteIdResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.RemoteIdResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoteIdResult::CopyFrom(const RemoteIdResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.RemoteIdResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RemoteIdResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RemoteIdResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RemoteIdResult::InternalSwap(RemoteIdResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata RemoteIdResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[21]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace remote_id
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
