// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: remote_id/remote_id.proto

#include "remote_id/remote_id.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace remote_id {

inline constexpr RemoteIdResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::remote_id::RemoteIdResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RemoteIdResult::RemoteIdResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RemoteIdResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoteIdResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoteIdResultDefaultTypeInternal() {}
  union {
    RemoteIdResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoteIdResultDefaultTypeInternal _RemoteIdResult_default_instance_;

inline constexpr Location::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_{0u},
        direction_{0u},
        speed_horizontal_{0u},
        speed_vertical_{0},
        latitude_{0},
        longitude_{0},
        altitude_barometric_{0},
        altitude_geodetic_{0},
        height_reference_{0u},
        height_{0},
        timestamp_{0},
        timestamp_accuracy_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Location::Location(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationDefaultTypeInternal() {}
  union {
    Location _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationDefaultTypeInternal _Location_default_instance_;

inline constexpr BasicId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uas_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_type_{0u},
        ua_type_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BasicId::BasicId(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BasicIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BasicIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BasicIdDefaultTypeInternal() {}
  union {
    BasicId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BasicIdDefaultTypeInternal _BasicId_default_instance_;

inline constexpr SetLocationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        remote_id_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetLocationResponse::SetLocationResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetLocationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetLocationResponseDefaultTypeInternal() {}
  union {
    SetLocationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetLocationResponseDefaultTypeInternal _SetLocationResponse_default_instance_;

inline constexpr SetLocationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        location_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetLocationRequest::SetLocationRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetLocationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetLocationRequestDefaultTypeInternal() {}
  union {
    SetLocationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetLocationRequestDefaultTypeInternal _SetLocationRequest_default_instance_;

inline constexpr SetBasicIdResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        remote_id_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetBasicIdResponse::SetBasicIdResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetBasicIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetBasicIdResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetBasicIdResponseDefaultTypeInternal() {}
  union {
    SetBasicIdResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetBasicIdResponseDefaultTypeInternal _SetBasicIdResponse_default_instance_;

inline constexpr SetBasicIdRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        basic_id_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetBasicIdRequest::SetBasicIdRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetBasicIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetBasicIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetBasicIdRequestDefaultTypeInternal() {}
  union {
    SetBasicIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetBasicIdRequestDefaultTypeInternal _SetBasicIdRequest_default_instance_;
}  // namespace remote_id
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_remote_5fid_2fremote_5fid_2eproto[7];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_remote_5fid_2fremote_5fid_2eproto = nullptr;
const ::uint32_t TableStruct_remote_5fid_2fremote_5fid_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetBasicIdRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetBasicIdRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetBasicIdRequest, _impl_.basic_id_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetBasicIdResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetBasicIdResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetBasicIdResponse, _impl_.remote_id_result_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationRequest, _impl_.location_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::SetLocationResponse, _impl_.remote_id_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::BasicId, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::BasicId, _impl_.id_type_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::BasicId, _impl_.ua_type_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::BasicId, _impl_.uas_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.direction_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.speed_horizontal_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.speed_vertical_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.latitude_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.longitude_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.altitude_barometric_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.altitude_geodetic_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.height_reference_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::Location, _impl_.timestamp_accuracy_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::RemoteIdResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::RemoteIdResult, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::remote_id::RemoteIdResult, _impl_.result_str_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::mavsdk::rpc::remote_id::SetBasicIdRequest)},
        {10, 19, -1, sizeof(::mavsdk::rpc::remote_id::SetBasicIdResponse)},
        {20, 29, -1, sizeof(::mavsdk::rpc::remote_id::SetLocationRequest)},
        {30, 39, -1, sizeof(::mavsdk::rpc::remote_id::SetLocationResponse)},
        {40, -1, -1, sizeof(::mavsdk::rpc::remote_id::BasicId)},
        {51, -1, -1, sizeof(::mavsdk::rpc::remote_id::Location)},
        {71, -1, -1, sizeof(::mavsdk::rpc::remote_id::RemoteIdResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::remote_id::_SetBasicIdRequest_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SetBasicIdResponse_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SetLocationRequest_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_SetLocationResponse_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_BasicId_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_Location_default_instance_._instance,
    &::mavsdk::rpc::remote_id::_RemoteIdResult_default_instance_._instance,
};
const char descriptor_table_protodef_remote_5fid_2fremote_5fid_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\031remote_id/remote_id.proto\022\024mavsdk.rpc."
    "remote_id\032\024mavsdk_options.proto\"D\n\021SetBa"
    "sicIdRequest\022/\n\010basic_id\030\001 \001(\0132\035.mavsdk."
    "rpc.remote_id.BasicId\"T\n\022SetBasicIdRespo"
    "nse\022>\n\020remote_id_result\030\001 \001(\0132$.mavsdk.r"
    "pc.remote_id.RemoteIdResult\"F\n\022SetLocati"
    "onRequest\0220\n\010location\030\001 \001(\0132\036.mavsdk.rpc"
    ".remote_id.Location\"U\n\023SetLocationRespon"
    "se\022>\n\020remote_id_result\030\001 \001(\0132$.mavsdk.rp"
    "c.remote_id.RemoteIdResult\";\n\007BasicId\022\017\n"
    "\007id_type\030\001 \001(\r\022\017\n\007ua_type\030\002 \001(\r\022\016\n\006uas_i"
    "d\030\003 \001(\t\"\225\002\n\010Location\022\016\n\006status\030\001 \001(\r\022\021\n\t"
    "direction\030\002 \001(\r\022\030\n\020speed_horizontal\030\003 \001("
    "\r\022\026\n\016speed_vertical\030\004 \001(\005\022\020\n\010latitude\030\005 "
    "\001(\005\022\021\n\tlongitude\030\006 \001(\005\022\033\n\023altitude_barom"
    "etric\030\007 \001(\002\022\031\n\021altitude_geodetic\030\010 \001(\002\022\030"
    "\n\020height_reference\030\t \001(\r\022\016\n\006height\030\n \001(\002"
    "\022\021\n\ttimestamp\030\013 \001(\002\022\032\n\022timestamp_accurac"
    "y\030\014 \001(\r\"\245\001\n\016RemoteIdResult\022;\n\006result\030\001 \001"
    "(\0162+.mavsdk.rpc.remote_id.RemoteIdResult"
    ".Result\022\022\n\nresult_str\030\002 \001(\t\"B\n\006Result\022\022\n"
    "\016RESULT_UNKNOWN\020\000\022\022\n\016RESULT_SUCCESS\020\001\022\020\n"
    "\014RESULT_ERROR\020\0022\342\001\n\017RemoteIdService\022e\n\nS"
    "etBasicId\022\'.mavsdk.rpc.remote_id.SetBasi"
    "cIdRequest\032(.mavsdk.rpc.remote_id.SetBas"
    "icIdResponse\"\004\200\265\030\001\022h\n\013SetLocation\022(.mavs"
    "dk.rpc.remote_id.SetLocationRequest\032).ma"
    "vsdk.rpc.remote_id.SetLocationResponse\"\004"
    "\200\265\030\001B$\n\023io.mavsdk.remote_idB\rRemoteIdPro"
    "tob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_remote_5fid_2fremote_5fid_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_remote_5fid_2fremote_5fid_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_remote_5fid_2fremote_5fid_2eproto = {
    false,
    false,
    1170,
    descriptor_table_protodef_remote_5fid_2fremote_5fid_2eproto,
    "remote_id/remote_id.proto",
    &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
    descriptor_table_remote_5fid_2fremote_5fid_2eproto_deps,
    1,
    7,
    schemas,
    file_default_instances,
    TableStruct_remote_5fid_2fremote_5fid_2eproto::offsets,
    file_level_metadata_remote_5fid_2fremote_5fid_2eproto,
    file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto,
    file_level_service_descriptors_remote_5fid_2fremote_5fid_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter() {
  return &descriptor_table_remote_5fid_2fremote_5fid_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_remote_5fid_2fremote_5fid_2eproto(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
namespace mavsdk {
namespace rpc {
namespace remote_id {
const ::google::protobuf::EnumDescriptor* RemoteIdResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_5fid_2fremote_5fid_2eproto);
  return file_level_enum_descriptors_remote_5fid_2fremote_5fid_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t RemoteIdResult_Result_internal_data_[] = {
    196608u, 0u, };
bool RemoteIdResult_Result_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr RemoteIdResult_Result RemoteIdResult::RESULT_UNKNOWN;
constexpr RemoteIdResult_Result RemoteIdResult::RESULT_SUCCESS;
constexpr RemoteIdResult_Result RemoteIdResult::RESULT_ERROR;
constexpr RemoteIdResult_Result RemoteIdResult::Result_MIN;
constexpr RemoteIdResult_Result RemoteIdResult::Result_MAX;
constexpr int RemoteIdResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class SetBasicIdRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetBasicIdRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetBasicIdRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::BasicId& basic_id(const SetBasicIdRequest* msg);
  static void set_has_basic_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::BasicId& SetBasicIdRequest::_Internal::basic_id(const SetBasicIdRequest* msg) {
  return *msg->_impl_.basic_id_;
}
SetBasicIdRequest::SetBasicIdRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetBasicIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetBasicIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetBasicIdRequest::SetBasicIdRequest(
    ::google::protobuf::Arena* arena,
    const SetBasicIdRequest& from)
    : ::google::protobuf::Message(arena) {
  SetBasicIdRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.basic_id_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::BasicId>(arena, *from._impl_.basic_id_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetBasicIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetBasicIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetBasicIdRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.basic_id_ = {};
}
SetBasicIdRequest::~SetBasicIdRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetBasicIdRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetBasicIdRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.basic_id_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetBasicIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetBasicIdRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.basic_id_ != nullptr);
    _impl_.basic_id_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetBasicIdRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetBasicIdRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetBasicIdRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetBasicIdRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.BasicId basic_id = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetBasicIdRequest, _impl_.basic_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.BasicId basic_id = 1;
    {PROTOBUF_FIELD_OFFSET(SetBasicIdRequest, _impl_.basic_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::BasicId>()},
  }}, {{
  }},
};

::uint8_t* SetBasicIdRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetBasicIdRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.BasicId basic_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::basic_id(this),
        _Internal::basic_id(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetBasicIdRequest)
  return target;
}

::size_t SetBasicIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetBasicIdRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.BasicId basic_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.basic_id_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetBasicIdRequest::_class_data_ = {
    SetBasicIdRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetBasicIdRequest::GetClassData() const {
  return &_class_data_;
}

void SetBasicIdRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetBasicIdRequest*>(&to_msg);
  auto& from = static_cast<const SetBasicIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetBasicIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_basic_id()->::mavsdk::rpc::remote_id::BasicId::MergeFrom(
        from._internal_basic_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetBasicIdRequest::CopyFrom(const SetBasicIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetBasicIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetBasicIdRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetBasicIdRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetBasicIdRequest::InternalSwap(SetBasicIdRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.basic_id_, other->_impl_.basic_id_);
}

::google::protobuf::Metadata SetBasicIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[0]);
}
// ===================================================================

class SetBasicIdResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetBasicIdResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetBasicIdResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::RemoteIdResult& remote_id_result(const SetBasicIdResponse* msg);
  static void set_has_remote_id_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::RemoteIdResult& SetBasicIdResponse::_Internal::remote_id_result(const SetBasicIdResponse* msg) {
  return *msg->_impl_.remote_id_result_;
}
SetBasicIdResponse::SetBasicIdResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetBasicIdResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetBasicIdResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetBasicIdResponse::SetBasicIdResponse(
    ::google::protobuf::Arena* arena,
    const SetBasicIdResponse& from)
    : ::google::protobuf::Message(arena) {
  SetBasicIdResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.remote_id_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::RemoteIdResult>(arena, *from._impl_.remote_id_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetBasicIdResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetBasicIdResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetBasicIdResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.remote_id_result_ = {};
}
SetBasicIdResponse::~SetBasicIdResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetBasicIdResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetBasicIdResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.remote_id_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetBasicIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetBasicIdResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.remote_id_result_ != nullptr);
    _impl_.remote_id_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetBasicIdResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetBasicIdResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetBasicIdResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetBasicIdResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetBasicIdResponse, _impl_.remote_id_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetBasicIdResponse, _impl_.remote_id_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::RemoteIdResult>()},
  }}, {{
  }},
};

::uint8_t* SetBasicIdResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetBasicIdResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::remote_id_result(this),
        _Internal::remote_id_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetBasicIdResponse)
  return target;
}

::size_t SetBasicIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetBasicIdResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.remote_id_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetBasicIdResponse::_class_data_ = {
    SetBasicIdResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetBasicIdResponse::GetClassData() const {
  return &_class_data_;
}

void SetBasicIdResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetBasicIdResponse*>(&to_msg);
  auto& from = static_cast<const SetBasicIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetBasicIdResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_remote_id_result()->::mavsdk::rpc::remote_id::RemoteIdResult::MergeFrom(
        from._internal_remote_id_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetBasicIdResponse::CopyFrom(const SetBasicIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetBasicIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetBasicIdResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetBasicIdResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetBasicIdResponse::InternalSwap(SetBasicIdResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.remote_id_result_, other->_impl_.remote_id_result_);
}

::google::protobuf::Metadata SetBasicIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[1]);
}
// ===================================================================

class SetLocationRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetLocationRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetLocationRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::Location& location(const SetLocationRequest* msg);
  static void set_has_location(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::Location& SetLocationRequest::_Internal::location(const SetLocationRequest* msg) {
  return *msg->_impl_.location_;
}
SetLocationRequest::SetLocationRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetLocationRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetLocationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetLocationRequest::SetLocationRequest(
    ::google::protobuf::Arena* arena,
    const SetLocationRequest& from)
    : ::google::protobuf::Message(arena) {
  SetLocationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.location_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::Location>(arena, *from._impl_.location_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetLocationRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetLocationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetLocationRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.location_ = {};
}
SetLocationRequest::~SetLocationRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetLocationRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetLocationRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.location_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetLocationRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.location_ != nullptr);
    _impl_.location_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetLocationRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetLocationRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetLocationRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetLocationRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.Location location = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetLocationRequest, _impl_.location_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.Location location = 1;
    {PROTOBUF_FIELD_OFFSET(SetLocationRequest, _impl_.location_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::Location>()},
  }}, {{
  }},
};

::uint8_t* SetLocationRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetLocationRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.Location location = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetLocationRequest)
  return target;
}

::size_t SetLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetLocationRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.Location location = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.location_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetLocationRequest::_class_data_ = {
    SetLocationRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetLocationRequest::GetClassData() const {
  return &_class_data_;
}

void SetLocationRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetLocationRequest*>(&to_msg);
  auto& from = static_cast<const SetLocationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetLocationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_location()->::mavsdk::rpc::remote_id::Location::MergeFrom(
        from._internal_location());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetLocationRequest::CopyFrom(const SetLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetLocationRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetLocationRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetLocationRequest::InternalSwap(SetLocationRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.location_, other->_impl_.location_);
}

::google::protobuf::Metadata SetLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[2]);
}
// ===================================================================

class SetLocationResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetLocationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetLocationResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::remote_id::RemoteIdResult& remote_id_result(const SetLocationResponse* msg);
  static void set_has_remote_id_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::remote_id::RemoteIdResult& SetLocationResponse::_Internal::remote_id_result(const SetLocationResponse* msg) {
  return *msg->_impl_.remote_id_result_;
}
SetLocationResponse::SetLocationResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.SetLocationResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetLocationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetLocationResponse::SetLocationResponse(
    ::google::protobuf::Arena* arena,
    const SetLocationResponse& from)
    : ::google::protobuf::Message(arena) {
  SetLocationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.remote_id_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::remote_id::RemoteIdResult>(arena, *from._impl_.remote_id_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.SetLocationResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetLocationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetLocationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.remote_id_result_ = {};
}
SetLocationResponse::~SetLocationResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.SetLocationResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetLocationResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.remote_id_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.SetLocationResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.remote_id_result_ != nullptr);
    _impl_.remote_id_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetLocationResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetLocationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetLocationResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetLocationResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetLocationResponse, _impl_.remote_id_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetLocationResponse, _impl_.remote_id_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::remote_id::RemoteIdResult>()},
  }}, {{
  }},
};

::uint8_t* SetLocationResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.SetLocationResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::remote_id_result(this),
        _Internal::remote_id_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.SetLocationResponse)
  return target;
}

::size_t SetLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.SetLocationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.remote_id_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetLocationResponse::_class_data_ = {
    SetLocationResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetLocationResponse::GetClassData() const {
  return &_class_data_;
}

void SetLocationResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetLocationResponse*>(&to_msg);
  auto& from = static_cast<const SetLocationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.SetLocationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_remote_id_result()->::mavsdk::rpc::remote_id::RemoteIdResult::MergeFrom(
        from._internal_remote_id_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetLocationResponse::CopyFrom(const SetLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.SetLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetLocationResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetLocationResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetLocationResponse::InternalSwap(SetLocationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.remote_id_result_, other->_impl_.remote_id_result_);
}

::google::protobuf::Metadata SetLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[3]);
}
// ===================================================================

class BasicId::_Internal {
 public:
};

BasicId::BasicId(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.BasicId)
}
inline PROTOBUF_NDEBUG_INLINE BasicId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : uas_id_(arena, from.uas_id_),
        _cached_size_{0} {}

BasicId::BasicId(
    ::google::protobuf::Arena* arena,
    const BasicId& from)
    : ::google::protobuf::Message(arena) {
  BasicId* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_type_),
           offsetof(Impl_, ua_type_) -
               offsetof(Impl_, id_type_) +
               sizeof(Impl_::ua_type_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.BasicId)
}
inline PROTOBUF_NDEBUG_INLINE BasicId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : uas_id_(arena),
        _cached_size_{0} {}

inline void BasicId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_type_),
           0,
           offsetof(Impl_, ua_type_) -
               offsetof(Impl_, id_type_) +
               sizeof(Impl_::ua_type_));
}
BasicId::~BasicId() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.BasicId)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BasicId::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uas_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BasicId::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.BasicId)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uas_id_.ClearToEmpty();
  ::memset(&_impl_.id_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ua_type_) -
      reinterpret_cast<char*>(&_impl_.id_type_)) + sizeof(_impl_.ua_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BasicId::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 43, 2> BasicId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BasicId_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BasicId, _impl_.id_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BasicId, _impl_.id_type_)}},
    // uint32 ua_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BasicId, _impl_.ua_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BasicId, _impl_.ua_type_)}},
    // string uas_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BasicId, _impl_.uas_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id_type = 1;
    {PROTOBUF_FIELD_OFFSET(BasicId, _impl_.id_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 ua_type = 2;
    {PROTOBUF_FIELD_OFFSET(BasicId, _impl_.ua_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string uas_id = 3;
    {PROTOBUF_FIELD_OFFSET(BasicId, _impl_.uas_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\0\0\6\0\0\0\0"
    "mavsdk.rpc.remote_id.BasicId"
    "uas_id"
  }},
};

::uint8_t* BasicId::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.BasicId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id_type = 1;
  if (this->_internal_id_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id_type(), target);
  }

  // uint32 ua_type = 2;
  if (this->_internal_ua_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_ua_type(), target);
  }

  // string uas_id = 3;
  if (!this->_internal_uas_id().empty()) {
    const std::string& _s = this->_internal_uas_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.remote_id.BasicId.uas_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.BasicId)
  return target;
}

::size_t BasicId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.BasicId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uas_id = 3;
  if (!this->_internal_uas_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uas_id());
  }

  // uint32 id_type = 1;
  if (this->_internal_id_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id_type());
  }

  // uint32 ua_type = 2;
  if (this->_internal_ua_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ua_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BasicId::_class_data_ = {
    BasicId::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BasicId::GetClassData() const {
  return &_class_data_;
}

void BasicId::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BasicId*>(&to_msg);
  auto& from = static_cast<const BasicId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.BasicId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uas_id().empty()) {
    _this->_internal_set_uas_id(from._internal_uas_id());
  }
  if (from._internal_id_type() != 0) {
    _this->_internal_set_id_type(from._internal_id_type());
  }
  if (from._internal_ua_type() != 0) {
    _this->_internal_set_ua_type(from._internal_ua_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BasicId::CopyFrom(const BasicId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.BasicId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BasicId::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BasicId::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BasicId::InternalSwap(BasicId* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uas_id_, &other->_impl_.uas_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BasicId, _impl_.ua_type_)
      + sizeof(BasicId::_impl_.ua_type_)
      - PROTOBUF_FIELD_OFFSET(BasicId, _impl_.id_type_)>(
          reinterpret_cast<char*>(&_impl_.id_type_),
          reinterpret_cast<char*>(&other->_impl_.id_type_));
}

::google::protobuf::Metadata BasicId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[4]);
}
// ===================================================================

class Location::_Internal {
 public:
};

Location::Location(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.Location)
}
Location::Location(
    ::google::protobuf::Arena* arena, const Location& from)
    : Location(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Location::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Location::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, timestamp_accuracy_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::timestamp_accuracy_));
}
Location::~Location() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.Location)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Location::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.Location)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_accuracy_) -
      reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.timestamp_accuracy_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Location::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 0, 2> Location::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Location_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Location, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.status_)}},
    // uint32 direction = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Location, _impl_.direction_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.direction_)}},
    // uint32 speed_horizontal = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Location, _impl_.speed_horizontal_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.speed_horizontal_)}},
    // int32 speed_vertical = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Location, _impl_.speed_vertical_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.speed_vertical_)}},
    // int32 latitude = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Location, _impl_.latitude_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.latitude_)}},
    // int32 longitude = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Location, _impl_.longitude_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.longitude_)}},
    // float altitude_barometric = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.altitude_barometric_)}},
    // float altitude_geodetic = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.altitude_geodetic_)}},
    // uint32 height_reference = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Location, _impl_.height_reference_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.height_reference_)}},
    // float height = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.height_)}},
    // float timestamp = 11;
    {::_pbi::TcParser::FastF32S1,
     {93, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.timestamp_)}},
    // uint32 timestamp_accuracy = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Location, _impl_.timestamp_accuracy_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.timestamp_accuracy_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 status = 1;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 direction = 2;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 speed_horizontal = 3;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.speed_horizontal_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // int32 speed_vertical = 4;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.speed_vertical_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 latitude = 5;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.latitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 longitude = 6;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.longitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float altitude_barometric = 7;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.altitude_barometric_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float altitude_geodetic = 8;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.altitude_geodetic_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 height_reference = 9;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.height_reference_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float height = 10;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float timestamp = 11;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 timestamp_accuracy = 12;
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.timestamp_accuracy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Location::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.Location)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_status(), target);
  }

  // uint32 direction = 2;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_direction(), target);
  }

  // uint32 speed_horizontal = 3;
  if (this->_internal_speed_horizontal() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_speed_horizontal(), target);
  }

  // int32 speed_vertical = 4;
  if (this->_internal_speed_vertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_speed_vertical(), target);
  }

  // int32 latitude = 5;
  if (this->_internal_latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_latitude(), target);
  }

  // int32 longitude = 6;
  if (this->_internal_longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_longitude(), target);
  }

  // float altitude_barometric = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude_barometric = this->_internal_altitude_barometric();
  ::uint32_t raw_altitude_barometric;
  memcpy(&raw_altitude_barometric, &tmp_altitude_barometric, sizeof(tmp_altitude_barometric));
  if (raw_altitude_barometric != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_altitude_barometric(), target);
  }

  // float altitude_geodetic = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude_geodetic = this->_internal_altitude_geodetic();
  ::uint32_t raw_altitude_geodetic;
  memcpy(&raw_altitude_geodetic, &tmp_altitude_geodetic, sizeof(tmp_altitude_geodetic));
  if (raw_altitude_geodetic != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_altitude_geodetic(), target);
  }

  // uint32 height_reference = 9;
  if (this->_internal_height_reference() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_height_reference(), target);
  }

  // float height = 10;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_height = this->_internal_height();
  ::uint32_t raw_height;
  memcpy(&raw_height, &tmp_height, sizeof(tmp_height));
  if (raw_height != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        10, this->_internal_height(), target);
  }

  // float timestamp = 11;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_timestamp = this->_internal_timestamp();
  ::uint32_t raw_timestamp;
  memcpy(&raw_timestamp, &tmp_timestamp, sizeof(tmp_timestamp));
  if (raw_timestamp != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        11, this->_internal_timestamp(), target);
  }

  // uint32 timestamp_accuracy = 12;
  if (this->_internal_timestamp_accuracy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this->_internal_timestamp_accuracy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.Location)
  return target;
}

::size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.Location)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 status = 1;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_status());
  }

  // uint32 direction = 2;
  if (this->_internal_direction() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_direction());
  }

  // uint32 speed_horizontal = 3;
  if (this->_internal_speed_horizontal() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_speed_horizontal());
  }

  // int32 speed_vertical = 4;
  if (this->_internal_speed_vertical() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_speed_vertical());
  }

  // int32 latitude = 5;
  if (this->_internal_latitude() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_latitude());
  }

  // int32 longitude = 6;
  if (this->_internal_longitude() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_longitude());
  }

  // float altitude_barometric = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude_barometric = this->_internal_altitude_barometric();
  ::uint32_t raw_altitude_barometric;
  memcpy(&raw_altitude_barometric, &tmp_altitude_barometric, sizeof(tmp_altitude_barometric));
  if (raw_altitude_barometric != 0) {
    total_size += 5;
  }

  // float altitude_geodetic = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude_geodetic = this->_internal_altitude_geodetic();
  ::uint32_t raw_altitude_geodetic;
  memcpy(&raw_altitude_geodetic, &tmp_altitude_geodetic, sizeof(tmp_altitude_geodetic));
  if (raw_altitude_geodetic != 0) {
    total_size += 5;
  }

  // uint32 height_reference = 9;
  if (this->_internal_height_reference() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_height_reference());
  }

  // float height = 10;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_height = this->_internal_height();
  ::uint32_t raw_height;
  memcpy(&raw_height, &tmp_height, sizeof(tmp_height));
  if (raw_height != 0) {
    total_size += 5;
  }

  // float timestamp = 11;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_timestamp = this->_internal_timestamp();
  ::uint32_t raw_timestamp;
  memcpy(&raw_timestamp, &tmp_timestamp, sizeof(tmp_timestamp));
  if (raw_timestamp != 0) {
    total_size += 5;
  }

  // uint32 timestamp_accuracy = 12;
  if (this->_internal_timestamp_accuracy() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_timestamp_accuracy());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Location::_class_data_ = {
    Location::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Location::GetClassData() const {
  return &_class_data_;
}

void Location::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Location*>(&to_msg);
  auto& from = static_cast<const Location&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.Location)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  if (from._internal_speed_horizontal() != 0) {
    _this->_internal_set_speed_horizontal(from._internal_speed_horizontal());
  }
  if (from._internal_speed_vertical() != 0) {
    _this->_internal_set_speed_vertical(from._internal_speed_vertical());
  }
  if (from._internal_latitude() != 0) {
    _this->_internal_set_latitude(from._internal_latitude());
  }
  if (from._internal_longitude() != 0) {
    _this->_internal_set_longitude(from._internal_longitude());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude_barometric = from._internal_altitude_barometric();
  ::uint32_t raw_altitude_barometric;
  memcpy(&raw_altitude_barometric, &tmp_altitude_barometric, sizeof(tmp_altitude_barometric));
  if (raw_altitude_barometric != 0) {
    _this->_internal_set_altitude_barometric(from._internal_altitude_barometric());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude_geodetic = from._internal_altitude_geodetic();
  ::uint32_t raw_altitude_geodetic;
  memcpy(&raw_altitude_geodetic, &tmp_altitude_geodetic, sizeof(tmp_altitude_geodetic));
  if (raw_altitude_geodetic != 0) {
    _this->_internal_set_altitude_geodetic(from._internal_altitude_geodetic());
  }
  if (from._internal_height_reference() != 0) {
    _this->_internal_set_height_reference(from._internal_height_reference());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_height = from._internal_height();
  ::uint32_t raw_height;
  memcpy(&raw_height, &tmp_height, sizeof(tmp_height));
  if (raw_height != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_timestamp = from._internal_timestamp();
  ::uint32_t raw_timestamp;
  memcpy(&raw_timestamp, &tmp_timestamp, sizeof(tmp_timestamp));
  if (raw_timestamp != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_timestamp_accuracy() != 0) {
    _this->_internal_set_timestamp_accuracy(from._internal_timestamp_accuracy());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Location::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Location::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Location::InternalSwap(Location* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Location, _impl_.timestamp_accuracy_)
      + sizeof(Location::_impl_.timestamp_accuracy_)
      - PROTOBUF_FIELD_OFFSET(Location, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata Location::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[5]);
}
// ===================================================================

class RemoteIdResult::_Internal {
 public:
};

RemoteIdResult::RemoteIdResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.remote_id.RemoteIdResult)
}
inline PROTOBUF_NDEBUG_INLINE RemoteIdResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

RemoteIdResult::RemoteIdResult(
    ::google::protobuf::Arena* arena,
    const RemoteIdResult& from)
    : ::google::protobuf::Message(arena) {
  RemoteIdResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.remote_id.RemoteIdResult)
}
inline PROTOBUF_NDEBUG_INLINE RemoteIdResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void RemoteIdResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
RemoteIdResult::~RemoteIdResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.remote_id.RemoteIdResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RemoteIdResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.result_str_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RemoteIdResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.remote_id.RemoteIdResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RemoteIdResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2> RemoteIdResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RemoteIdResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteIdResult, _impl_.result_str_)}},
    // .mavsdk.rpc.remote_id.RemoteIdResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RemoteIdResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteIdResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.remote_id.RemoteIdResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(RemoteIdResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(RemoteIdResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\12\0\0\0\0\0"
    "mavsdk.rpc.remote_id.RemoteIdResult"
    "result_str"
  }},
};

::uint8_t* RemoteIdResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.remote_id.RemoteIdResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.remote_id.RemoteIdResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    const std::string& _s = this->_internal_result_str();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.remote_id.RemoteIdResult.result_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.remote_id.RemoteIdResult)
  return target;
}

::size_t RemoteIdResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.remote_id.RemoteIdResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_result_str());
  }

  // .mavsdk.rpc.remote_id.RemoteIdResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RemoteIdResult::_class_data_ = {
    RemoteIdResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RemoteIdResult::GetClassData() const {
  return &_class_data_;
}

void RemoteIdResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RemoteIdResult*>(&to_msg);
  auto& from = static_cast<const RemoteIdResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.remote_id.RemoteIdResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoteIdResult::CopyFrom(const RemoteIdResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.remote_id.RemoteIdResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RemoteIdResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RemoteIdResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RemoteIdResult::InternalSwap(RemoteIdResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata RemoteIdResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_remote_5fid_2fremote_5fid_2eproto_getter, &descriptor_table_remote_5fid_2fremote_5fid_2eproto_once,
      file_level_metadata_remote_5fid_2fremote_5fid_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace remote_id
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
