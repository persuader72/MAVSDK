// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: remote_id/remote_id.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_remote_5fid_2fremote_5fid_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_remote_5fid_2fremote_5fid_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_remote_5fid_2fremote_5fid_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_remote_5fid_2fremote_5fid_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_remote_5fid_2fremote_5fid_2eproto;
namespace mavsdk {
namespace rpc {
namespace remote_id {
class BasicId;
struct BasicIdDefaultTypeInternal;
extern BasicIdDefaultTypeInternal _BasicId_default_instance_;
class Location;
struct LocationDefaultTypeInternal;
extern LocationDefaultTypeInternal _Location_default_instance_;
class RemoteIdResult;
struct RemoteIdResultDefaultTypeInternal;
extern RemoteIdResultDefaultTypeInternal _RemoteIdResult_default_instance_;
class SetBasicIdRequest;
struct SetBasicIdRequestDefaultTypeInternal;
extern SetBasicIdRequestDefaultTypeInternal _SetBasicIdRequest_default_instance_;
class SetBasicIdResponse;
struct SetBasicIdResponseDefaultTypeInternal;
extern SetBasicIdResponseDefaultTypeInternal _SetBasicIdResponse_default_instance_;
class SetLocationRequest;
struct SetLocationRequestDefaultTypeInternal;
extern SetLocationRequestDefaultTypeInternal _SetLocationRequest_default_instance_;
class SetLocationResponse;
struct SetLocationResponseDefaultTypeInternal;
extern SetLocationResponseDefaultTypeInternal _SetLocationResponse_default_instance_;
}  // namespace remote_id
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mavsdk {
namespace rpc {
namespace remote_id {
enum RemoteIdResult_Result : int {
  RemoteIdResult_Result_RESULT_UNKNOWN = 0,
  RemoteIdResult_Result_RESULT_SUCCESS = 1,
  RemoteIdResult_Result_RESULT_ERROR = 2,
  RemoteIdResult_Result_RemoteIdResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  RemoteIdResult_Result_RemoteIdResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool RemoteIdResult_Result_IsValid(int value);
extern const uint32_t RemoteIdResult_Result_internal_data_[];
constexpr RemoteIdResult_Result RemoteIdResult_Result_Result_MIN = static_cast<RemoteIdResult_Result>(0);
constexpr RemoteIdResult_Result RemoteIdResult_Result_Result_MAX = static_cast<RemoteIdResult_Result>(2);
constexpr int RemoteIdResult_Result_Result_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
RemoteIdResult_Result_descriptor();
template <typename T>
const std::string& RemoteIdResult_Result_Name(T value) {
  static_assert(std::is_same<T, RemoteIdResult_Result>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Result_Name().");
  return RemoteIdResult_Result_Name(static_cast<RemoteIdResult_Result>(value));
}
template <>
inline const std::string& RemoteIdResult_Result_Name(RemoteIdResult_Result value) {
  return ::google::protobuf::internal::NameOfDenseEnum<RemoteIdResult_Result_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool RemoteIdResult_Result_Parse(absl::string_view name, RemoteIdResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RemoteIdResult_Result>(
      RemoteIdResult_Result_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class RemoteIdResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.remote_id.RemoteIdResult) */ {
 public:
  inline RemoteIdResult() : RemoteIdResult(nullptr) {}
  ~RemoteIdResult() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RemoteIdResult(::google::protobuf::internal::ConstantInitialized);

  inline RemoteIdResult(const RemoteIdResult& from)
      : RemoteIdResult(nullptr, from) {}
  RemoteIdResult(RemoteIdResult&& from) noexcept
    : RemoteIdResult() {
    *this = ::std::move(from);
  }

  inline RemoteIdResult& operator=(const RemoteIdResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoteIdResult& operator=(RemoteIdResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoteIdResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoteIdResult* internal_default_instance() {
    return reinterpret_cast<const RemoteIdResult*>(
               &_RemoteIdResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(RemoteIdResult& a, RemoteIdResult& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoteIdResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoteIdResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoteIdResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoteIdResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoteIdResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RemoteIdResult& from) {
    RemoteIdResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RemoteIdResult* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.remote_id.RemoteIdResult";
  }
  protected:
  explicit RemoteIdResult(::google::protobuf::Arena* arena);
  RemoteIdResult(::google::protobuf::Arena* arena, const RemoteIdResult& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Result = RemoteIdResult_Result;
  static constexpr Result RESULT_UNKNOWN = RemoteIdResult_Result_RESULT_UNKNOWN;
  static constexpr Result RESULT_SUCCESS = RemoteIdResult_Result_RESULT_SUCCESS;
  static constexpr Result RESULT_ERROR = RemoteIdResult_Result_RESULT_ERROR;
  static inline bool Result_IsValid(int value) {
    return RemoteIdResult_Result_IsValid(value);
  }
  static constexpr Result Result_MIN = RemoteIdResult_Result_Result_MIN;
  static constexpr Result Result_MAX = RemoteIdResult_Result_Result_MAX;
  static constexpr int Result_ARRAYSIZE = RemoteIdResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Result_descriptor() {
    return RemoteIdResult_Result_descriptor();
  }
  template <typename T>
  static inline const std::string& Result_Name(T value) {
    return RemoteIdResult_Result_Name(value);
  }
  static inline bool Result_Parse(absl::string_view name, Result* value) {
    return RemoteIdResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultStrFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string result_str = 2;
  void clear_result_str() ;
  const std::string& result_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result_str(Arg_&& arg, Args_... args);
  std::string* mutable_result_str();
  PROTOBUF_NODISCARD std::string* release_result_str();
  void set_allocated_result_str(std::string* value);

  private:
  const std::string& _internal_result_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result_str(
      const std::string& value);
  std::string* _internal_mutable_result_str();

  public:
  // .mavsdk.rpc.remote_id.RemoteIdResult.Result result = 1;
  void clear_result() ;
  ::mavsdk::rpc::remote_id::RemoteIdResult_Result result() const;
  void set_result(::mavsdk::rpc::remote_id::RemoteIdResult_Result value);

  private:
  ::mavsdk::rpc::remote_id::RemoteIdResult_Result _internal_result() const;
  void _internal_set_result(::mavsdk::rpc::remote_id::RemoteIdResult_Result value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.remote_id.RemoteIdResult)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_str_;
    int result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_5fid_2fremote_5fid_2eproto;
};// -------------------------------------------------------------------

class Location final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.remote_id.Location) */ {
 public:
  inline Location() : Location(nullptr) {}
  ~Location() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Location(::google::protobuf::internal::ConstantInitialized);

  inline Location(const Location& from)
      : Location(nullptr, from) {}
  Location(Location&& from) noexcept
    : Location() {
    *this = ::std::move(from);
  }

  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }
  inline Location& operator=(Location&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Location& default_instance() {
    return *internal_default_instance();
  }
  static inline const Location* internal_default_instance() {
    return reinterpret_cast<const Location*>(
               &_Location_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Location& a, Location& b) {
    a.Swap(&b);
  }
  inline void Swap(Location* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Location* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Location* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Location>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Location& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Location& from) {
    Location::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Location* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.remote_id.Location";
  }
  protected:
  explicit Location(::google::protobuf::Arena* arena);
  Location(::google::protobuf::Arena* arena, const Location& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kDirectionFieldNumber = 2,
    kSpeedHorizontalFieldNumber = 3,
    kSpeedVerticalFieldNumber = 4,
    kLatitudeFieldNumber = 5,
    kLongitudeFieldNumber = 6,
    kAltitudeBarometricFieldNumber = 7,
    kAltitudeGeodeticFieldNumber = 8,
    kHeightReferenceFieldNumber = 9,
    kHeightFieldNumber = 10,
  };
  // uint32 status = 1;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // uint32 direction = 2;
  void clear_direction() ;
  ::uint32_t direction() const;
  void set_direction(::uint32_t value);

  private:
  ::uint32_t _internal_direction() const;
  void _internal_set_direction(::uint32_t value);

  public:
  // uint32 speed_horizontal = 3;
  void clear_speed_horizontal() ;
  ::uint32_t speed_horizontal() const;
  void set_speed_horizontal(::uint32_t value);

  private:
  ::uint32_t _internal_speed_horizontal() const;
  void _internal_set_speed_horizontal(::uint32_t value);

  public:
  // int32 speed_vertical = 4;
  void clear_speed_vertical() ;
  ::int32_t speed_vertical() const;
  void set_speed_vertical(::int32_t value);

  private:
  ::int32_t _internal_speed_vertical() const;
  void _internal_set_speed_vertical(::int32_t value);

  public:
  // int32 latitude = 5;
  void clear_latitude() ;
  ::int32_t latitude() const;
  void set_latitude(::int32_t value);

  private:
  ::int32_t _internal_latitude() const;
  void _internal_set_latitude(::int32_t value);

  public:
  // int32 longitude = 6;
  void clear_longitude() ;
  ::int32_t longitude() const;
  void set_longitude(::int32_t value);

  private:
  ::int32_t _internal_longitude() const;
  void _internal_set_longitude(::int32_t value);

  public:
  // float altitude_barometric = 7;
  void clear_altitude_barometric() ;
  float altitude_barometric() const;
  void set_altitude_barometric(float value);

  private:
  float _internal_altitude_barometric() const;
  void _internal_set_altitude_barometric(float value);

  public:
  // float altitude_geodetic = 8;
  void clear_altitude_geodetic() ;
  float altitude_geodetic() const;
  void set_altitude_geodetic(float value);

  private:
  float _internal_altitude_geodetic() const;
  void _internal_set_altitude_geodetic(float value);

  public:
  // uint32 height_reference = 9;
  void clear_height_reference() ;
  ::uint32_t height_reference() const;
  void set_height_reference(::uint32_t value);

  private:
  ::uint32_t _internal_height_reference() const;
  void _internal_set_height_reference(::uint32_t value);

  public:
  // float height = 10;
  void clear_height() ;
  float height() const;
  void set_height(float value);

  private:
  float _internal_height() const;
  void _internal_set_height(float value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.remote_id.Location)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t status_;
    ::uint32_t direction_;
    ::uint32_t speed_horizontal_;
    ::int32_t speed_vertical_;
    ::int32_t latitude_;
    ::int32_t longitude_;
    float altitude_barometric_;
    float altitude_geodetic_;
    ::uint32_t height_reference_;
    float height_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_5fid_2fremote_5fid_2eproto;
};// -------------------------------------------------------------------

class BasicId final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.remote_id.BasicId) */ {
 public:
  inline BasicId() : BasicId(nullptr) {}
  ~BasicId() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BasicId(::google::protobuf::internal::ConstantInitialized);

  inline BasicId(const BasicId& from)
      : BasicId(nullptr, from) {}
  BasicId(BasicId&& from) noexcept
    : BasicId() {
    *this = ::std::move(from);
  }

  inline BasicId& operator=(const BasicId& from) {
    CopyFrom(from);
    return *this;
  }
  inline BasicId& operator=(BasicId&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BasicId& default_instance() {
    return *internal_default_instance();
  }
  static inline const BasicId* internal_default_instance() {
    return reinterpret_cast<const BasicId*>(
               &_BasicId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(BasicId& a, BasicId& b) {
    a.Swap(&b);
  }
  inline void Swap(BasicId* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BasicId* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BasicId* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BasicId>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BasicId& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BasicId& from) {
    BasicId::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BasicId* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.remote_id.BasicId";
  }
  protected:
  explicit BasicId(::google::protobuf::Arena* arena);
  BasicId(::google::protobuf::Arena* arena, const BasicId& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUasIdFieldNumber = 3,
    kIdTypeFieldNumber = 1,
    kUaTypeFieldNumber = 2,
  };
  // string uas_id = 3;
  void clear_uas_id() ;
  const std::string& uas_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uas_id(Arg_&& arg, Args_... args);
  std::string* mutable_uas_id();
  PROTOBUF_NODISCARD std::string* release_uas_id();
  void set_allocated_uas_id(std::string* value);

  private:
  const std::string& _internal_uas_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uas_id(
      const std::string& value);
  std::string* _internal_mutable_uas_id();

  public:
  // uint32 id_type = 1;
  void clear_id_type() ;
  ::uint32_t id_type() const;
  void set_id_type(::uint32_t value);

  private:
  ::uint32_t _internal_id_type() const;
  void _internal_set_id_type(::uint32_t value);

  public:
  // uint32 ua_type = 2;
  void clear_ua_type() ;
  ::uint32_t ua_type() const;
  void set_ua_type(::uint32_t value);

  private:
  ::uint32_t _internal_ua_type() const;
  void _internal_set_ua_type(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.remote_id.BasicId)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      43, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr uas_id_;
    ::uint32_t id_type_;
    ::uint32_t ua_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_5fid_2fremote_5fid_2eproto;
};// -------------------------------------------------------------------

class SetLocationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.remote_id.SetLocationResponse) */ {
 public:
  inline SetLocationResponse() : SetLocationResponse(nullptr) {}
  ~SetLocationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetLocationResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetLocationResponse(const SetLocationResponse& from)
      : SetLocationResponse(nullptr, from) {}
  SetLocationResponse(SetLocationResponse&& from) noexcept
    : SetLocationResponse() {
    *this = ::std::move(from);
  }

  inline SetLocationResponse& operator=(const SetLocationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetLocationResponse& operator=(SetLocationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetLocationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetLocationResponse* internal_default_instance() {
    return reinterpret_cast<const SetLocationResponse*>(
               &_SetLocationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SetLocationResponse& a, SetLocationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetLocationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetLocationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetLocationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetLocationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetLocationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetLocationResponse& from) {
    SetLocationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetLocationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.remote_id.SetLocationResponse";
  }
  protected:
  explicit SetLocationResponse(::google::protobuf::Arena* arena);
  SetLocationResponse(::google::protobuf::Arena* arena, const SetLocationResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRemoteIdResultFieldNumber = 1,
  };
  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  bool has_remote_id_result() const;
  void clear_remote_id_result() ;
  const ::mavsdk::rpc::remote_id::RemoteIdResult& remote_id_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::remote_id::RemoteIdResult* release_remote_id_result();
  ::mavsdk::rpc::remote_id::RemoteIdResult* mutable_remote_id_result();
  void set_allocated_remote_id_result(::mavsdk::rpc::remote_id::RemoteIdResult* value);
  void unsafe_arena_set_allocated_remote_id_result(::mavsdk::rpc::remote_id::RemoteIdResult* value);
  ::mavsdk::rpc::remote_id::RemoteIdResult* unsafe_arena_release_remote_id_result();

  private:
  const ::mavsdk::rpc::remote_id::RemoteIdResult& _internal_remote_id_result() const;
  ::mavsdk::rpc::remote_id::RemoteIdResult* _internal_mutable_remote_id_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.remote_id.SetLocationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::remote_id::RemoteIdResult* remote_id_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_5fid_2fremote_5fid_2eproto;
};// -------------------------------------------------------------------

class SetLocationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.remote_id.SetLocationRequest) */ {
 public:
  inline SetLocationRequest() : SetLocationRequest(nullptr) {}
  ~SetLocationRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetLocationRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetLocationRequest(const SetLocationRequest& from)
      : SetLocationRequest(nullptr, from) {}
  SetLocationRequest(SetLocationRequest&& from) noexcept
    : SetLocationRequest() {
    *this = ::std::move(from);
  }

  inline SetLocationRequest& operator=(const SetLocationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetLocationRequest& operator=(SetLocationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetLocationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetLocationRequest* internal_default_instance() {
    return reinterpret_cast<const SetLocationRequest*>(
               &_SetLocationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SetLocationRequest& a, SetLocationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetLocationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetLocationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetLocationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetLocationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetLocationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetLocationRequest& from) {
    SetLocationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetLocationRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.remote_id.SetLocationRequest";
  }
  protected:
  explicit SetLocationRequest(::google::protobuf::Arena* arena);
  SetLocationRequest(::google::protobuf::Arena* arena, const SetLocationRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 1,
  };
  // .mavsdk.rpc.remote_id.Location location = 1;
  bool has_location() const;
  void clear_location() ;
  const ::mavsdk::rpc::remote_id::Location& location() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::remote_id::Location* release_location();
  ::mavsdk::rpc::remote_id::Location* mutable_location();
  void set_allocated_location(::mavsdk::rpc::remote_id::Location* value);
  void unsafe_arena_set_allocated_location(::mavsdk::rpc::remote_id::Location* value);
  ::mavsdk::rpc::remote_id::Location* unsafe_arena_release_location();

  private:
  const ::mavsdk::rpc::remote_id::Location& _internal_location() const;
  ::mavsdk::rpc::remote_id::Location* _internal_mutable_location();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.remote_id.SetLocationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::remote_id::Location* location_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_5fid_2fremote_5fid_2eproto;
};// -------------------------------------------------------------------

class SetBasicIdResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.remote_id.SetBasicIdResponse) */ {
 public:
  inline SetBasicIdResponse() : SetBasicIdResponse(nullptr) {}
  ~SetBasicIdResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetBasicIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetBasicIdResponse(const SetBasicIdResponse& from)
      : SetBasicIdResponse(nullptr, from) {}
  SetBasicIdResponse(SetBasicIdResponse&& from) noexcept
    : SetBasicIdResponse() {
    *this = ::std::move(from);
  }

  inline SetBasicIdResponse& operator=(const SetBasicIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetBasicIdResponse& operator=(SetBasicIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetBasicIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetBasicIdResponse* internal_default_instance() {
    return reinterpret_cast<const SetBasicIdResponse*>(
               &_SetBasicIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetBasicIdResponse& a, SetBasicIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetBasicIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetBasicIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetBasicIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetBasicIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetBasicIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetBasicIdResponse& from) {
    SetBasicIdResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetBasicIdResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.remote_id.SetBasicIdResponse";
  }
  protected:
  explicit SetBasicIdResponse(::google::protobuf::Arena* arena);
  SetBasicIdResponse(::google::protobuf::Arena* arena, const SetBasicIdResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRemoteIdResultFieldNumber = 1,
  };
  // .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
  bool has_remote_id_result() const;
  void clear_remote_id_result() ;
  const ::mavsdk::rpc::remote_id::RemoteIdResult& remote_id_result() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::remote_id::RemoteIdResult* release_remote_id_result();
  ::mavsdk::rpc::remote_id::RemoteIdResult* mutable_remote_id_result();
  void set_allocated_remote_id_result(::mavsdk::rpc::remote_id::RemoteIdResult* value);
  void unsafe_arena_set_allocated_remote_id_result(::mavsdk::rpc::remote_id::RemoteIdResult* value);
  ::mavsdk::rpc::remote_id::RemoteIdResult* unsafe_arena_release_remote_id_result();

  private:
  const ::mavsdk::rpc::remote_id::RemoteIdResult& _internal_remote_id_result() const;
  ::mavsdk::rpc::remote_id::RemoteIdResult* _internal_mutable_remote_id_result();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.remote_id.SetBasicIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::remote_id::RemoteIdResult* remote_id_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_5fid_2fremote_5fid_2eproto;
};// -------------------------------------------------------------------

class SetBasicIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.remote_id.SetBasicIdRequest) */ {
 public:
  inline SetBasicIdRequest() : SetBasicIdRequest(nullptr) {}
  ~SetBasicIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetBasicIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetBasicIdRequest(const SetBasicIdRequest& from)
      : SetBasicIdRequest(nullptr, from) {}
  SetBasicIdRequest(SetBasicIdRequest&& from) noexcept
    : SetBasicIdRequest() {
    *this = ::std::move(from);
  }

  inline SetBasicIdRequest& operator=(const SetBasicIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetBasicIdRequest& operator=(SetBasicIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetBasicIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetBasicIdRequest* internal_default_instance() {
    return reinterpret_cast<const SetBasicIdRequest*>(
               &_SetBasicIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SetBasicIdRequest& a, SetBasicIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetBasicIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetBasicIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetBasicIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetBasicIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetBasicIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetBasicIdRequest& from) {
    SetBasicIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetBasicIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.remote_id.SetBasicIdRequest";
  }
  protected:
  explicit SetBasicIdRequest(::google::protobuf::Arena* arena);
  SetBasicIdRequest(::google::protobuf::Arena* arena, const SetBasicIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBasicIdFieldNumber = 1,
  };
  // .mavsdk.rpc.remote_id.BasicId basic_id = 1;
  bool has_basic_id() const;
  void clear_basic_id() ;
  const ::mavsdk::rpc::remote_id::BasicId& basic_id() const;
  PROTOBUF_NODISCARD ::mavsdk::rpc::remote_id::BasicId* release_basic_id();
  ::mavsdk::rpc::remote_id::BasicId* mutable_basic_id();
  void set_allocated_basic_id(::mavsdk::rpc::remote_id::BasicId* value);
  void unsafe_arena_set_allocated_basic_id(::mavsdk::rpc::remote_id::BasicId* value);
  ::mavsdk::rpc::remote_id::BasicId* unsafe_arena_release_basic_id();

  private:
  const ::mavsdk::rpc::remote_id::BasicId& _internal_basic_id() const;
  ::mavsdk::rpc::remote_id::BasicId* _internal_mutable_basic_id();

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.remote_id.SetBasicIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::mavsdk::rpc::remote_id::BasicId* basic_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_5fid_2fremote_5fid_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SetBasicIdRequest

// .mavsdk.rpc.remote_id.BasicId basic_id = 1;
inline bool SetBasicIdRequest::has_basic_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.basic_id_ != nullptr);
  return value;
}
inline void SetBasicIdRequest::clear_basic_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.basic_id_ != nullptr) _impl_.basic_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::remote_id::BasicId& SetBasicIdRequest::_internal_basic_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::remote_id::BasicId* p = _impl_.basic_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::remote_id::BasicId&>(::mavsdk::rpc::remote_id::_BasicId_default_instance_);
}
inline const ::mavsdk::rpc::remote_id::BasicId& SetBasicIdRequest::basic_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.SetBasicIdRequest.basic_id)
  return _internal_basic_id();
}
inline void SetBasicIdRequest::unsafe_arena_set_allocated_basic_id(::mavsdk::rpc::remote_id::BasicId* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.basic_id_);
  }
  _impl_.basic_id_ = reinterpret_cast<::mavsdk::rpc::remote_id::BasicId*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.remote_id.SetBasicIdRequest.basic_id)
}
inline ::mavsdk::rpc::remote_id::BasicId* SetBasicIdRequest::release_basic_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::remote_id::BasicId* released = _impl_.basic_id_;
  _impl_.basic_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::remote_id::BasicId* SetBasicIdRequest::unsafe_arena_release_basic_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.remote_id.SetBasicIdRequest.basic_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::remote_id::BasicId* temp = _impl_.basic_id_;
  _impl_.basic_id_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::remote_id::BasicId* SetBasicIdRequest::_internal_mutable_basic_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.basic_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::remote_id::BasicId>(GetArena());
    _impl_.basic_id_ = reinterpret_cast<::mavsdk::rpc::remote_id::BasicId*>(p);
  }
  return _impl_.basic_id_;
}
inline ::mavsdk::rpc::remote_id::BasicId* SetBasicIdRequest::mutable_basic_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::remote_id::BasicId* _msg = _internal_mutable_basic_id();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.remote_id.SetBasicIdRequest.basic_id)
  return _msg;
}
inline void SetBasicIdRequest::set_allocated_basic_id(::mavsdk::rpc::remote_id::BasicId* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::remote_id::BasicId*>(_impl_.basic_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::remote_id::BasicId*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.basic_id_ = reinterpret_cast<::mavsdk::rpc::remote_id::BasicId*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.remote_id.SetBasicIdRequest.basic_id)
}

// -------------------------------------------------------------------

// SetBasicIdResponse

// .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
inline bool SetBasicIdResponse::has_remote_id_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.remote_id_result_ != nullptr);
  return value;
}
inline void SetBasicIdResponse::clear_remote_id_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.remote_id_result_ != nullptr) _impl_.remote_id_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::remote_id::RemoteIdResult& SetBasicIdResponse::_internal_remote_id_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::remote_id::RemoteIdResult* p = _impl_.remote_id_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::remote_id::RemoteIdResult&>(::mavsdk::rpc::remote_id::_RemoteIdResult_default_instance_);
}
inline const ::mavsdk::rpc::remote_id::RemoteIdResult& SetBasicIdResponse::remote_id_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.SetBasicIdResponse.remote_id_result)
  return _internal_remote_id_result();
}
inline void SetBasicIdResponse::unsafe_arena_set_allocated_remote_id_result(::mavsdk::rpc::remote_id::RemoteIdResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.remote_id_result_);
  }
  _impl_.remote_id_result_ = reinterpret_cast<::mavsdk::rpc::remote_id::RemoteIdResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.remote_id.SetBasicIdResponse.remote_id_result)
}
inline ::mavsdk::rpc::remote_id::RemoteIdResult* SetBasicIdResponse::release_remote_id_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::remote_id::RemoteIdResult* released = _impl_.remote_id_result_;
  _impl_.remote_id_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::remote_id::RemoteIdResult* SetBasicIdResponse::unsafe_arena_release_remote_id_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.remote_id.SetBasicIdResponse.remote_id_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::remote_id::RemoteIdResult* temp = _impl_.remote_id_result_;
  _impl_.remote_id_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::remote_id::RemoteIdResult* SetBasicIdResponse::_internal_mutable_remote_id_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.remote_id_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::remote_id::RemoteIdResult>(GetArena());
    _impl_.remote_id_result_ = reinterpret_cast<::mavsdk::rpc::remote_id::RemoteIdResult*>(p);
  }
  return _impl_.remote_id_result_;
}
inline ::mavsdk::rpc::remote_id::RemoteIdResult* SetBasicIdResponse::mutable_remote_id_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::remote_id::RemoteIdResult* _msg = _internal_mutable_remote_id_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.remote_id.SetBasicIdResponse.remote_id_result)
  return _msg;
}
inline void SetBasicIdResponse::set_allocated_remote_id_result(::mavsdk::rpc::remote_id::RemoteIdResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::remote_id::RemoteIdResult*>(_impl_.remote_id_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::remote_id::RemoteIdResult*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.remote_id_result_ = reinterpret_cast<::mavsdk::rpc::remote_id::RemoteIdResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.remote_id.SetBasicIdResponse.remote_id_result)
}

// -------------------------------------------------------------------

// SetLocationRequest

// .mavsdk.rpc.remote_id.Location location = 1;
inline bool SetLocationRequest::has_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.location_ != nullptr);
  return value;
}
inline void SetLocationRequest::clear_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.location_ != nullptr) _impl_.location_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::remote_id::Location& SetLocationRequest::_internal_location() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::remote_id::Location* p = _impl_.location_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::remote_id::Location&>(::mavsdk::rpc::remote_id::_Location_default_instance_);
}
inline const ::mavsdk::rpc::remote_id::Location& SetLocationRequest::location() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.SetLocationRequest.location)
  return _internal_location();
}
inline void SetLocationRequest::unsafe_arena_set_allocated_location(::mavsdk::rpc::remote_id::Location* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }
  _impl_.location_ = reinterpret_cast<::mavsdk::rpc::remote_id::Location*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.remote_id.SetLocationRequest.location)
}
inline ::mavsdk::rpc::remote_id::Location* SetLocationRequest::release_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::remote_id::Location* released = _impl_.location_;
  _impl_.location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::remote_id::Location* SetLocationRequest::unsafe_arena_release_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.remote_id.SetLocationRequest.location)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::remote_id::Location* temp = _impl_.location_;
  _impl_.location_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::remote_id::Location* SetLocationRequest::_internal_mutable_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.location_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::remote_id::Location>(GetArena());
    _impl_.location_ = reinterpret_cast<::mavsdk::rpc::remote_id::Location*>(p);
  }
  return _impl_.location_;
}
inline ::mavsdk::rpc::remote_id::Location* SetLocationRequest::mutable_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::remote_id::Location* _msg = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.remote_id.SetLocationRequest.location)
  return _msg;
}
inline void SetLocationRequest::set_allocated_location(::mavsdk::rpc::remote_id::Location* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::remote_id::Location*>(_impl_.location_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::remote_id::Location*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.location_ = reinterpret_cast<::mavsdk::rpc::remote_id::Location*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.remote_id.SetLocationRequest.location)
}

// -------------------------------------------------------------------

// SetLocationResponse

// .mavsdk.rpc.remote_id.RemoteIdResult remote_id_result = 1;
inline bool SetLocationResponse::has_remote_id_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.remote_id_result_ != nullptr);
  return value;
}
inline void SetLocationResponse::clear_remote_id_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.remote_id_result_ != nullptr) _impl_.remote_id_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::mavsdk::rpc::remote_id::RemoteIdResult& SetLocationResponse::_internal_remote_id_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::mavsdk::rpc::remote_id::RemoteIdResult* p = _impl_.remote_id_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::mavsdk::rpc::remote_id::RemoteIdResult&>(::mavsdk::rpc::remote_id::_RemoteIdResult_default_instance_);
}
inline const ::mavsdk::rpc::remote_id::RemoteIdResult& SetLocationResponse::remote_id_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.SetLocationResponse.remote_id_result)
  return _internal_remote_id_result();
}
inline void SetLocationResponse::unsafe_arena_set_allocated_remote_id_result(::mavsdk::rpc::remote_id::RemoteIdResult* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.remote_id_result_);
  }
  _impl_.remote_id_result_ = reinterpret_cast<::mavsdk::rpc::remote_id::RemoteIdResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mavsdk.rpc.remote_id.SetLocationResponse.remote_id_result)
}
inline ::mavsdk::rpc::remote_id::RemoteIdResult* SetLocationResponse::release_remote_id_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::remote_id::RemoteIdResult* released = _impl_.remote_id_result_;
  _impl_.remote_id_result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::mavsdk::rpc::remote_id::RemoteIdResult* SetLocationResponse::unsafe_arena_release_remote_id_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.remote_id.SetLocationResponse.remote_id_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::mavsdk::rpc::remote_id::RemoteIdResult* temp = _impl_.remote_id_result_;
  _impl_.remote_id_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::remote_id::RemoteIdResult* SetLocationResponse::_internal_mutable_remote_id_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.remote_id_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::remote_id::RemoteIdResult>(GetArena());
    _impl_.remote_id_result_ = reinterpret_cast<::mavsdk::rpc::remote_id::RemoteIdResult*>(p);
  }
  return _impl_.remote_id_result_;
}
inline ::mavsdk::rpc::remote_id::RemoteIdResult* SetLocationResponse::mutable_remote_id_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::mavsdk::rpc::remote_id::RemoteIdResult* _msg = _internal_mutable_remote_id_result();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.remote_id.SetLocationResponse.remote_id_result)
  return _msg;
}
inline void SetLocationResponse::set_allocated_remote_id_result(::mavsdk::rpc::remote_id::RemoteIdResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::mavsdk::rpc::remote_id::RemoteIdResult*>(_impl_.remote_id_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::mavsdk::rpc::remote_id::RemoteIdResult*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.remote_id_result_ = reinterpret_cast<::mavsdk::rpc::remote_id::RemoteIdResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.remote_id.SetLocationResponse.remote_id_result)
}

// -------------------------------------------------------------------

// BasicId

// uint32 id_type = 1;
inline void BasicId::clear_id_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_type_ = 0u;
}
inline ::uint32_t BasicId::id_type() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.BasicId.id_type)
  return _internal_id_type();
}
inline void BasicId::set_id_type(::uint32_t value) {
  _internal_set_id_type(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.BasicId.id_type)
}
inline ::uint32_t BasicId::_internal_id_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_type_;
}
inline void BasicId::_internal_set_id_type(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_type_ = value;
}

// uint32 ua_type = 2;
inline void BasicId::clear_ua_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ua_type_ = 0u;
}
inline ::uint32_t BasicId::ua_type() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.BasicId.ua_type)
  return _internal_ua_type();
}
inline void BasicId::set_ua_type(::uint32_t value) {
  _internal_set_ua_type(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.BasicId.ua_type)
}
inline ::uint32_t BasicId::_internal_ua_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ua_type_;
}
inline void BasicId::_internal_set_ua_type(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ua_type_ = value;
}

// string uas_id = 3;
inline void BasicId::clear_uas_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uas_id_.ClearToEmpty();
}
inline const std::string& BasicId::uas_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.BasicId.uas_id)
  return _internal_uas_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BasicId::set_uas_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uas_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.BasicId.uas_id)
}
inline std::string* BasicId::mutable_uas_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uas_id();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.remote_id.BasicId.uas_id)
  return _s;
}
inline const std::string& BasicId::_internal_uas_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uas_id_.Get();
}
inline void BasicId::_internal_set_uas_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uas_id_.Set(value, GetArena());
}
inline std::string* BasicId::_internal_mutable_uas_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.uas_id_.Mutable( GetArena());
}
inline std::string* BasicId::release_uas_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.remote_id.BasicId.uas_id)
  return _impl_.uas_id_.Release();
}
inline void BasicId::set_allocated_uas_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uas_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uas_id_.IsDefault()) {
          _impl_.uas_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.remote_id.BasicId.uas_id)
}

// -------------------------------------------------------------------

// Location

// uint32 status = 1;
inline void Location::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_ = 0u;
}
inline ::uint32_t Location::status() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.Location.status)
  return _internal_status();
}
inline void Location::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.Location.status)
}
inline ::uint32_t Location::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void Location::_internal_set_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// uint32 direction = 2;
inline void Location::clear_direction() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.direction_ = 0u;
}
inline ::uint32_t Location::direction() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.Location.direction)
  return _internal_direction();
}
inline void Location::set_direction(::uint32_t value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.Location.direction)
}
inline ::uint32_t Location::_internal_direction() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.direction_;
}
inline void Location::_internal_set_direction(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.direction_ = value;
}

// uint32 speed_horizontal = 3;
inline void Location::clear_speed_horizontal() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.speed_horizontal_ = 0u;
}
inline ::uint32_t Location::speed_horizontal() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.Location.speed_horizontal)
  return _internal_speed_horizontal();
}
inline void Location::set_speed_horizontal(::uint32_t value) {
  _internal_set_speed_horizontal(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.Location.speed_horizontal)
}
inline ::uint32_t Location::_internal_speed_horizontal() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.speed_horizontal_;
}
inline void Location::_internal_set_speed_horizontal(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.speed_horizontal_ = value;
}

// int32 speed_vertical = 4;
inline void Location::clear_speed_vertical() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.speed_vertical_ = 0;
}
inline ::int32_t Location::speed_vertical() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.Location.speed_vertical)
  return _internal_speed_vertical();
}
inline void Location::set_speed_vertical(::int32_t value) {
  _internal_set_speed_vertical(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.Location.speed_vertical)
}
inline ::int32_t Location::_internal_speed_vertical() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.speed_vertical_;
}
inline void Location::_internal_set_speed_vertical(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.speed_vertical_ = value;
}

// int32 latitude = 5;
inline void Location::clear_latitude() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.latitude_ = 0;
}
inline ::int32_t Location::latitude() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.Location.latitude)
  return _internal_latitude();
}
inline void Location::set_latitude(::int32_t value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.Location.latitude)
}
inline ::int32_t Location::_internal_latitude() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.latitude_;
}
inline void Location::_internal_set_latitude(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.latitude_ = value;
}

// int32 longitude = 6;
inline void Location::clear_longitude() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.longitude_ = 0;
}
inline ::int32_t Location::longitude() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.Location.longitude)
  return _internal_longitude();
}
inline void Location::set_longitude(::int32_t value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.Location.longitude)
}
inline ::int32_t Location::_internal_longitude() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.longitude_;
}
inline void Location::_internal_set_longitude(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.longitude_ = value;
}

// float altitude_barometric = 7;
inline void Location::clear_altitude_barometric() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.altitude_barometric_ = 0;
}
inline float Location::altitude_barometric() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.Location.altitude_barometric)
  return _internal_altitude_barometric();
}
inline void Location::set_altitude_barometric(float value) {
  _internal_set_altitude_barometric(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.Location.altitude_barometric)
}
inline float Location::_internal_altitude_barometric() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.altitude_barometric_;
}
inline void Location::_internal_set_altitude_barometric(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.altitude_barometric_ = value;
}

// float altitude_geodetic = 8;
inline void Location::clear_altitude_geodetic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.altitude_geodetic_ = 0;
}
inline float Location::altitude_geodetic() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.Location.altitude_geodetic)
  return _internal_altitude_geodetic();
}
inline void Location::set_altitude_geodetic(float value) {
  _internal_set_altitude_geodetic(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.Location.altitude_geodetic)
}
inline float Location::_internal_altitude_geodetic() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.altitude_geodetic_;
}
inline void Location::_internal_set_altitude_geodetic(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.altitude_geodetic_ = value;
}

// uint32 height_reference = 9;
inline void Location::clear_height_reference() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.height_reference_ = 0u;
}
inline ::uint32_t Location::height_reference() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.Location.height_reference)
  return _internal_height_reference();
}
inline void Location::set_height_reference(::uint32_t value) {
  _internal_set_height_reference(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.Location.height_reference)
}
inline ::uint32_t Location::_internal_height_reference() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.height_reference_;
}
inline void Location::_internal_set_height_reference(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.height_reference_ = value;
}

// float height = 10;
inline void Location::clear_height() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.height_ = 0;
}
inline float Location::height() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.Location.height)
  return _internal_height();
}
inline void Location::set_height(float value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.Location.height)
}
inline float Location::_internal_height() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.height_;
}
inline void Location::_internal_set_height(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.height_ = value;
}

// -------------------------------------------------------------------

// RemoteIdResult

// .mavsdk.rpc.remote_id.RemoteIdResult.Result result = 1;
inline void RemoteIdResult::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_ = 0;
}
inline ::mavsdk::rpc::remote_id::RemoteIdResult_Result RemoteIdResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.RemoteIdResult.result)
  return _internal_result();
}
inline void RemoteIdResult::set_result(::mavsdk::rpc::remote_id::RemoteIdResult_Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.RemoteIdResult.result)
}
inline ::mavsdk::rpc::remote_id::RemoteIdResult_Result RemoteIdResult::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::remote_id::RemoteIdResult_Result>(_impl_.result_);
}
inline void RemoteIdResult::_internal_set_result(::mavsdk::rpc::remote_id::RemoteIdResult_Result value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// string result_str = 2;
inline void RemoteIdResult::clear_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.ClearToEmpty();
}
inline const std::string& RemoteIdResult::result_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.remote_id.RemoteIdResult.result_str)
  return _internal_result_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoteIdResult::set_result_str(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mavsdk.rpc.remote_id.RemoteIdResult.result_str)
}
inline std::string* RemoteIdResult::mutable_result_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result_str();
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.remote_id.RemoteIdResult.result_str)
  return _s;
}
inline const std::string& RemoteIdResult::_internal_result_str() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_str_.Get();
}
inline void RemoteIdResult::_internal_set_result_str(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_str_.Set(value, GetArena());
}
inline std::string* RemoteIdResult::_internal_mutable_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_str_.Mutable( GetArena());
}
inline std::string* RemoteIdResult::release_result_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mavsdk.rpc.remote_id.RemoteIdResult.result_str)
  return _impl_.result_str_.Release();
}
inline void RemoteIdResult::set_allocated_result_str(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_str_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_str_.IsDefault()) {
          _impl_.result_str_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.remote_id.RemoteIdResult.result_str)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace remote_id
}  // namespace rpc
}  // namespace mavsdk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::mavsdk::rpc::remote_id::RemoteIdResult_Result> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::remote_id::RemoteIdResult_Result>() {
  return ::mavsdk::rpc::remote_id::RemoteIdResult_Result_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_remote_5fid_2fremote_5fid_2eproto_2epb_2eh
