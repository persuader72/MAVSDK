// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: remote_id/remote_id.proto
#ifndef GRPC_remote_5fid_2fremote_5fid_2eproto__INCLUDED
#define GRPC_remote_5fid_2fremote_5fid_2eproto__INCLUDED

#include "remote_id/remote_id.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace mavsdk {
namespace rpc {
namespace remote_id {

class RemoteIdService final {
 public:
  static constexpr char const* service_full_name() {
    return "mavsdk.rpc.remote_id.RemoteIdService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    //
    // Update the BasicId structure sent with the basic_id packet
    virtual ::grpc::Status SetBasicId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest& request, ::mavsdk::rpc::remote_id::SetBasicIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetBasicIdResponse>> AsyncSetBasicId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetBasicIdResponse>>(AsyncSetBasicIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetBasicIdResponse>> PrepareAsyncSetBasicId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetBasicIdResponse>>(PrepareAsyncSetBasicIdRaw(context, request, cq));
    }
    //
    // Update the Location structure sent with the location packet
    virtual ::grpc::Status SetLocation(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest& request, ::mavsdk::rpc::remote_id::SetLocationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetLocationResponse>> AsyncSetLocation(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetLocationResponse>>(AsyncSetLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetLocationResponse>> PrepareAsyncSetLocation(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetLocationResponse>>(PrepareAsyncSetLocationRaw(context, request, cq));
    }
    //
    // Update the LocationAccuracy structure sent with the location_accuracy packet
    virtual ::grpc::Status SetLocationAccuracy(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest& request, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>> AsyncSetLocationAccuracy(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>>(AsyncSetLocationAccuracyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>> PrepareAsyncSetLocationAccuracy(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>>(PrepareAsyncSetLocationAccuracyRaw(context, request, cq));
    }
    //
    // Update the System structure sent with the system packet
    virtual ::grpc::Status SetSystem(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest& request, ::mavsdk::rpc::remote_id::SetSystemResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetSystemResponse>> AsyncSetSystem(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetSystemResponse>>(AsyncSetSystemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetSystemResponse>> PrepareAsyncSetSystem(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetSystemResponse>>(PrepareAsyncSetSystemRaw(context, request, cq));
    }
    //
    // Update the OperatorId structure sent with the operator_id packet
    virtual ::grpc::Status SetOperatorId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest& request, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetOperatorIdResponse>> AsyncSetOperatorId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetOperatorIdResponse>>(AsyncSetOperatorIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetOperatorIdResponse>> PrepareAsyncSetOperatorId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetOperatorIdResponse>>(PrepareAsyncSetOperatorIdRaw(context, request, cq));
    }
    //
    // Update the SetSelfId structure sent with the self_id packet
    virtual ::grpc::Status SetSelfId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest& request, ::mavsdk::rpc::remote_id::SetSelfIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetSelfIdResponse>> AsyncSetSelfId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetSelfIdResponse>>(AsyncSetSelfIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetSelfIdResponse>> PrepareAsyncSetSelfId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetSelfIdResponse>>(PrepareAsyncSetSelfIdRaw(context, request, cq));
    }
    //
    // Subscribe to arm status updates.
    std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::remote_id::ArmStatusResponse>> SubscribeArmStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::mavsdk::rpc::remote_id::ArmStatusResponse>>(SubscribeArmStatusRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::remote_id::ArmStatusResponse>> AsyncSubscribeArmStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::remote_id::ArmStatusResponse>>(AsyncSubscribeArmStatusRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::remote_id::ArmStatusResponse>> PrepareAsyncSubscribeArmStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::remote_id::ArmStatusResponse>>(PrepareAsyncSubscribeArmStatusRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      //
      // Update the BasicId structure sent with the basic_id packet
      virtual void SetBasicId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest* request, ::mavsdk::rpc::remote_id::SetBasicIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBasicId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest* request, ::mavsdk::rpc::remote_id::SetBasicIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      //
      // Update the Location structure sent with the location packet
      virtual void SetLocation(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest* request, ::mavsdk::rpc::remote_id::SetLocationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetLocation(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest* request, ::mavsdk::rpc::remote_id::SetLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      //
      // Update the LocationAccuracy structure sent with the location_accuracy packet
      virtual void SetLocationAccuracy(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest* request, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetLocationAccuracy(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest* request, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      //
      // Update the System structure sent with the system packet
      virtual void SetSystem(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest* request, ::mavsdk::rpc::remote_id::SetSystemResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetSystem(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest* request, ::mavsdk::rpc::remote_id::SetSystemResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      //
      // Update the OperatorId structure sent with the operator_id packet
      virtual void SetOperatorId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest* request, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetOperatorId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest* request, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      //
      // Update the SetSelfId structure sent with the self_id packet
      virtual void SetSelfId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest* request, ::mavsdk::rpc::remote_id::SetSelfIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetSelfId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest* request, ::mavsdk::rpc::remote_id::SetSelfIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      //
      // Subscribe to arm status updates.
      virtual void SubscribeArmStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::remote_id::ArmStatusResponse>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetBasicIdResponse>* AsyncSetBasicIdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetBasicIdResponse>* PrepareAsyncSetBasicIdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetLocationResponse>* AsyncSetLocationRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetLocationResponse>* PrepareAsyncSetLocationRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>* AsyncSetLocationAccuracyRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>* PrepareAsyncSetLocationAccuracyRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetSystemResponse>* AsyncSetSystemRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetSystemResponse>* PrepareAsyncSetSystemRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetOperatorIdResponse>* AsyncSetOperatorIdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetOperatorIdResponse>* PrepareAsyncSetOperatorIdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetSelfIdResponse>* AsyncSetSelfIdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mavsdk::rpc::remote_id::SetSelfIdResponse>* PrepareAsyncSetSelfIdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::mavsdk::rpc::remote_id::ArmStatusResponse>* SubscribeArmStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::remote_id::ArmStatusResponse>* AsyncSubscribeArmStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::mavsdk::rpc::remote_id::ArmStatusResponse>* PrepareAsyncSubscribeArmStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status SetBasicId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest& request, ::mavsdk::rpc::remote_id::SetBasicIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetBasicIdResponse>> AsyncSetBasicId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetBasicIdResponse>>(AsyncSetBasicIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetBasicIdResponse>> PrepareAsyncSetBasicId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetBasicIdResponse>>(PrepareAsyncSetBasicIdRaw(context, request, cq));
    }
    ::grpc::Status SetLocation(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest& request, ::mavsdk::rpc::remote_id::SetLocationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetLocationResponse>> AsyncSetLocation(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetLocationResponse>>(AsyncSetLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetLocationResponse>> PrepareAsyncSetLocation(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetLocationResponse>>(PrepareAsyncSetLocationRaw(context, request, cq));
    }
    ::grpc::Status SetLocationAccuracy(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest& request, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>> AsyncSetLocationAccuracy(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>>(AsyncSetLocationAccuracyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>> PrepareAsyncSetLocationAccuracy(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>>(PrepareAsyncSetLocationAccuracyRaw(context, request, cq));
    }
    ::grpc::Status SetSystem(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest& request, ::mavsdk::rpc::remote_id::SetSystemResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetSystemResponse>> AsyncSetSystem(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetSystemResponse>>(AsyncSetSystemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetSystemResponse>> PrepareAsyncSetSystem(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetSystemResponse>>(PrepareAsyncSetSystemRaw(context, request, cq));
    }
    ::grpc::Status SetOperatorId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest& request, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetOperatorIdResponse>> AsyncSetOperatorId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetOperatorIdResponse>>(AsyncSetOperatorIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetOperatorIdResponse>> PrepareAsyncSetOperatorId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetOperatorIdResponse>>(PrepareAsyncSetOperatorIdRaw(context, request, cq));
    }
    ::grpc::Status SetSelfId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest& request, ::mavsdk::rpc::remote_id::SetSelfIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetSelfIdResponse>> AsyncSetSelfId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetSelfIdResponse>>(AsyncSetSelfIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetSelfIdResponse>> PrepareAsyncSetSelfId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetSelfIdResponse>>(PrepareAsyncSetSelfIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::remote_id::ArmStatusResponse>> SubscribeArmStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::mavsdk::rpc::remote_id::ArmStatusResponse>>(SubscribeArmStatusRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::remote_id::ArmStatusResponse>> AsyncSubscribeArmStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::remote_id::ArmStatusResponse>>(AsyncSubscribeArmStatusRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::remote_id::ArmStatusResponse>> PrepareAsyncSubscribeArmStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::mavsdk::rpc::remote_id::ArmStatusResponse>>(PrepareAsyncSubscribeArmStatusRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void SetBasicId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest* request, ::mavsdk::rpc::remote_id::SetBasicIdResponse* response, std::function<void(::grpc::Status)>) override;
      void SetBasicId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest* request, ::mavsdk::rpc::remote_id::SetBasicIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetLocation(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest* request, ::mavsdk::rpc::remote_id::SetLocationResponse* response, std::function<void(::grpc::Status)>) override;
      void SetLocation(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest* request, ::mavsdk::rpc::remote_id::SetLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetLocationAccuracy(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest* request, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* response, std::function<void(::grpc::Status)>) override;
      void SetLocationAccuracy(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest* request, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetSystem(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest* request, ::mavsdk::rpc::remote_id::SetSystemResponse* response, std::function<void(::grpc::Status)>) override;
      void SetSystem(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest* request, ::mavsdk::rpc::remote_id::SetSystemResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetOperatorId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest* request, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* response, std::function<void(::grpc::Status)>) override;
      void SetOperatorId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest* request, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetSelfId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest* request, ::mavsdk::rpc::remote_id::SetSelfIdResponse* response, std::function<void(::grpc::Status)>) override;
      void SetSelfId(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest* request, ::mavsdk::rpc::remote_id::SetSelfIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SubscribeArmStatus(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest* request, ::grpc::ClientReadReactor< ::mavsdk::rpc::remote_id::ArmStatusResponse>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetBasicIdResponse>* AsyncSetBasicIdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetBasicIdResponse>* PrepareAsyncSetBasicIdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetLocationResponse>* AsyncSetLocationRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetLocationResponse>* PrepareAsyncSetLocationRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>* AsyncSetLocationAccuracyRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>* PrepareAsyncSetLocationAccuracyRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetSystemResponse>* AsyncSetSystemRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetSystemResponse>* PrepareAsyncSetSystemRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetOperatorIdResponse>* AsyncSetOperatorIdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetOperatorIdResponse>* PrepareAsyncSetOperatorIdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetSelfIdResponse>* AsyncSetSelfIdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mavsdk::rpc::remote_id::SetSelfIdResponse>* PrepareAsyncSetSelfIdRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::mavsdk::rpc::remote_id::ArmStatusResponse>* SubscribeArmStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest& request) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::remote_id::ArmStatusResponse>* AsyncSubscribeArmStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::mavsdk::rpc::remote_id::ArmStatusResponse>* PrepareAsyncSubscribeArmStatusRaw(::grpc::ClientContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SetBasicId_;
    const ::grpc::internal::RpcMethod rpcmethod_SetLocation_;
    const ::grpc::internal::RpcMethod rpcmethod_SetLocationAccuracy_;
    const ::grpc::internal::RpcMethod rpcmethod_SetSystem_;
    const ::grpc::internal::RpcMethod rpcmethod_SetOperatorId_;
    const ::grpc::internal::RpcMethod rpcmethod_SetSelfId_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeArmStatus_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    //
    // Update the BasicId structure sent with the basic_id packet
    virtual ::grpc::Status SetBasicId(::grpc::ServerContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest* request, ::mavsdk::rpc::remote_id::SetBasicIdResponse* response);
    //
    // Update the Location structure sent with the location packet
    virtual ::grpc::Status SetLocation(::grpc::ServerContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest* request, ::mavsdk::rpc::remote_id::SetLocationResponse* response);
    //
    // Update the LocationAccuracy structure sent with the location_accuracy packet
    virtual ::grpc::Status SetLocationAccuracy(::grpc::ServerContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest* request, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* response);
    //
    // Update the System structure sent with the system packet
    virtual ::grpc::Status SetSystem(::grpc::ServerContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest* request, ::mavsdk::rpc::remote_id::SetSystemResponse* response);
    //
    // Update the OperatorId structure sent with the operator_id packet
    virtual ::grpc::Status SetOperatorId(::grpc::ServerContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest* request, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* response);
    //
    // Update the SetSelfId structure sent with the self_id packet
    virtual ::grpc::Status SetSelfId(::grpc::ServerContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest* request, ::mavsdk::rpc::remote_id::SetSelfIdResponse* response);
    //
    // Subscribe to arm status updates.
    virtual ::grpc::Status SubscribeArmStatus(::grpc::ServerContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest* request, ::grpc::ServerWriter< ::mavsdk::rpc::remote_id::ArmStatusResponse>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBasicId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBasicId() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SetBasicId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBasicId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetBasicIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetBasicIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBasicId(::grpc::ServerContext* context, ::mavsdk::rpc::remote_id::SetBasicIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::remote_id::SetBasicIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetLocation() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SetLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLocation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetLocationRequest* /*request*/, ::mavsdk::rpc::remote_id::SetLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetLocation(::grpc::ServerContext* context, ::mavsdk::rpc::remote_id::SetLocationRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::remote_id::SetLocationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetLocationAccuracy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetLocationAccuracy() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_SetLocationAccuracy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLocationAccuracy(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest* /*request*/, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetLocationAccuracy(::grpc::ServerContext* context, ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetSystem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetSystem() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SetSystem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSystem(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetSystemRequest* /*request*/, ::mavsdk::rpc::remote_id::SetSystemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetSystem(::grpc::ServerContext* context, ::mavsdk::rpc::remote_id::SetSystemRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::remote_id::SetSystemResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetOperatorId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetOperatorId() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SetOperatorId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetOperatorId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetOperatorId(::grpc::ServerContext* context, ::mavsdk::rpc::remote_id::SetOperatorIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::remote_id::SetOperatorIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetSelfId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetSelfId() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SetSelfId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSelfId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetSelfIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetSelfIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetSelfId(::grpc::ServerContext* context, ::mavsdk::rpc::remote_id::SetSelfIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::mavsdk::rpc::remote_id::SetSelfIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeArmStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeArmStatus() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_SubscribeArmStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeArmStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::remote_id::ArmStatusResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeArmStatus(::grpc::ServerContext* context, ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest* request, ::grpc::ServerAsyncWriter< ::mavsdk::rpc::remote_id::ArmStatusResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(6, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SetBasicId<WithAsyncMethod_SetLocation<WithAsyncMethod_SetLocationAccuracy<WithAsyncMethod_SetSystem<WithAsyncMethod_SetOperatorId<WithAsyncMethod_SetSelfId<WithAsyncMethod_SubscribeArmStatus<Service > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_SetBasicId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBasicId() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::remote_id::SetBasicIdRequest, ::mavsdk::rpc::remote_id::SetBasicIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::remote_id::SetBasicIdRequest* request, ::mavsdk::rpc::remote_id::SetBasicIdResponse* response) { return this->SetBasicId(context, request, response); }));}
    void SetMessageAllocatorFor_SetBasicId(
        ::grpc::MessageAllocator< ::mavsdk::rpc::remote_id::SetBasicIdRequest, ::mavsdk::rpc::remote_id::SetBasicIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::remote_id::SetBasicIdRequest, ::mavsdk::rpc::remote_id::SetBasicIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBasicId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBasicId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetBasicIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetBasicIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBasicId(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetBasicIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetBasicIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetLocation() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::remote_id::SetLocationRequest, ::mavsdk::rpc::remote_id::SetLocationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::remote_id::SetLocationRequest* request, ::mavsdk::rpc::remote_id::SetLocationResponse* response) { return this->SetLocation(context, request, response); }));}
    void SetMessageAllocatorFor_SetLocation(
        ::grpc::MessageAllocator< ::mavsdk::rpc::remote_id::SetLocationRequest, ::mavsdk::rpc::remote_id::SetLocationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::remote_id::SetLocationRequest, ::mavsdk::rpc::remote_id::SetLocationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLocation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetLocationRequest* /*request*/, ::mavsdk::rpc::remote_id::SetLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetLocationRequest* /*request*/, ::mavsdk::rpc::remote_id::SetLocationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetLocationAccuracy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetLocationAccuracy() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest* request, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* response) { return this->SetLocationAccuracy(context, request, response); }));}
    void SetMessageAllocatorFor_SetLocationAccuracy(
        ::grpc::MessageAllocator< ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetLocationAccuracy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLocationAccuracy(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest* /*request*/, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetLocationAccuracy(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest* /*request*/, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetSystem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetSystem() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::remote_id::SetSystemRequest, ::mavsdk::rpc::remote_id::SetSystemResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::remote_id::SetSystemRequest* request, ::mavsdk::rpc::remote_id::SetSystemResponse* response) { return this->SetSystem(context, request, response); }));}
    void SetMessageAllocatorFor_SetSystem(
        ::grpc::MessageAllocator< ::mavsdk::rpc::remote_id::SetSystemRequest, ::mavsdk::rpc::remote_id::SetSystemResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::remote_id::SetSystemRequest, ::mavsdk::rpc::remote_id::SetSystemResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetSystem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSystem(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetSystemRequest* /*request*/, ::mavsdk::rpc::remote_id::SetSystemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetSystem(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetSystemRequest* /*request*/, ::mavsdk::rpc::remote_id::SetSystemResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetOperatorId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetOperatorId() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::remote_id::SetOperatorIdRequest, ::mavsdk::rpc::remote_id::SetOperatorIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest* request, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* response) { return this->SetOperatorId(context, request, response); }));}
    void SetMessageAllocatorFor_SetOperatorId(
        ::grpc::MessageAllocator< ::mavsdk::rpc::remote_id::SetOperatorIdRequest, ::mavsdk::rpc::remote_id::SetOperatorIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::remote_id::SetOperatorIdRequest, ::mavsdk::rpc::remote_id::SetOperatorIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetOperatorId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetOperatorId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetOperatorId(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetSelfId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetSelfId() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::remote_id::SetSelfIdRequest, ::mavsdk::rpc::remote_id::SetSelfIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::remote_id::SetSelfIdRequest* request, ::mavsdk::rpc::remote_id::SetSelfIdResponse* response) { return this->SetSelfId(context, request, response); }));}
    void SetMessageAllocatorFor_SetSelfId(
        ::grpc::MessageAllocator< ::mavsdk::rpc::remote_id::SetSelfIdRequest, ::mavsdk::rpc::remote_id::SetSelfIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mavsdk::rpc::remote_id::SetSelfIdRequest, ::mavsdk::rpc::remote_id::SetSelfIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetSelfId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSelfId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetSelfIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetSelfIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetSelfId(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetSelfIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetSelfIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeArmStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeArmStatus() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackServerStreamingHandler< ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest, ::mavsdk::rpc::remote_id::ArmStatusResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest* request) { return this->SubscribeArmStatus(context, request); }));
    }
    ~WithCallbackMethod_SubscribeArmStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeArmStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::remote_id::ArmStatusResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::mavsdk::rpc::remote_id::ArmStatusResponse>* SubscribeArmStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_SetBasicId<WithCallbackMethod_SetLocation<WithCallbackMethod_SetLocationAccuracy<WithCallbackMethod_SetSystem<WithCallbackMethod_SetOperatorId<WithCallbackMethod_SetSelfId<WithCallbackMethod_SubscribeArmStatus<Service > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_SetBasicId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBasicId() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SetBasicId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBasicId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetBasicIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetBasicIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetLocation() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SetLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLocation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetLocationRequest* /*request*/, ::mavsdk::rpc::remote_id::SetLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetLocationAccuracy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetLocationAccuracy() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_SetLocationAccuracy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLocationAccuracy(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest* /*request*/, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetSystem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetSystem() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SetSystem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSystem(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetSystemRequest* /*request*/, ::mavsdk::rpc::remote_id::SetSystemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetOperatorId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetOperatorId() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SetOperatorId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetOperatorId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetSelfId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetSelfId() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SetSelfId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSelfId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetSelfIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetSelfIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeArmStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeArmStatus() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_SubscribeArmStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeArmStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::remote_id::ArmStatusResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBasicId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBasicId() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SetBasicId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBasicId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetBasicIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetBasicIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBasicId(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetLocation() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SetLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLocation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetLocationRequest* /*request*/, ::mavsdk::rpc::remote_id::SetLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetLocation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetLocationAccuracy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetLocationAccuracy() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_SetLocationAccuracy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLocationAccuracy(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest* /*request*/, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetLocationAccuracy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetSystem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetSystem() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SetSystem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSystem(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetSystemRequest* /*request*/, ::mavsdk::rpc::remote_id::SetSystemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetSystem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetOperatorId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetOperatorId() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_SetOperatorId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetOperatorId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetOperatorId(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetSelfId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetSelfId() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SetSelfId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSelfId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetSelfIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetSelfIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetSelfId(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeArmStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeArmStatus() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_SubscribeArmStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeArmStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::remote_id::ArmStatusResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeArmStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(6, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBasicId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBasicId() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBasicId(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBasicId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBasicId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetBasicIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetBasicIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBasicId(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetLocation() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetLocation(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLocation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetLocationRequest* /*request*/, ::mavsdk::rpc::remote_id::SetLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetLocationAccuracy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetLocationAccuracy() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetLocationAccuracy(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetLocationAccuracy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetLocationAccuracy(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest* /*request*/, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetLocationAccuracy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetSystem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetSystem() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetSystem(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetSystem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSystem(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetSystemRequest* /*request*/, ::mavsdk::rpc::remote_id::SetSystemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetSystem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetOperatorId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetOperatorId() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetOperatorId(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetOperatorId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetOperatorId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetOperatorId(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetSelfId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetSelfId() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetSelfId(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetSelfId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetSelfId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetSelfIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetSelfIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetSelfId(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeArmStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeArmStatus() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->SubscribeArmStatus(context, request); }));
    }
    ~WithRawCallbackMethod_SubscribeArmStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeArmStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::remote_id::ArmStatusResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* SubscribeArmStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBasicId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBasicId() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::remote_id::SetBasicIdRequest, ::mavsdk::rpc::remote_id::SetBasicIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::remote_id::SetBasicIdRequest, ::mavsdk::rpc::remote_id::SetBasicIdResponse>* streamer) {
                       return this->StreamedSetBasicId(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBasicId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBasicId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetBasicIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetBasicIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBasicId(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::remote_id::SetBasicIdRequest,::mavsdk::rpc::remote_id::SetBasicIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetLocation() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::remote_id::SetLocationRequest, ::mavsdk::rpc::remote_id::SetLocationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::remote_id::SetLocationRequest, ::mavsdk::rpc::remote_id::SetLocationResponse>* streamer) {
                       return this->StreamedSetLocation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetLocation(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetLocationRequest* /*request*/, ::mavsdk::rpc::remote_id::SetLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetLocation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::remote_id::SetLocationRequest,::mavsdk::rpc::remote_id::SetLocationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetLocationAccuracy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetLocationAccuracy() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>* streamer) {
                       return this->StreamedSetLocationAccuracy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetLocationAccuracy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetLocationAccuracy(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest* /*request*/, ::mavsdk::rpc::remote_id::SetLocationAccuracyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetLocationAccuracy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::remote_id::SetLocationAccuracyRequest,::mavsdk::rpc::remote_id::SetLocationAccuracyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetSystem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetSystem() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::remote_id::SetSystemRequest, ::mavsdk::rpc::remote_id::SetSystemResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::remote_id::SetSystemRequest, ::mavsdk::rpc::remote_id::SetSystemResponse>* streamer) {
                       return this->StreamedSetSystem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetSystem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetSystem(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetSystemRequest* /*request*/, ::mavsdk::rpc::remote_id::SetSystemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetSystem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::remote_id::SetSystemRequest,::mavsdk::rpc::remote_id::SetSystemResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetOperatorId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetOperatorId() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::remote_id::SetOperatorIdRequest, ::mavsdk::rpc::remote_id::SetOperatorIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::remote_id::SetOperatorIdRequest, ::mavsdk::rpc::remote_id::SetOperatorIdResponse>* streamer) {
                       return this->StreamedSetOperatorId(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetOperatorId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetOperatorId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetOperatorIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetOperatorIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetOperatorId(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::remote_id::SetOperatorIdRequest,::mavsdk::rpc::remote_id::SetOperatorIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetSelfId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetSelfId() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mavsdk::rpc::remote_id::SetSelfIdRequest, ::mavsdk::rpc::remote_id::SetSelfIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mavsdk::rpc::remote_id::SetSelfIdRequest, ::mavsdk::rpc::remote_id::SetSelfIdResponse>* streamer) {
                       return this->StreamedSetSelfId(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetSelfId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetSelfId(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SetSelfIdRequest* /*request*/, ::mavsdk::rpc::remote_id::SetSelfIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetSelfId(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mavsdk::rpc::remote_id::SetSelfIdRequest,::mavsdk::rpc::remote_id::SetSelfIdResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SetBasicId<WithStreamedUnaryMethod_SetLocation<WithStreamedUnaryMethod_SetLocationAccuracy<WithStreamedUnaryMethod_SetSystem<WithStreamedUnaryMethod_SetOperatorId<WithStreamedUnaryMethod_SetSelfId<Service > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_SubscribeArmStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_SubscribeArmStatus() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest, ::mavsdk::rpc::remote_id::ArmStatusResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest, ::mavsdk::rpc::remote_id::ArmStatusResponse>* streamer) {
                       return this->StreamedSubscribeArmStatus(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_SubscribeArmStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubscribeArmStatus(::grpc::ServerContext* /*context*/, const ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest* /*request*/, ::grpc::ServerWriter< ::mavsdk::rpc::remote_id::ArmStatusResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribeArmStatus(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::mavsdk::rpc::remote_id::SubscribeArmStatusRequest,::mavsdk::rpc::remote_id::ArmStatusResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_SubscribeArmStatus<Service > SplitStreamedService;
  typedef WithStreamedUnaryMethod_SetBasicId<WithStreamedUnaryMethod_SetLocation<WithStreamedUnaryMethod_SetLocationAccuracy<WithStreamedUnaryMethod_SetSystem<WithStreamedUnaryMethod_SetOperatorId<WithStreamedUnaryMethod_SetSelfId<WithSplitStreamingMethod_SubscribeArmStatus<Service > > > > > > > StreamedService;
};

}  // namespace remote_id
}  // namespace rpc
}  // namespace mavsdk


#endif  // GRPC_remote_5fid_2fremote_5fid_2eproto__INCLUDED
